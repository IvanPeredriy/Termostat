
AVRASM ver. 2.1.30  D:\AVR projekts\001 нкхлохюдю реплнярюр\Thermostat V3 by Peredriy\Debug\List\Termostat.asm Thu Apr 26 14:37:31 2018

D:\AVR projekts\001 нкхлохюдю реплнярюр\Thermostat V3 by Peredriy\Debug\List\Termostat.asm(1086): warning: Register r7 already defined by the .DEF directive
D:\AVR projekts\001 нкхлохюдю реплнярюр\Thermostat V3 by Peredriy\Debug\List\Termostat.asm(1087): warning: Register r6 already defined by the .DEF directive
D:\AVR projekts\001 нкхлохюдю реплнярюр\Thermostat V3 by Peredriy\Debug\List\Termostat.asm(1088): warning: Register r9 already defined by the .DEF directive
D:\AVR projekts\001 нкхлохюдю реплнярюр\Thermostat V3 by Peredriy\Debug\List\Termostat.asm(1089): warning: Register r8 already defined by the .DEF directive
D:\AVR projekts\001 нкхлохюдю реплнярюр\Thermostat V3 by Peredriy\Debug\List\Termostat.asm(1090): warning: Register r11 already defined by the .DEF directive
D:\AVR projekts\001 нкхлохюдю реплнярюр\Thermostat V3 by Peredriy\Debug\List\Termostat.asm(1091): warning: Register r10 already defined by the .DEF directive
D:\AVR projekts\001 нкхлохюдю реплнярюр\Thermostat V3 by Peredriy\Debug\List\Termostat.asm(1092): warning: Register r13 already defined by the .DEF directive
D:\AVR projekts\001 нкхлохюдю реплнярюр\Thermostat V3 by Peredriy\Debug\List\Termostat.asm(1093): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8A
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8A
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _t1=R7
                 	.DEF _t2=R6
                 	.DEF _t3=R9
                 	.DEF _i=R8
                 	.DEF _wait_timer1=R11
                 	.DEF _wait_timer_for_termostat=R10
                 	.DEF _counter_buzzer=R13
                 	.DEF _screen=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c02d      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 c5f4      	RJMP _timer2_ovf_isr
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 c507      	RJMP _timer1_ovf_isr
000009 c48b      	RJMP _timer0_ovf_isr
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000013 0010      	.DW  0x0010
000014 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000015 1400      	.DB  0x0,0x14
                 
                 _0x3:
000016 dd05
000017 5143
000018 3199
000019 5d21      	.DB  0x5,0xDD,0x43,0x51,0x99,0x31,0x21,0x5D
00001a 1101
00001b 3185
00001c 0ba3
00001d e127      	.DB  0x1,0x11,0x85,0x31,0xA3,0xB,0x27,0xE1
00001e 89a7
00001f 2be9      	.DB  0xA7,0x89,0xE9,0x2B
                 _0x4:
000020 03e8      	.DB  0xE8,0x3
                 
                 __GLOBAL_INI_TBL:
000021 0003      	.DW  0x03
000022 0002      	.DW  0x02
000023 0026      	.DW  __REG_BIT_VARS*2
                 
000024 0002      	.DW  0x02
000025 000c      	.DW  0x0C
000026 002a      	.DW  __REG_VARS*2
                 
000027 0014      	.DW  0x14
000028 0160      	.DW  _kod_G000
000029 002c      	.DW  _0x3*2
                 
00002a 0002      	.DW  0x02
00002b 017c      	.DW  _adc
00002c 0040      	.DW  _0x4*2
                 
                 _0xFFFFFFFF:
00002d 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00002e 94f8      	CLI
00002f 27ee      	CLR  R30
000030 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000031 e0f1      	LDI  R31,1
000032 bffb      	OUT  GICR,R31
000033 bfeb      	OUT  GICR,R30
000034 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000035 e08d      	LDI  R24,(14-2)+1
000036 e0a2      	LDI  R26,2
000037 27bb      	CLR  R27
                 __CLEAR_REG:
000038 93ed      	ST   X+,R30
000039 958a      	DEC  R24
00003a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00003b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00003c e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00003d e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00003e 93ed      	ST   X+,R30
00003f 9701      	SBIW R24,1
000040 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000041 e4e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000042 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000043 9185      	LPM  R24,Z+
000044 9195      	LPM  R25,Z+
000045 9700      	SBIW R24,0
000046 f061      	BREQ __GLOBAL_INI_END
000047 91a5      	LPM  R26,Z+
000048 91b5      	LPM  R27,Z+
000049 9005      	LPM  R0,Z+
00004a 9015      	LPM  R1,Z+
00004b 01bf      	MOVW R22,R30
00004c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00004d 9005      	LPM  R0,Z+
00004e 920d      	ST   X+,R0
00004f 9701      	SBIW R24,1
000050 f7e1      	BRNE __GLOBAL_INI_LOOP
000051 01fb      	MOVW R30,R22
000052 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000053 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000054 bfed      	OUT  SPL,R30
000055 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000056 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000057 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000058 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000059 c852      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*******************************************************
                 ;This program was created by the
                 ;CodeWizardAVR V3.12 Advanced
                 ;Automatic Program Generator
                 ;╘ Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 ;
                 ;Project : Termostat
                 ;Version : v 3.0
                 ;Date    : 21.04.2018
                 ;Author  : Ivan Peredriy
                 ;Company :
                 ;Comments:
                 ;рЕПЛНЯРЮР  ДКЪ НКХЛОХЮДШ
                 ;
                 ;
                 ;Chip type               : ATmega8A
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8,000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*******************************************************/
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;#include <delay.h>
                 ;
                 ;// Declare your global variables here
                 ;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;#define coeff_beta 15
                 ;#define coeff_alpha 1
                 ;#define N 4
                 ;eeprom signed char P4;
                 ;eeprom signed int P1=20, P2=150;
                 ;eeprom unsigned char P0, P3, P5, P6;
                 ;
                 ;/*
                 ;PD0 = A
                 ;PD1 = F
                 ;PD2 = B
                 ;PD3 = E
                 ;PD4 = D
                 ;PD5 = G
                 ;PD6 = C
                 ;PD7 = H
                 ;*/
                 ;
                 ;unsigned static char kod[20]={0x05, 0xDD, 0x43, 0x51, 0x99, 0x31, 0x21, 0x5D, 0x01, 0x11, 0x85, 0x31, 0xA3, 0x0B, 0x27,  ...
                 
                 	.DSEG
                 ;unsigned char t1,t2,t3,i;
                 ;unsigned char wait_timer1, wait_timer_for_termostat, counter_buzzer=20;
                 ;signed char screen=0;
                 ;int par, buffer, minus=0, buzzer;
                 ;int adc=1000;
                 ;int filterin, wait_timer2=0, currtemp;
                 ;bit knopka_left, knopka_right, knopka_middle, avariya_datchik_ne_podkluchen=0, show_temp=1, show_termostat=0, show_ustav ...
                 ;P00=0, P01=0, P02=0, P03=0, P04=0, P05=0, P06=0, exit=0, show_par=0, flag_enter=0, OVERHEAT=0, flag_minus=0, flag_perekl ...
                 ;
                 ;int getkodes(signed int x) {
                 ; 0000 003C int getkodes(signed int x) {
                 
                 	.CSEG
                 _getkodes:
                 ; .FSTART _getkodes
                 ; 0000 003D  char c1, c2, c3;
                 ; 0000 003E 
                 ; 0000 003F                 c1=x%10;
00005a 93ba      	ST   -Y,R27
00005b 93aa      	ST   -Y,R26
00005c dc71      	RCALL __SAVELOCR4
                 ;	x -> Y+4
                 ;	c1 -> R17
                 ;	c2 -> R16
                 ;	c3 -> R19
00005d 81ac      	LDD  R26,Y+4
00005e 81bd      	LDD  R27,Y+4+1
00005f e0ea      	LDI  R30,LOW(10)
000060 e0f0      	LDI  R31,HIGH(10)
000061 dc19      	RCALL __MODW21
000062 2f1e      	MOV  R17,R30
                 ; 0000 0040                 c2=(x%100)/10;
000063 81ac      	LDD  R26,Y+4
000064 81bd      	LDD  R27,Y+4+1
000065 e6e4      	LDI  R30,LOW(100)
000066 e0f0      	LDI  R31,HIGH(100)
000067 dc13      	RCALL __MODW21
000068 01df      	MOVW R26,R30
000069 e0ea      	LDI  R30,LOW(10)
00006a e0f0      	LDI  R31,HIGH(10)
00006b dc0a      	RCALL __DIVW21
00006c 2f0e      	MOV  R16,R30
                 ; 0000 0041                 c3=(x%1000)/100;
00006d 81ac      	LDD  R26,Y+4
00006e 81bd      	LDD  R27,Y+4+1
00006f eee8      	LDI  R30,LOW(1000)
000070 e0f3      	LDI  R31,HIGH(1000)
000071 dc09      	RCALL __MODW21
000072 01df      	MOVW R26,R30
000073 e6e4      	LDI  R30,LOW(100)
000074 e0f0      	LDI  R31,HIGH(100)
000075 dc00      	RCALL __DIVW21
000076 2f3e      	MOV  R19,R30
                 ; 0000 0042 
                 ; 0000 0043                                 switch(c1) {
000077 2fe1      	MOV  R30,R17
000078 d866      	RCALL SUBOPT_0x0
                 ; 0000 0044                             case 0: {t1=kod[0]; break;}
000079 f419      	BRNE _0x8
00007a 9070 0160 	LDS  R7,_kod_G000
00007c c02c      	RJMP _0x7
                 ; 0000 0045                             case 1: {t1=kod[1]; break;}
                 _0x8:
00007d d864      	RCALL SUBOPT_0x1
00007e f419      	BRNE _0x9
                +
00007f 9070 0161+LDS R7 , _kod_G000 + ( 1 )
                 	__GETBRMN 7,_kod_G000,1
000081 c027      	RJMP _0x7
                 ; 0000 0046                             case 2: {t1=kod[2]; break;}
                 _0x9:
000082 d863      	RCALL SUBOPT_0x2
000083 f419      	BRNE _0xA
                +
000084 9070 0162+LDS R7 , _kod_G000 + ( 2 )
                 	__GETBRMN 7,_kod_G000,2
000086 c022      	RJMP _0x7
                 ; 0000 0047                             case 3: {t1=kod[3]; break;}
                 _0xA:
000087 d862      	RCALL SUBOPT_0x3
000088 f419      	BRNE _0xB
                +
000089 9070 0163+LDS R7 , _kod_G000 + ( 3 )
                 	__GETBRMN 7,_kod_G000,3
00008b c01d      	RJMP _0x7
                 ; 0000 0048                             case 4: {t1=kod[4]; break;}
                 _0xB:
00008c d861      	RCALL SUBOPT_0x4
00008d f419      	BRNE _0xC
                +
00008e 9070 0164+LDS R7 , _kod_G000 + ( 4 )
                 	__GETBRMN 7,_kod_G000,4
000090 c018      	RJMP _0x7
                 ; 0000 0049                             case 5: {t1=kod[5]; break;}
                 _0xC:
000091 d860      	RCALL SUBOPT_0x5
000092 f419      	BRNE _0xD
                +
000093 9070 0165+LDS R7 , _kod_G000 + ( 5 )
                 	__GETBRMN 7,_kod_G000,5
000095 c013      	RJMP _0x7
                 ; 0000 004A                             case 6: {t1=kod[6]; break;}
                 _0xD:
000096 d85f      	RCALL SUBOPT_0x6
000097 f419      	BRNE _0xE
                +
000098 9070 0166+LDS R7 , _kod_G000 + ( 6 )
                 	__GETBRMN 7,_kod_G000,6
00009a c00e      	RJMP _0x7
                 ; 0000 004B                             case 7: {t1=kod[7]; break;}
                 _0xE:
00009b d85e      	RCALL SUBOPT_0x7
00009c f419      	BRNE _0xF
                +
00009d 9070 0167+LDS R7 , _kod_G000 + ( 7 )
                 	__GETBRMN 7,_kod_G000,7
00009f c009      	RJMP _0x7
                 ; 0000 004C                             case 8: {t1=kod[8]; break;}
                 _0xF:
0000a0 d85d      	RCALL SUBOPT_0x8
0000a1 f419      	BRNE _0x10
                +
0000a2 9070 0168+LDS R7 , _kod_G000 + ( 8 )
                 	__GETBRMN 7,_kod_G000,8
0000a4 c004      	RJMP _0x7
                 ; 0000 004D                             case 9: {t1=kod[9]; break;}
                 _0x10:
0000a5 d85c      	RCALL SUBOPT_0x9
0000a6 f411      	BRNE _0x7
                +
0000a7 9070 0169+LDS R7 , _kod_G000 + ( 9 )
                 	__GETBRMN 7,_kod_G000,9
                 ; 0000 004E                             }
                 _0x7:
                 ; 0000 004F 
                 ; 0000 0050                                 switch(c2) {
0000a9 2fe0      	MOV  R30,R16
0000aa d834      	RCALL SUBOPT_0x0
                 ; 0000 0051                             case 0: {t2=kod[0]; break;}
0000ab f411      	BRNE _0x15
0000ac d859      	RCALL SUBOPT_0xA
0000ad c02c      	RJMP _0x14
                 ; 0000 0052                             case 1: {t2=kod[1]; break;}
                 _0x15:
0000ae d833      	RCALL SUBOPT_0x1
0000af f419      	BRNE _0x16
                +
0000b0 9060 0161+LDS R6 , _kod_G000 + ( 1 )
                 	__GETBRMN 6,_kod_G000,1
0000b2 c027      	RJMP _0x14
                 ; 0000 0053                             case 2: {t2=kod[2]; break;}
                 _0x16:
0000b3 d832      	RCALL SUBOPT_0x2
0000b4 f419      	BRNE _0x17
                +
0000b5 9060 0162+LDS R6 , _kod_G000 + ( 2 )
                 	__GETBRMN 6,_kod_G000,2
0000b7 c022      	RJMP _0x14
                 ; 0000 0054                             case 3: {t2=kod[3]; break;}
                 _0x17:
0000b8 d831      	RCALL SUBOPT_0x3
0000b9 f419      	BRNE _0x18
                +
0000ba 9060 0163+LDS R6 , _kod_G000 + ( 3 )
                 	__GETBRMN 6,_kod_G000,3
0000bc c01d      	RJMP _0x14
                 ; 0000 0055                             case 4: {t2=kod[4]; break;}
                 _0x18:
0000bd d830      	RCALL SUBOPT_0x4
0000be f419      	BRNE _0x19
                +
0000bf 9060 0164+LDS R6 , _kod_G000 + ( 4 )
                 	__GETBRMN 6,_kod_G000,4
0000c1 c018      	RJMP _0x14
                 ; 0000 0056                             case 5: {t2=kod[5]; break;}
                 _0x19:
0000c2 d82f      	RCALL SUBOPT_0x5
0000c3 f419      	BRNE _0x1A
                +
0000c4 9060 0165+LDS R6 , _kod_G000 + ( 5 )
                 	__GETBRMN 6,_kod_G000,5
0000c6 c013      	RJMP _0x14
                 ; 0000 0057                             case 6: {t2=kod[6]; break;}
                 _0x1A:
0000c7 d82e      	RCALL SUBOPT_0x6
0000c8 f419      	BRNE _0x1B
                +
0000c9 9060 0166+LDS R6 , _kod_G000 + ( 6 )
                 	__GETBRMN 6,_kod_G000,6
0000cb c00e      	RJMP _0x14
                 ; 0000 0058                             case 7: {t2=kod[7]; break;}
                 _0x1B:
0000cc d82d      	RCALL SUBOPT_0x7
0000cd f419      	BRNE _0x1C
                +
0000ce 9060 0167+LDS R6 , _kod_G000 + ( 7 )
                 	__GETBRMN 6,_kod_G000,7
0000d0 c009      	RJMP _0x14
                 ; 0000 0059                             case 8: {t2=kod[8]; break;}
                 _0x1C:
0000d1 d82c      	RCALL SUBOPT_0x8
0000d2 f419      	BRNE _0x1D
                +
0000d3 9060 0168+LDS R6 , _kod_G000 + ( 8 )
                 	__GETBRMN 6,_kod_G000,8
0000d5 c004      	RJMP _0x14
                 ; 0000 005A                             case 9: {t2=kod[9]; break;}
                 _0x1D:
0000d6 d82b      	RCALL SUBOPT_0x9
0000d7 f411      	BRNE _0x14
                +
0000d8 9060 0169+LDS R6 , _kod_G000 + ( 9 )
                 	__GETBRMN 6,_kod_G000,9
                 ; 0000 005B                             }
                 _0x14:
                 ; 0000 005C 
                 ; 0000 005D                                 switch(c3) {
0000da 2fe3      	MOV  R30,R19
0000db d803      	RCALL SUBOPT_0x0
                 ; 0000 005E                             case 0: {t3=kod[0]; break;}
0000dc f411      	BRNE _0x22
0000dd d82b      	RCALL SUBOPT_0xB
0000de c02c      	RJMP _0x21
                 ; 0000 005F                             case 1: {t3=kod[1]; break;}
                 _0x22:
0000df d802      	RCALL SUBOPT_0x1
0000e0 f419      	BRNE _0x23
                +
0000e1 9090 0161+LDS R9 , _kod_G000 + ( 1 )
                 	__GETBRMN 9,_kod_G000,1
0000e3 c027      	RJMP _0x21
                 ; 0000 0060                             case 2: {t3=kod[2]; break;}
                 _0x23:
0000e4 d801      	RCALL SUBOPT_0x2
0000e5 f419      	BRNE _0x24
                +
0000e6 9090 0162+LDS R9 , _kod_G000 + ( 2 )
                 	__GETBRMN 9,_kod_G000,2
0000e8 c022      	RJMP _0x21
                 ; 0000 0061                             case 3: {t3=kod[3]; break;}
                 _0x24:
0000e9 d800      	RCALL SUBOPT_0x3
0000ea f419      	BRNE _0x25
                +
0000eb 9090 0163+LDS R9 , _kod_G000 + ( 3 )
                 	__GETBRMN 9,_kod_G000,3
0000ed c01d      	RJMP _0x21
                 ; 0000 0062                             case 4: {t3=kod[4]; break;}
                 _0x25:
0000ee d7ff      	RCALL SUBOPT_0x4
0000ef f419      	BRNE _0x26
                +
0000f0 9090 0164+LDS R9 , _kod_G000 + ( 4 )
                 	__GETBRMN 9,_kod_G000,4
0000f2 c018      	RJMP _0x21
                 ; 0000 0063                             case 5: {t3=kod[5]; break;}
                 _0x26:
0000f3 d7fe      	RCALL SUBOPT_0x5
0000f4 f419      	BRNE _0x27
                +
0000f5 9090 0165+LDS R9 , _kod_G000 + ( 5 )
                 	__GETBRMN 9,_kod_G000,5
0000f7 c013      	RJMP _0x21
                 ; 0000 0064                             case 6: {t3=kod[6]; break;}
                 _0x27:
0000f8 d7fd      	RCALL SUBOPT_0x6
0000f9 f419      	BRNE _0x28
                +
0000fa 9090 0166+LDS R9 , _kod_G000 + ( 6 )
                 	__GETBRMN 9,_kod_G000,6
0000fc c00e      	RJMP _0x21
                 ; 0000 0065                             case 7: {t3=kod[7]; break;}
                 _0x28:
0000fd d7fc      	RCALL SUBOPT_0x7
0000fe f419      	BRNE _0x29
                +
0000ff 9090 0167+LDS R9 , _kod_G000 + ( 7 )
                 	__GETBRMN 9,_kod_G000,7
000101 c009      	RJMP _0x21
                 ; 0000 0066                             case 8: {t3=kod[8]; break;}
                 _0x29:
000102 d7fb      	RCALL SUBOPT_0x8
000103 f419      	BRNE _0x2A
                +
000104 9090 0168+LDS R9 , _kod_G000 + ( 8 )
                 	__GETBRMN 9,_kod_G000,8
000106 c004      	RJMP _0x21
                 ; 0000 0067                             case 9: {t3=kod[9]; break;}
                 _0x2A:
000107 d7fa      	RCALL SUBOPT_0x9
000108 f411      	BRNE _0x21
                +
000109 9090 0169+LDS R9 , _kod_G000 + ( 9 )
                 	__GETBRMN 9,_kod_G000,9
                 ; 0000 0068                             }
                 _0x21:
                 ; 0000 0069 
                 ; 0000 006A            return 0;
00010b e0e0      	LDI  R30,LOW(0)
00010c e0f0      	LDI  R31,HIGH(0)
00010d dbc5      	RCALL __LOADLOCR4
00010e 9626      	ADIW R28,6
00010f 9508      	RET
                 ; 0000 006B 
                 ; 0000 006C }
                 ; .FEND
                 ;
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 006F {
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0070 ADMUX=adc_input | ADC_VREF_TYPE;
000110 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000111 81e8      	LD   R30,Y
000112 64e0      	ORI  R30,0x40
000113 b9e7      	OUT  0x7,R30
                 ; 0000 0071 delay_us(10);
                +
000114 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000115 958a     +DEC R24
000116 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0072 ADCSRA|=(1<<ADSC);
000117 9a36      	SBI  0x6,6
                 ; 0000 0073 while ((ADCSRA & (1<<ADIF))==0);
                 _0x2C:
000118 9b34      	SBIS 0x6,4
000119 cffe      	RJMP _0x2C
                 ; 0000 0074 ADCSRA|=(1<<ADIF);
00011a 9a34      	SBI  0x6,4
                 ; 0000 0075 return ADCW;
00011b b1e4      	IN   R30,0x4
00011c b1f5      	IN   R31,0x4+1
00011d 9621      	ADIW R28,1
00011e 9508      	RET
                 ; 0000 0076 }
                 ; .FEND
                 ;
                 ;float readtemp()
                 ; 0000 0079 {
                 _readtemp:
                 ; .FSTART _readtemp
                 ; 0000 007A float temper;
                 ; 0000 007B   if(adc < 10)
00011f 9724      	SBIW R28,4
                 ;	temper -> Y+0
000120 d7eb      	RCALL SUBOPT_0xC
000121 971a      	SBIW R26,10
000122 f414      	BRGE _0x2F
                 ; 0000 007C     {
                 ; 0000 007D      OVERHEAT=1;
000123 9468      	SET
000124 f842      	BLD  R4,2
                 ; 0000 007E     };
                 _0x2F:
                 ; 0000 007F 
                 ; 0000 0080   if (adc > 17 && adc < 21)
000125 d7e6      	RCALL SUBOPT_0xC
000126 9752      	SBIW R26,18
000127 f01c      	BRLT _0x31
000128 d7e3      	RCALL SUBOPT_0xC
000129 9755      	SBIW R26,21
00012a f00c      	BRLT _0x32
                 _0x31:
00012b c00e      	RJMP _0x30
                 _0x32:
                 ; 0000 0081     {
                 ; 0000 0082      temper=(145)+(21-adc)*2.22;
00012c d7df      	RCALL SUBOPT_0xC
00012d e1e5      	LDI  R30,LOW(21)
00012e e0f0      	LDI  R31,HIGH(21)
00012f d7e1      	RCALL SUBOPT_0xD
                +
000130 e7ab     +LDI R26 , LOW ( 0x400E147B )
000131 e1b4     +LDI R27 , HIGH ( 0x400E147B )
000132 e08e     +LDI R24 , BYTE3 ( 0x400E147B )
000133 e490     +LDI R25 , BYTE4 ( 0x400E147B )
                 	__GETD2N 0x400E147B
000134 dab4      	RCALL __MULF12
                +
000135 e0a0     +LDI R26 , LOW ( 0x43110000 )
000136 e0b0     +LDI R27 , HIGH ( 0x43110000 )
000137 e181     +LDI R24 , BYTE3 ( 0x43110000 )
000138 e493     +LDI R25 , BYTE4 ( 0x43110000 )
                 	__GETD2N 0x43110000
000139 d7dc      	RCALL SUBOPT_0xE
                 ; 0000 0083     }
                 ; 0000 0084 
                 ; 0000 0085   if (adc > 20 && adc < 23)
                 _0x30:
00013a d7d1      	RCALL SUBOPT_0xC
00013b 9755      	SBIW R26,21
00013c f01c      	BRLT _0x34
00013d d7ce      	RCALL SUBOPT_0xC
00013e 9757      	SBIW R26,23
00013f f00c      	BRLT _0x35
                 _0x34:
000140 c00e      	RJMP _0x33
                 _0x35:
                 ; 0000 0086     {
                 ; 0000 0087      temper=(140)+(23-adc)*1.93;
000141 d7ca      	RCALL SUBOPT_0xC
000142 e1e7      	LDI  R30,LOW(23)
000143 e0f0      	LDI  R31,HIGH(23)
000144 d7cc      	RCALL SUBOPT_0xD
                +
000145 e3ad     +LDI R26 , LOW ( 0x3FF70A3D )
000146 e0ba     +LDI R27 , HIGH ( 0x3FF70A3D )
000147 ef87     +LDI R24 , BYTE3 ( 0x3FF70A3D )
000148 e39f     +LDI R25 , BYTE4 ( 0x3FF70A3D )
                 	__GETD2N 0x3FF70A3D
000149 da9f      	RCALL __MULF12
                +
00014a e0a0     +LDI R26 , LOW ( 0x430C0000 )
00014b e0b0     +LDI R27 , HIGH ( 0x430C0000 )
00014c e08c     +LDI R24 , BYTE3 ( 0x430C0000 )
00014d e493     +LDI R25 , BYTE4 ( 0x430C0000 )
                 	__GETD2N 0x430C0000
00014e d7c7      	RCALL SUBOPT_0xE
                 ; 0000 0088     }
                 ; 0000 0089 
                 ; 0000 008A   if (adc > 22 && adc < 26)
                 _0x33:
00014f d7bc      	RCALL SUBOPT_0xC
000150 9757      	SBIW R26,23
000151 f01c      	BRLT _0x37
000152 d7b9      	RCALL SUBOPT_0xC
000153 975a      	SBIW R26,26
000154 f00c      	BRLT _0x38
                 _0x37:
000155 c00e      	RJMP _0x36
                 _0x38:
                 ; 0000 008B     {
                 ; 0000 008C      temper=(135)+(26-adc)*1.68;
000156 d7b5      	RCALL SUBOPT_0xC
000157 e1ea      	LDI  R30,LOW(26)
000158 e0f0      	LDI  R31,HIGH(26)
000159 d7b7      	RCALL SUBOPT_0xD
                +
00015a e3ad     +LDI R26 , LOW ( 0x3FD70A3D )
00015b e0ba     +LDI R27 , HIGH ( 0x3FD70A3D )
00015c ed87     +LDI R24 , BYTE3 ( 0x3FD70A3D )
00015d e39f     +LDI R25 , BYTE4 ( 0x3FD70A3D )
                 	__GETD2N 0x3FD70A3D
00015e da8a      	RCALL __MULF12
                +
00015f e0a0     +LDI R26 , LOW ( 0x43070000 )
000160 e0b0     +LDI R27 , HIGH ( 0x43070000 )
000161 e087     +LDI R24 , BYTE3 ( 0x43070000 )
000162 e493     +LDI R25 , BYTE4 ( 0x43070000 )
                 	__GETD2N 0x43070000
000163 d7b2      	RCALL SUBOPT_0xE
                 ; 0000 008D     }
                 ; 0000 008E 
                 ; 0000 008F   if (adc > 25 && adc < 30)
                 _0x36:
000164 d7a7      	RCALL SUBOPT_0xC
000165 975a      	SBIW R26,26
000166 f01c      	BRLT _0x3A
000167 d7a4      	RCALL SUBOPT_0xC
000168 975e      	SBIW R26,30
000169 f00c      	BRLT _0x3B
                 _0x3A:
00016a c00e      	RJMP _0x39
                 _0x3B:
                 ; 0000 0090     {
                 ; 0000 0091      temper=(130)+(30-adc)*1.46;
00016b d7a0      	RCALL SUBOPT_0xC
00016c e1ee      	LDI  R30,LOW(30)
00016d e0f0      	LDI  R31,HIGH(30)
00016e d7a2      	RCALL SUBOPT_0xD
                +
00016f e4a8     +LDI R26 , LOW ( 0x3FBAE148 )
000170 eeb1     +LDI R27 , HIGH ( 0x3FBAE148 )
000171 eb8a     +LDI R24 , BYTE3 ( 0x3FBAE148 )
000172 e39f     +LDI R25 , BYTE4 ( 0x3FBAE148 )
                 	__GETD2N 0x3FBAE148
000173 da75      	RCALL __MULF12
                +
000174 e0a0     +LDI R26 , LOW ( 0x43020000 )
000175 e0b0     +LDI R27 , HIGH ( 0x43020000 )
000176 e082     +LDI R24 , BYTE3 ( 0x43020000 )
000177 e493     +LDI R25 , BYTE4 ( 0x43020000 )
                 	__GETD2N 0x43020000
000178 d79d      	RCALL SUBOPT_0xE
                 ; 0000 0092     }
                 ; 0000 0093 
                 ; 0000 0094   if (adc > 29 && adc < 34)
                 _0x39:
000179 d792      	RCALL SUBOPT_0xC
00017a 975e      	SBIW R26,30
00017b f01c      	BRLT _0x3D
00017c d78f      	RCALL SUBOPT_0xC
00017d 9792      	SBIW R26,34
00017e f00c      	BRLT _0x3E
                 _0x3D:
00017f c00e      	RJMP _0x3C
                 _0x3E:
                 ; 0000 0095     {
                 ; 0000 0096      temper=(125)+(34-adc)*1.27;
000180 d78b      	RCALL SUBOPT_0xC
000181 e2e2      	LDI  R30,LOW(34)
000182 e0f0      	LDI  R31,HIGH(34)
000183 d78d      	RCALL SUBOPT_0xD
                +
000184 e5ac     +LDI R26 , LOW ( 0x3FA28F5C )
000185 e8bf     +LDI R27 , HIGH ( 0x3FA28F5C )
000186 ea82     +LDI R24 , BYTE3 ( 0x3FA28F5C )
000187 e39f     +LDI R25 , BYTE4 ( 0x3FA28F5C )
                 	__GETD2N 0x3FA28F5C
000188 da60      	RCALL __MULF12
                +
000189 e0a0     +LDI R26 , LOW ( 0x42FA0000 )
00018a e0b0     +LDI R27 , HIGH ( 0x42FA0000 )
00018b ef8a     +LDI R24 , BYTE3 ( 0x42FA0000 )
00018c e492     +LDI R25 , BYTE4 ( 0x42FA0000 )
                 	__GETD2N 0x42FA0000
00018d d788      	RCALL SUBOPT_0xE
                 ; 0000 0097     }
                 ; 0000 0098 
                 ; 0000 0099   if (adc > 33 && adc < 38)
                 _0x3C:
00018e d77d      	RCALL SUBOPT_0xC
00018f 9792      	SBIW R26,34
000190 f01c      	BRLT _0x40
000191 d77a      	RCALL SUBOPT_0xC
000192 9796      	SBIW R26,38
000193 f00c      	BRLT _0x41
                 _0x40:
000194 c00e      	RJMP _0x3F
                 _0x41:
                 ; 0000 009A     {
                 ; 0000 009B      temper=(120)+(38-adc)*1.09;
000195 d776      	RCALL SUBOPT_0xC
000196 e2e6      	LDI  R30,LOW(38)
000197 e0f0      	LDI  R31,HIGH(38)
000198 d778      	RCALL SUBOPT_0xD
                +
000199 e1af     +LDI R26 , LOW ( 0x3F8B851F )
00019a e8b5     +LDI R27 , HIGH ( 0x3F8B851F )
00019b e88b     +LDI R24 , BYTE3 ( 0x3F8B851F )
00019c e39f     +LDI R25 , BYTE4 ( 0x3F8B851F )
                 	__GETD2N 0x3F8B851F
00019d da4b      	RCALL __MULF12
                +
00019e e0a0     +LDI R26 , LOW ( 0x42F00000 )
00019f e0b0     +LDI R27 , HIGH ( 0x42F00000 )
0001a0 ef80     +LDI R24 , BYTE3 ( 0x42F00000 )
0001a1 e492     +LDI R25 , BYTE4 ( 0x42F00000 )
                 	__GETD2N 0x42F00000
0001a2 d773      	RCALL SUBOPT_0xE
                 ; 0000 009C     }
                 ; 0000 009D 
                 ; 0000 009E   if (adc > 37 && adc < 43)
                 _0x3F:
0001a3 d768      	RCALL SUBOPT_0xC
0001a4 9796      	SBIW R26,38
0001a5 f01c      	BRLT _0x43
0001a6 d765      	RCALL SUBOPT_0xC
0001a7 979b      	SBIW R26,43
0001a8 f00c      	BRLT _0x44
                 _0x43:
0001a9 c00e      	RJMP _0x42
                 _0x44:
                 ; 0000 009F     {
                 ; 0000 00A0      temper=(115)+(43-adc)*0.95;
0001aa d761      	RCALL SUBOPT_0xC
0001ab e2eb      	LDI  R30,LOW(43)
0001ac e0f0      	LDI  R31,HIGH(43)
0001ad d763      	RCALL SUBOPT_0xD
                +
0001ae e3a3     +LDI R26 , LOW ( 0x3F733333 )
0001af e3b3     +LDI R27 , HIGH ( 0x3F733333 )
0001b0 e783     +LDI R24 , BYTE3 ( 0x3F733333 )
0001b1 e39f     +LDI R25 , BYTE4 ( 0x3F733333 )
                 	__GETD2N 0x3F733333
0001b2 da36      	RCALL __MULF12
                +
0001b3 e0a0     +LDI R26 , LOW ( 0x42E60000 )
0001b4 e0b0     +LDI R27 , HIGH ( 0x42E60000 )
0001b5 ee86     +LDI R24 , BYTE3 ( 0x42E60000 )
0001b6 e492     +LDI R25 , BYTE4 ( 0x42E60000 )
                 	__GETD2N 0x42E60000
0001b7 d75e      	RCALL SUBOPT_0xE
                 ; 0000 00A1     }
                 ; 0000 00A2 
                 ; 0000 00A3   if (adc > 42 && adc < 50)
                 _0x42:
0001b8 d753      	RCALL SUBOPT_0xC
0001b9 979b      	SBIW R26,43
0001ba f01c      	BRLT _0x46
0001bb d750      	RCALL SUBOPT_0xC
0001bc 97d2      	SBIW R26,50
0001bd f00c      	BRLT _0x47
                 _0x46:
0001be c00e      	RJMP _0x45
                 _0x47:
                 ; 0000 00A4     {
                 ; 0000 00A5      temper=(110)+(50-adc)*0.82;
0001bf d74c      	RCALL SUBOPT_0xC
0001c0 e3e2      	LDI  R30,LOW(50)
0001c1 e0f0      	LDI  R31,HIGH(50)
0001c2 d74e      	RCALL SUBOPT_0xD
                +
0001c3 e8a5     +LDI R26 , LOW ( 0x3F51EB85 )
0001c4 eebb     +LDI R27 , HIGH ( 0x3F51EB85 )
0001c5 e581     +LDI R24 , BYTE3 ( 0x3F51EB85 )
0001c6 e39f     +LDI R25 , BYTE4 ( 0x3F51EB85 )
                 	__GETD2N 0x3F51EB85
0001c7 da21      	RCALL __MULF12
                +
0001c8 e0a0     +LDI R26 , LOW ( 0x42DC0000 )
0001c9 e0b0     +LDI R27 , HIGH ( 0x42DC0000 )
0001ca ed8c     +LDI R24 , BYTE3 ( 0x42DC0000 )
0001cb e492     +LDI R25 , BYTE4 ( 0x42DC0000 )
                 	__GETD2N 0x42DC0000
0001cc d749      	RCALL SUBOPT_0xE
                 ; 0000 00A6     }
                 ; 0000 00A7 
                 ; 0000 00A8   if (adc > 49 && adc < 57)
                 _0x45:
0001cd d73e      	RCALL SUBOPT_0xC
0001ce 97d2      	SBIW R26,50
0001cf f01c      	BRLT _0x49
0001d0 d73b      	RCALL SUBOPT_0xC
0001d1 97d9      	SBIW R26,57
0001d2 f00c      	BRLT _0x4A
                 _0x49:
0001d3 c00e      	RJMP _0x48
                 _0x4A:
                 ; 0000 00A9     {
                 ; 0000 00AA      temper=(105)+(57-adc)*0.70;
0001d4 d737      	RCALL SUBOPT_0xC
0001d5 e3e9      	LDI  R30,LOW(57)
0001d6 e0f0      	LDI  R31,HIGH(57)
0001d7 d739      	RCALL SUBOPT_0xD
                +
0001d8 e3a3     +LDI R26 , LOW ( 0x3F333333 )
0001d9 e3b3     +LDI R27 , HIGH ( 0x3F333333 )
0001da e383     +LDI R24 , BYTE3 ( 0x3F333333 )
0001db e39f     +LDI R25 , BYTE4 ( 0x3F333333 )
                 	__GETD2N 0x3F333333
0001dc da0c      	RCALL __MULF12
                +
0001dd e0a0     +LDI R26 , LOW ( 0x42D20000 )
0001de e0b0     +LDI R27 , HIGH ( 0x42D20000 )
0001df ed82     +LDI R24 , BYTE3 ( 0x42D20000 )
0001e0 e492     +LDI R25 , BYTE4 ( 0x42D20000 )
                 	__GETD2N 0x42D20000
0001e1 d734      	RCALL SUBOPT_0xE
                 ; 0000 00AB     }
                 ; 0000 00AC 
                 ; 0000 00AD   if (adc > 56 && adc < 65)
                 _0x48:
0001e2 d729      	RCALL SUBOPT_0xC
0001e3 97d9      	SBIW R26,57
0001e4 f014      	BRLT _0x4C
0001e5 d733      	RCALL SUBOPT_0xF
0001e6 f00c      	BRLT _0x4D
                 _0x4C:
0001e7 c00e      	RJMP _0x4B
                 _0x4D:
                 ; 0000 00AE     {
                 ; 0000 00AF      temper=(100)+(65-adc)*0.60;
0001e8 d723      	RCALL SUBOPT_0xC
0001e9 e4e1      	LDI  R30,LOW(65)
0001ea e0f0      	LDI  R31,HIGH(65)
0001eb d725      	RCALL SUBOPT_0xD
                +
0001ec e9aa     +LDI R26 , LOW ( 0x3F19999A )
0001ed e9b9     +LDI R27 , HIGH ( 0x3F19999A )
0001ee e189     +LDI R24 , BYTE3 ( 0x3F19999A )
0001ef e39f     +LDI R25 , BYTE4 ( 0x3F19999A )
                 	__GETD2N 0x3F19999A
0001f0 d9f8      	RCALL __MULF12
                +
0001f1 e0a0     +LDI R26 , LOW ( 0x42C80000 )
0001f2 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
0001f3 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
0001f4 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
0001f5 d720      	RCALL SUBOPT_0xE
                 ; 0000 00B0     }
                 ; 0000 00B1 
                 ; 0000 00B2   if (adc > 64 && adc < 75)
                 _0x4B:
0001f6 d722      	RCALL SUBOPT_0xF
0001f7 f014      	BRLT _0x4F
0001f8 d725      	RCALL SUBOPT_0x10
0001f9 f00c      	BRLT _0x50
                 _0x4F:
0001fa c00e      	RJMP _0x4E
                 _0x50:
                 ; 0000 00B3     {
                 ; 0000 00B4      temper=(95)+(75-adc)*0.58;
0001fb d710      	RCALL SUBOPT_0xC
0001fc e4eb      	LDI  R30,LOW(75)
0001fd e0f0      	LDI  R31,HIGH(75)
0001fe d712      	RCALL SUBOPT_0xD
                +
0001ff eea1     +LDI R26 , LOW ( 0x3F147AE1 )
000200 e7ba     +LDI R27 , HIGH ( 0x3F147AE1 )
000201 e184     +LDI R24 , BYTE3 ( 0x3F147AE1 )
000202 e39f     +LDI R25 , BYTE4 ( 0x3F147AE1 )
                 	__GETD2N 0x3F147AE1
000203 d9e5      	RCALL __MULF12
                +
000204 e0a0     +LDI R26 , LOW ( 0x42BE0000 )
000205 e0b0     +LDI R27 , HIGH ( 0x42BE0000 )
000206 eb8e     +LDI R24 , BYTE3 ( 0x42BE0000 )
000207 e492     +LDI R25 , BYTE4 ( 0x42BE0000 )
                 	__GETD2N 0x42BE0000
000208 d70d      	RCALL SUBOPT_0xE
                 ; 0000 00B5     }
                 ; 0000 00B6 
                 ; 0000 00B7   if (adc > 74 && adc < 86)
                 _0x4E:
000209 d714      	RCALL SUBOPT_0x10
00020a f014      	BRLT _0x52
00020b d717      	RCALL SUBOPT_0x11
00020c f00c      	BRLT _0x53
                 _0x52:
00020d c00e      	RJMP _0x51
                 _0x53:
                 ; 0000 00B8     {
                 ; 0000 00B9      temper=(90)+(86-adc)*0.44;
00020e d6fd      	RCALL SUBOPT_0xC
00020f e5e6      	LDI  R30,LOW(86)
000210 e0f0      	LDI  R31,HIGH(86)
000211 d6ff      	RCALL SUBOPT_0xD
                +
000212 eaae     +LDI R26 , LOW ( 0x3EE147AE )
000213 e4b7     +LDI R27 , HIGH ( 0x3EE147AE )
000214 ee81     +LDI R24 , BYTE3 ( 0x3EE147AE )
000215 e39e     +LDI R25 , BYTE4 ( 0x3EE147AE )
                 	__GETD2N 0x3EE147AE
000216 d9d2      	RCALL __MULF12
                +
000217 e0a0     +LDI R26 , LOW ( 0x42B40000 )
000218 e0b0     +LDI R27 , HIGH ( 0x42B40000 )
000219 eb84     +LDI R24 , BYTE3 ( 0x42B40000 )
00021a e492     +LDI R25 , BYTE4 ( 0x42B40000 )
                 	__GETD2N 0x42B40000
00021b d6fa      	RCALL SUBOPT_0xE
                 ; 0000 00BA     }
                 ; 0000 00BB   if (adc > 85 && adc < 99)
                 _0x51:
00021c d706      	RCALL SUBOPT_0x11
00021d f014      	BRLT _0x55
00021e d709      	RCALL SUBOPT_0x12
00021f f00c      	BRLT _0x56
                 _0x55:
000220 c00e      	RJMP _0x54
                 _0x56:
                 ; 0000 00BC     {
                 ; 0000 00BD      temper=(85)+(99-adc)*0.38;
000221 d6ea      	RCALL SUBOPT_0xC
000222 e6e3      	LDI  R30,LOW(99)
000223 e0f0      	LDI  R31,HIGH(99)
000224 d6ec      	RCALL SUBOPT_0xD
                +
000225 e5ac     +LDI R26 , LOW ( 0x3EC28F5C )
000226 e8bf     +LDI R27 , HIGH ( 0x3EC28F5C )
000227 ec82     +LDI R24 , BYTE3 ( 0x3EC28F5C )
000228 e39e     +LDI R25 , BYTE4 ( 0x3EC28F5C )
                 	__GETD2N 0x3EC28F5C
000229 d9bf      	RCALL __MULF12
                +
00022a e0a0     +LDI R26 , LOW ( 0x42AA0000 )
00022b e0b0     +LDI R27 , HIGH ( 0x42AA0000 )
00022c ea8a     +LDI R24 , BYTE3 ( 0x42AA0000 )
00022d e492     +LDI R25 , BYTE4 ( 0x42AA0000 )
                 	__GETD2N 0x42AA0000
00022e d6e7      	RCALL SUBOPT_0xE
                 ; 0000 00BE     }
                 ; 0000 00BF 
                 ; 0000 00C0   if (adc > 98 && adc < 114)
                 _0x54:
00022f d6f8      	RCALL SUBOPT_0x12
000230 f014      	BRLT _0x58
000231 d6fb      	RCALL SUBOPT_0x13
000232 f00c      	BRLT _0x59
                 _0x58:
000233 c00e      	RJMP _0x57
                 _0x59:
                 ; 0000 00C1     {
                 ; 0000 00C2      temper=(80)+(114-adc)*0.33;
000234 d6d7      	RCALL SUBOPT_0xC
000235 e7e2      	LDI  R30,LOW(114)
000236 e0f0      	LDI  R31,HIGH(114)
000237 d6d9      	RCALL SUBOPT_0xD
                +
000238 eca3     +LDI R26 , LOW ( 0x3EA8F5C3 )
000239 efb5     +LDI R27 , HIGH ( 0x3EA8F5C3 )
00023a ea88     +LDI R24 , BYTE3 ( 0x3EA8F5C3 )
00023b e39e     +LDI R25 , BYTE4 ( 0x3EA8F5C3 )
                 	__GETD2N 0x3EA8F5C3
00023c d9ac      	RCALL __MULF12
                +
00023d e0a0     +LDI R26 , LOW ( 0x42A00000 )
00023e e0b0     +LDI R27 , HIGH ( 0x42A00000 )
00023f ea80     +LDI R24 , BYTE3 ( 0x42A00000 )
000240 e492     +LDI R25 , BYTE4 ( 0x42A00000 )
                 	__GETD2N 0x42A00000
000241 d6d4      	RCALL SUBOPT_0xE
                 ; 0000 00C3     }
                 ; 0000 00C4 
                 ; 0000 00C5   if (adc > 113 && adc < 132)
                 _0x57:
000242 d6ea      	RCALL SUBOPT_0x13
000243 f014      	BRLT _0x5B
000244 d6ed      	RCALL SUBOPT_0x14
000245 f00c      	BRLT _0x5C
                 _0x5B:
000246 c00e      	RJMP _0x5A
                 _0x5C:
                 ; 0000 00C6     {
                 ; 0000 00C7      temper=(75)+(132-adc)*0.28;
000247 d6c4      	RCALL SUBOPT_0xC
000248 e8e4      	LDI  R30,LOW(132)
000249 e0f0      	LDI  R31,HIGH(132)
00024a d6c6      	RCALL SUBOPT_0xD
                +
00024b e2a9     +LDI R26 , LOW ( 0x3E8F5C29 )
00024c e5bc     +LDI R27 , HIGH ( 0x3E8F5C29 )
00024d e88f     +LDI R24 , BYTE3 ( 0x3E8F5C29 )
00024e e39e     +LDI R25 , BYTE4 ( 0x3E8F5C29 )
                 	__GETD2N 0x3E8F5C29
00024f d999      	RCALL __MULF12
                +
000250 e0a0     +LDI R26 , LOW ( 0x42960000 )
000251 e0b0     +LDI R27 , HIGH ( 0x42960000 )
000252 e986     +LDI R24 , BYTE3 ( 0x42960000 )
000253 e492     +LDI R25 , BYTE4 ( 0x42960000 )
                 	__GETD2N 0x42960000
000254 d6c1      	RCALL SUBOPT_0xE
                 ; 0000 00C8     }
                 ; 0000 00C9 
                 ; 0000 00CA   if (adc > 131 && adc < 153)
                 _0x5A:
000255 d6dc      	RCALL SUBOPT_0x14
000256 f014      	BRLT _0x5E
000257 d6df      	RCALL SUBOPT_0x15
000258 f00c      	BRLT _0x5F
                 _0x5E:
000259 c00e      	RJMP _0x5D
                 _0x5F:
                 ; 0000 00CB     {
                 ; 0000 00CC      temper=(70)+(153-adc)*0.24;
00025a d6b1      	RCALL SUBOPT_0xC
00025b e9e9      	LDI  R30,LOW(153)
00025c e0f0      	LDI  R31,HIGH(153)
00025d d6b3      	RCALL SUBOPT_0xD
                +
00025e e8af     +LDI R26 , LOW ( 0x3E75C28F )
00025f ecb2     +LDI R27 , HIGH ( 0x3E75C28F )
000260 e785     +LDI R24 , BYTE3 ( 0x3E75C28F )
000261 e39e     +LDI R25 , BYTE4 ( 0x3E75C28F )
                 	__GETD2N 0x3E75C28F
000262 d986      	RCALL __MULF12
                +
000263 e0a0     +LDI R26 , LOW ( 0x428C0000 )
000264 e0b0     +LDI R27 , HIGH ( 0x428C0000 )
000265 e88c     +LDI R24 , BYTE3 ( 0x428C0000 )
000266 e492     +LDI R25 , BYTE4 ( 0x428C0000 )
                 	__GETD2N 0x428C0000
000267 d6ae      	RCALL SUBOPT_0xE
                 ; 0000 00CD     }
                 ; 0000 00CE   if (adc > 152 && adc < 177)
                 _0x5D:
000268 d6ce      	RCALL SUBOPT_0x15
000269 f014      	BRLT _0x61
00026a d6d1      	RCALL SUBOPT_0x16
00026b f00c      	BRLT _0x62
                 _0x61:
00026c c00e      	RJMP _0x60
                 _0x62:
                 ; 0000 00CF     {
                 ; 0000 00D0      temper=(65)+(177-adc)*0.21;
00026d d69e      	RCALL SUBOPT_0xC
00026e ebe1      	LDI  R30,LOW(177)
00026f e0f0      	LDI  R31,HIGH(177)
000270 d6a0      	RCALL SUBOPT_0xD
                +
000271 e3ad     +LDI R26 , LOW ( 0x3E570A3D )
000272 e0ba     +LDI R27 , HIGH ( 0x3E570A3D )
000273 e587     +LDI R24 , BYTE3 ( 0x3E570A3D )
000274 e39e     +LDI R25 , BYTE4 ( 0x3E570A3D )
                 	__GETD2N 0x3E570A3D
000275 d973      	RCALL __MULF12
                +
000276 e0a0     +LDI R26 , LOW ( 0x42820000 )
000277 e0b0     +LDI R27 , HIGH ( 0x42820000 )
000278 e882     +LDI R24 , BYTE3 ( 0x42820000 )
000279 e492     +LDI R25 , BYTE4 ( 0x42820000 )
                 	__GETD2N 0x42820000
00027a d69b      	RCALL SUBOPT_0xE
                 ; 0000 00D1     };
                 _0x60:
                 ; 0000 00D2 
                 ; 0000 00D3   if (adc > 176 && adc < 204)
00027b d6c0      	RCALL SUBOPT_0x16
00027c f014      	BRLT _0x64
00027d d6c3      	RCALL SUBOPT_0x17
00027e f00c      	BRLT _0x65
                 _0x64:
00027f c00a      	RJMP _0x63
                 _0x65:
                 ; 0000 00D4     {
                 ; 0000 00D5      temper=(60)+(204-adc)*0.18;
000280 d68b      	RCALL SUBOPT_0xC
000281 ecec      	LDI  R30,LOW(204)
000282 e0f0      	LDI  R31,HIGH(204)
000283 d68d      	RCALL SUBOPT_0xD
000284 d6c1      	RCALL SUBOPT_0x18
                +
000285 e0a0     +LDI R26 , LOW ( 0x42700000 )
000286 e0b0     +LDI R27 , HIGH ( 0x42700000 )
000287 e780     +LDI R24 , BYTE3 ( 0x42700000 )
000288 e492     +LDI R25 , BYTE4 ( 0x42700000 )
                 	__GETD2N 0x42700000
000289 d68c      	RCALL SUBOPT_0xE
                 ; 0000 00D6     };
                 _0x63:
                 ; 0000 00D7 
                 ; 0000 00D8   if (adc > 203 && adc < 236)
00028a d6b6      	RCALL SUBOPT_0x17
00028b f014      	BRLT _0x67
00028c d6bf      	RCALL SUBOPT_0x19
00028d f00c      	BRLT _0x68
                 _0x67:
00028e c00e      	RJMP _0x66
                 _0x68:
                 ; 0000 00D9     {
                 ; 0000 00DA      temper=(55)+(236-adc)*0.16;
00028f d67c      	RCALL SUBOPT_0xC
000290 eeec      	LDI  R30,LOW(236)
000291 e0f0      	LDI  R31,HIGH(236)
000292 d67e      	RCALL SUBOPT_0xD
                +
000293 e0aa     +LDI R26 , LOW ( 0x3E23D70A )
000294 edb7     +LDI R27 , HIGH ( 0x3E23D70A )
000295 e283     +LDI R24 , BYTE3 ( 0x3E23D70A )
000296 e39e     +LDI R25 , BYTE4 ( 0x3E23D70A )
                 	__GETD2N 0x3E23D70A
000297 d951      	RCALL __MULF12
                +
000298 e0a0     +LDI R26 , LOW ( 0x425C0000 )
000299 e0b0     +LDI R27 , HIGH ( 0x425C0000 )
00029a e58c     +LDI R24 , BYTE3 ( 0x425C0000 )
00029b e492     +LDI R25 , BYTE4 ( 0x425C0000 )
                 	__GETD2N 0x425C0000
00029c d679      	RCALL SUBOPT_0xE
                 ; 0000 00DB     };
                 _0x66:
                 ; 0000 00DC 
                 ; 0000 00DD   if (adc > 235 && adc < 271)
00029d d6ae      	RCALL SUBOPT_0x19
00029e f014      	BRLT _0x6A
00029f d6b1      	RCALL SUBOPT_0x1A
0002a0 f00c      	BRLT _0x6B
                 _0x6A:
0002a1 c00e      	RJMP _0x69
                 _0x6B:
                 ; 0000 00DE     {
                 ; 0000 00DF      temper=(50)+(271-adc)*0.14;
0002a2 d669      	RCALL SUBOPT_0xC
0002a3 e0ef      	LDI  R30,LOW(271)
0002a4 e0f1      	LDI  R31,HIGH(271)
0002a5 d66b      	RCALL SUBOPT_0xD
                +
0002a6 e2a9     +LDI R26 , LOW ( 0x3E0F5C29 )
0002a7 e5bc     +LDI R27 , HIGH ( 0x3E0F5C29 )
0002a8 e08f     +LDI R24 , BYTE3 ( 0x3E0F5C29 )
0002a9 e39e     +LDI R25 , BYTE4 ( 0x3E0F5C29 )
                 	__GETD2N 0x3E0F5C29
0002aa d93e      	RCALL __MULF12
                +
0002ab e0a0     +LDI R26 , LOW ( 0x42480000 )
0002ac e0b0     +LDI R27 , HIGH ( 0x42480000 )
0002ad e488     +LDI R24 , BYTE3 ( 0x42480000 )
0002ae e492     +LDI R25 , BYTE4 ( 0x42480000 )
                 	__GETD2N 0x42480000
0002af d666      	RCALL SUBOPT_0xE
                 ; 0000 00E0     };
                 _0x69:
                 ; 0000 00E1 
                 ; 0000 00E2   if (adc > 270 && adc < 312)
0002b0 d6a0      	RCALL SUBOPT_0x1A
0002b1 f014      	BRLT _0x6D
0002b2 d6a3      	RCALL SUBOPT_0x1B
0002b3 f00c      	BRLT _0x6E
                 _0x6D:
0002b4 c00e      	RJMP _0x6C
                 _0x6E:
                 ; 0000 00E3     {
                 ; 0000 00E4      temper=(45)+(312-adc)*0.12;
0002b5 d656      	RCALL SUBOPT_0xC
0002b6 e3e8      	LDI  R30,LOW(312)
0002b7 e0f1      	LDI  R31,HIGH(312)
0002b8 d658      	RCALL SUBOPT_0xD
                +
0002b9 e8af     +LDI R26 , LOW ( 0x3DF5C28F )
0002ba ecb2     +LDI R27 , HIGH ( 0x3DF5C28F )
0002bb ef85     +LDI R24 , BYTE3 ( 0x3DF5C28F )
0002bc e39d     +LDI R25 , BYTE4 ( 0x3DF5C28F )
                 	__GETD2N 0x3DF5C28F
0002bd d92b      	RCALL __MULF12
                +
0002be e0a0     +LDI R26 , LOW ( 0x42340000 )
0002bf e0b0     +LDI R27 , HIGH ( 0x42340000 )
0002c0 e384     +LDI R24 , BYTE3 ( 0x42340000 )
0002c1 e492     +LDI R25 , BYTE4 ( 0x42340000 )
                 	__GETD2N 0x42340000
0002c2 d653      	RCALL SUBOPT_0xE
                 ; 0000 00E5     };
                 _0x6C:
                 ; 0000 00E6 
                 ; 0000 00E7   if (adc > 311 && adc < 356)
0002c3 d692      	RCALL SUBOPT_0x1B
0002c4 f014      	BRLT _0x70
0002c5 d695      	RCALL SUBOPT_0x1C
0002c6 f00c      	BRLT _0x71
                 _0x70:
0002c7 c00a      	RJMP _0x6F
                 _0x71:
                 ; 0000 00E8     {
                 ; 0000 00E9      temper=(40)+(356-adc)*0.11;
0002c8 d643      	RCALL SUBOPT_0xC
0002c9 e6e4      	LDI  R30,LOW(356)
0002ca e0f1      	LDI  R31,HIGH(356)
0002cb d645      	RCALL SUBOPT_0xD
0002cc d693      	RCALL SUBOPT_0x1D
                +
0002cd e0a0     +LDI R26 , LOW ( 0x42200000 )
0002ce e0b0     +LDI R27 , HIGH ( 0x42200000 )
0002cf e280     +LDI R24 , BYTE3 ( 0x42200000 )
0002d0 e492     +LDI R25 , BYTE4 ( 0x42200000 )
                 	__GETD2N 0x42200000
0002d1 d644      	RCALL SUBOPT_0xE
                 ; 0000 00EA     };
                 _0x6F:
                 ; 0000 00EB 
                 ; 0000 00EC   if (adc > 355 && adc < 405)
0002d2 d688      	RCALL SUBOPT_0x1C
0002d3 f014      	BRLT _0x73
0002d4 d691      	RCALL SUBOPT_0x1E
0002d5 f00c      	BRLT _0x74
                 _0x73:
0002d6 c00a      	RJMP _0x72
                 _0x74:
                 ; 0000 00ED     {
                 ; 0000 00EE      temper=(35)+(405-adc)*0.10;
0002d7 d634      	RCALL SUBOPT_0xC
0002d8 e9e5      	LDI  R30,LOW(405)
0002d9 e0f1      	LDI  R31,HIGH(405)
0002da d636      	RCALL SUBOPT_0xD
0002db d68f      	RCALL SUBOPT_0x1F
                +
0002dc e0a0     +LDI R26 , LOW ( 0x420C0000 )
0002dd e0b0     +LDI R27 , HIGH ( 0x420C0000 )
0002de e08c     +LDI R24 , BYTE3 ( 0x420C0000 )
0002df e492     +LDI R25 , BYTE4 ( 0x420C0000 )
                 	__GETD2N 0x420C0000
0002e0 d635      	RCALL SUBOPT_0xE
                 ; 0000 00EF     };
                 _0x72:
                 ; 0000 00F0 
                 ; 0000 00F1   if (adc > 404 && adc < 457)
0002e1 d684      	RCALL SUBOPT_0x1E
0002e2 f014      	BRLT _0x76
0002e3 d68d      	RCALL SUBOPT_0x20
0002e4 f00c      	BRLT _0x77
                 _0x76:
0002e5 c00a      	RJMP _0x75
                 _0x77:
                 ; 0000 00F2     {
                 ; 0000 00F3      temper=(30)+(457-adc)*0.10;
0002e6 d625      	RCALL SUBOPT_0xC
0002e7 ece9      	LDI  R30,LOW(457)
0002e8 e0f1      	LDI  R31,HIGH(457)
0002e9 d627      	RCALL SUBOPT_0xD
0002ea d680      	RCALL SUBOPT_0x1F
                +
0002eb e0a0     +LDI R26 , LOW ( 0x41F00000 )
0002ec e0b0     +LDI R27 , HIGH ( 0x41F00000 )
0002ed ef80     +LDI R24 , BYTE3 ( 0x41F00000 )
0002ee e491     +LDI R25 , BYTE4 ( 0x41F00000 )
                 	__GETD2N 0x41F00000
0002ef d626      	RCALL SUBOPT_0xE
                 ; 0000 00F4     };
                 _0x75:
                 ; 0000 00F5 
                 ; 0000 00F6   if (adc > 456 && adc < 469)
0002f0 d680      	RCALL SUBOPT_0x20
0002f1 f014      	BRLT _0x79
0002f2 d683      	RCALL SUBOPT_0x21
0002f3 f00c      	BRLT _0x7A
                 _0x79:
0002f4 c00a      	RJMP _0x78
                 _0x7A:
                 ; 0000 00F7     {
                 ; 0000 00F8      temper=(29)+(469-adc)*0.08;
0002f5 d616      	RCALL SUBOPT_0xC
0002f6 ede5      	LDI  R30,LOW(469)
0002f7 e0f1      	LDI  R31,HIGH(469)
0002f8 d618      	RCALL SUBOPT_0xD
0002f9 d681      	RCALL SUBOPT_0x22
                +
0002fa e0a0     +LDI R26 , LOW ( 0x41E80000 )
0002fb e0b0     +LDI R27 , HIGH ( 0x41E80000 )
0002fc ee88     +LDI R24 , BYTE3 ( 0x41E80000 )
0002fd e491     +LDI R25 , BYTE4 ( 0x41E80000 )
                 	__GETD2N 0x41E80000
0002fe d617      	RCALL SUBOPT_0xE
                 ; 0000 00F9     };
                 _0x78:
                 ; 0000 00FA 
                 ; 0000 00FB   if (adc > 468 && adc < 480)
0002ff d676      	RCALL SUBOPT_0x21
000300 f014      	BRLT _0x7C
000301 d67f      	RCALL SUBOPT_0x23
000302 f00c      	BRLT _0x7D
                 _0x7C:
000303 c00a      	RJMP _0x7B
                 _0x7D:
                 ; 0000 00FC     {
                 ; 0000 00FD      temper=(28)+(480-adc)*0.09;
000304 d607      	RCALL SUBOPT_0xC
000305 eee0      	LDI  R30,LOW(480)
000306 e0f1      	LDI  R31,HIGH(480)
000307 d609      	RCALL SUBOPT_0xD
000308 d67d      	RCALL SUBOPT_0x24
                +
000309 e0a0     +LDI R26 , LOW ( 0x41E00000 )
00030a e0b0     +LDI R27 , HIGH ( 0x41E00000 )
00030b ee80     +LDI R24 , BYTE3 ( 0x41E00000 )
00030c e491     +LDI R25 , BYTE4 ( 0x41E00000 )
                 	__GETD2N 0x41E00000
00030d d608      	RCALL SUBOPT_0xE
                 ; 0000 00FE     };
                 _0x7B:
                 ; 0000 00FF 
                 ; 0000 0100   if (adc > 479 && adc < 491)
00030e d672      	RCALL SUBOPT_0x23
00030f f014      	BRLT _0x7F
000310 d67b      	RCALL SUBOPT_0x25
000311 f00c      	BRLT _0x80
                 _0x7F:
000312 c00a      	RJMP _0x7E
                 _0x80:
                 ; 0000 0101     {
                 ; 0000 0102      temper=(27)+(491-adc)*0.09;
000313 d5f8      	RCALL SUBOPT_0xC
000314 eeeb      	LDI  R30,LOW(491)
000315 e0f1      	LDI  R31,HIGH(491)
000316 d5fa      	RCALL SUBOPT_0xD
000317 d66e      	RCALL SUBOPT_0x24
                +
000318 e0a0     +LDI R26 , LOW ( 0x41D80000 )
000319 e0b0     +LDI R27 , HIGH ( 0x41D80000 )
00031a ed88     +LDI R24 , BYTE3 ( 0x41D80000 )
00031b e491     +LDI R25 , BYTE4 ( 0x41D80000 )
                 	__GETD2N 0x41D80000
00031c d5f9      	RCALL SUBOPT_0xE
                 ; 0000 0103     };
                 _0x7E:
                 ; 0000 0104 
                 ; 0000 0105   if (adc > 490 && adc < 502)
00031d d66e      	RCALL SUBOPT_0x25
00031e f014      	BRLT _0x82
00031f d671      	RCALL SUBOPT_0x26
000320 f00c      	BRLT _0x83
                 _0x82:
000321 c00a      	RJMP _0x81
                 _0x83:
                 ; 0000 0106     {
                 ; 0000 0107      temper=(float)(26)+(502-adc)*0.09;
000322 d5e9      	RCALL SUBOPT_0xC
000323 efe6      	LDI  R30,LOW(502)
000324 e0f1      	LDI  R31,HIGH(502)
000325 d5eb      	RCALL SUBOPT_0xD
000326 d65f      	RCALL SUBOPT_0x24
                +
000327 e0a0     +LDI R26 , LOW ( 0x41D00000 )
000328 e0b0     +LDI R27 , HIGH ( 0x41D00000 )
000329 ed80     +LDI R24 , BYTE3 ( 0x41D00000 )
00032a e491     +LDI R25 , BYTE4 ( 0x41D00000 )
                 	__GETD2N 0x41D00000
00032b d5ea      	RCALL SUBOPT_0xE
                 ; 0000 0108     };
                 _0x81:
                 ; 0000 0109 
                 ; 0000 010A   if (adc > 501 && adc < 512)
00032c d664      	RCALL SUBOPT_0x26
00032d f014      	BRLT _0x85
00032e d667      	RCALL SUBOPT_0x27
00032f f00c      	BRLT _0x86
                 _0x85:
000330 c00a      	RJMP _0x84
                 _0x86:
                 ; 0000 010B     {
                 ; 0000 010C      temper=(float)(25)+(512-adc)*0.10;
000331 d5da      	RCALL SUBOPT_0xC
000332 e0e0      	LDI  R30,LOW(512)
000333 e0f2      	LDI  R31,HIGH(512)
000334 d5dc      	RCALL SUBOPT_0xD
000335 d635      	RCALL SUBOPT_0x1F
                +
000336 e0a0     +LDI R26 , LOW ( 0x41C80000 )
000337 e0b0     +LDI R27 , HIGH ( 0x41C80000 )
000338 ec88     +LDI R24 , BYTE3 ( 0x41C80000 )
000339 e491     +LDI R25 , BYTE4 ( 0x41C80000 )
                 	__GETD2N 0x41C80000
00033a d5db      	RCALL SUBOPT_0xE
                 ; 0000 010D     };
                 _0x84:
                 ; 0000 010E 
                 ; 0000 010F   if (adc > 511 && adc < 524)
00033b d65a      	RCALL SUBOPT_0x27
00033c f014      	BRLT _0x88
00033d d65d      	RCALL SUBOPT_0x28
00033e f00c      	BRLT _0x89
                 _0x88:
00033f c00a      	RJMP _0x87
                 _0x89:
                 ; 0000 0110     {
                 ; 0000 0111      temper=(float)(24)+(524-adc)*0.08;
000340 d5cb      	RCALL SUBOPT_0xC
000341 e0ec      	LDI  R30,LOW(524)
000342 e0f2      	LDI  R31,HIGH(524)
000343 d5cd      	RCALL SUBOPT_0xD
000344 d636      	RCALL SUBOPT_0x22
                +
000345 e0a0     +LDI R26 , LOW ( 0x41C00000 )
000346 e0b0     +LDI R27 , HIGH ( 0x41C00000 )
000347 ec80     +LDI R24 , BYTE3 ( 0x41C00000 )
000348 e491     +LDI R25 , BYTE4 ( 0x41C00000 )
                 	__GETD2N 0x41C00000
000349 d5cc      	RCALL SUBOPT_0xE
                 ; 0000 0112     };
                 _0x87:
                 ; 0000 0113 
                 ; 0000 0114   if (adc > 523 && adc < 536)
00034a d650      	RCALL SUBOPT_0x28
00034b f014      	BRLT _0x8B
00034c d653      	RCALL SUBOPT_0x29
00034d f00c      	BRLT _0x8C
                 _0x8B:
00034e c00a      	RJMP _0x8A
                 _0x8C:
                 ; 0000 0115     {
                 ; 0000 0116      temper=(23)+(536-adc)*0.08;
00034f d5bc      	RCALL SUBOPT_0xC
000350 e1e8      	LDI  R30,LOW(536)
000351 e0f2      	LDI  R31,HIGH(536)
000352 d5be      	RCALL SUBOPT_0xD
000353 d627      	RCALL SUBOPT_0x22
                +
000354 e0a0     +LDI R26 , LOW ( 0x41B80000 )
000355 e0b0     +LDI R27 , HIGH ( 0x41B80000 )
000356 eb88     +LDI R24 , BYTE3 ( 0x41B80000 )
000357 e491     +LDI R25 , BYTE4 ( 0x41B80000 )
                 	__GETD2N 0x41B80000
000358 d5bd      	RCALL SUBOPT_0xE
                 ; 0000 0117     };
                 _0x8A:
                 ; 0000 0118 
                 ; 0000 0119   if (adc > 535 && adc < 548)
000359 d646      	RCALL SUBOPT_0x29
00035a f014      	BRLT _0x8E
00035b d649      	RCALL SUBOPT_0x2A
00035c f00c      	BRLT _0x8F
                 _0x8E:
00035d c00a      	RJMP _0x8D
                 _0x8F:
                 ; 0000 011A     {
                 ; 0000 011B      temper=(22)+(548-adc)*0.09;
00035e d5ad      	RCALL SUBOPT_0xC
00035f e2e4      	LDI  R30,LOW(548)
000360 e0f2      	LDI  R31,HIGH(548)
000361 d5af      	RCALL SUBOPT_0xD
000362 d623      	RCALL SUBOPT_0x24
                +
000363 e0a0     +LDI R26 , LOW ( 0x41B00000 )
000364 e0b0     +LDI R27 , HIGH ( 0x41B00000 )
000365 eb80     +LDI R24 , BYTE3 ( 0x41B00000 )
000366 e491     +LDI R25 , BYTE4 ( 0x41B00000 )
                 	__GETD2N 0x41B00000
000367 d5ae      	RCALL SUBOPT_0xE
                 ; 0000 011C     };
                 _0x8D:
                 ; 0000 011D 
                 ; 0000 011E   if (adc > 547 && adc < 558)
000368 d63c      	RCALL SUBOPT_0x2A
000369 f014      	BRLT _0x91
00036a d63f      	RCALL SUBOPT_0x2B
00036b f00c      	BRLT _0x92
                 _0x91:
00036c c00a      	RJMP _0x90
                 _0x92:
                 ; 0000 011F     {
                 ; 0000 0120      temper=(21)+(558-adc)*0.09;
00036d d59e      	RCALL SUBOPT_0xC
00036e e2ee      	LDI  R30,LOW(558)
00036f e0f2      	LDI  R31,HIGH(558)
000370 d5a0      	RCALL SUBOPT_0xD
000371 d614      	RCALL SUBOPT_0x24
                +
000372 e0a0     +LDI R26 , LOW ( 0x41A80000 )
000373 e0b0     +LDI R27 , HIGH ( 0x41A80000 )
000374 ea88     +LDI R24 , BYTE3 ( 0x41A80000 )
000375 e491     +LDI R25 , BYTE4 ( 0x41A80000 )
                 	__GETD2N 0x41A80000
000376 d59f      	RCALL SUBOPT_0xE
                 ; 0000 0121     };
                 _0x90:
                 ; 0000 0122 
                 ; 0000 0123   if (adc > 557 && adc < 569)
000377 d632      	RCALL SUBOPT_0x2B
000378 f014      	BRLT _0x94
000379 d635      	RCALL SUBOPT_0x2C
00037a f00c      	BRLT _0x95
                 _0x94:
00037b c00a      	RJMP _0x93
                 _0x95:
                 ; 0000 0124     {
                 ; 0000 0125      temper=(20)+(569-adc)*0.10;
00037c d58f      	RCALL SUBOPT_0xC
00037d e3e9      	LDI  R30,LOW(569)
00037e e0f2      	LDI  R31,HIGH(569)
00037f d591      	RCALL SUBOPT_0xD
000380 d5ea      	RCALL SUBOPT_0x1F
                +
000381 e0a0     +LDI R26 , LOW ( 0x41A00000 )
000382 e0b0     +LDI R27 , HIGH ( 0x41A00000 )
000383 ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
000384 e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
000385 d590      	RCALL SUBOPT_0xE
                 ; 0000 0126     };
                 _0x93:
                 ; 0000 0127 
                 ; 0000 0128   if (adc > 568 && adc < 581)
000386 d628      	RCALL SUBOPT_0x2C
000387 f014      	BRLT _0x97
000388 d62b      	RCALL SUBOPT_0x2D
000389 f00c      	BRLT _0x98
                 _0x97:
00038a c00a      	RJMP _0x96
                 _0x98:
                 ; 0000 0129     {
                 ; 0000 012A      temper=(19)+(581-adc)*0.08;
00038b d580      	RCALL SUBOPT_0xC
00038c e4e5      	LDI  R30,LOW(581)
00038d e0f2      	LDI  R31,HIGH(581)
00038e d582      	RCALL SUBOPT_0xD
00038f d5eb      	RCALL SUBOPT_0x22
                +
000390 e0a0     +LDI R26 , LOW ( 0x41980000 )
000391 e0b0     +LDI R27 , HIGH ( 0x41980000 )
000392 e988     +LDI R24 , BYTE3 ( 0x41980000 )
000393 e491     +LDI R25 , BYTE4 ( 0x41980000 )
                 	__GETD2N 0x41980000
000394 d581      	RCALL SUBOPT_0xE
                 ; 0000 012B     };
                 _0x96:
                 ; 0000 012C 
                 ; 0000 012D   if (adc > 580 && adc < 593)
000395 d61e      	RCALL SUBOPT_0x2D
000396 f014      	BRLT _0x9A
000397 d621      	RCALL SUBOPT_0x2E
000398 f00c      	BRLT _0x9B
                 _0x9A:
000399 c00a      	RJMP _0x99
                 _0x9B:
                 ; 0000 012E     {
                 ; 0000 012F      temper=(18)+(593-adc)*0.08;
00039a d571      	RCALL SUBOPT_0xC
00039b e5e1      	LDI  R30,LOW(593)
00039c e0f2      	LDI  R31,HIGH(593)
00039d d573      	RCALL SUBOPT_0xD
00039e d5dc      	RCALL SUBOPT_0x22
                +
00039f e0a0     +LDI R26 , LOW ( 0x41900000 )
0003a0 e0b0     +LDI R27 , HIGH ( 0x41900000 )
0003a1 e980     +LDI R24 , BYTE3 ( 0x41900000 )
0003a2 e491     +LDI R25 , BYTE4 ( 0x41900000 )
                 	__GETD2N 0x41900000
0003a3 d572      	RCALL SUBOPT_0xE
                 ; 0000 0130     };
                 _0x99:
                 ; 0000 0131 
                 ; 0000 0132   if (adc > 592 && adc < 605)
0003a4 d614      	RCALL SUBOPT_0x2E
0003a5 f014      	BRLT _0x9D
0003a6 d617      	RCALL SUBOPT_0x2F
0003a7 f00c      	BRLT _0x9E
                 _0x9D:
0003a8 c00a      	RJMP _0x9C
                 _0x9E:
                 ; 0000 0133     {
                 ; 0000 0134      temper=(17)+(605-adc)*0.09;
0003a9 d562      	RCALL SUBOPT_0xC
0003aa e5ed      	LDI  R30,LOW(605)
0003ab e0f2      	LDI  R31,HIGH(605)
0003ac d564      	RCALL SUBOPT_0xD
0003ad d5d8      	RCALL SUBOPT_0x24
                +
0003ae e0a0     +LDI R26 , LOW ( 0x41880000 )
0003af e0b0     +LDI R27 , HIGH ( 0x41880000 )
0003b0 e888     +LDI R24 , BYTE3 ( 0x41880000 )
0003b1 e491     +LDI R25 , BYTE4 ( 0x41880000 )
                 	__GETD2N 0x41880000
0003b2 d563      	RCALL SUBOPT_0xE
                 ; 0000 0135     };
                 _0x9C:
                 ; 0000 0136 
                 ; 0000 0137   if (adc > 604 && adc < 615)
0003b3 d60a      	RCALL SUBOPT_0x2F
0003b4 f014      	BRLT _0xA0
0003b5 d60d      	RCALL SUBOPT_0x30
0003b6 f00c      	BRLT _0xA1
                 _0xA0:
0003b7 c00a      	RJMP _0x9F
                 _0xA1:
                 ; 0000 0138     {
                 ; 0000 0139      temper=(16)+(615-adc)*0.09;
0003b8 d553      	RCALL SUBOPT_0xC
0003b9 e6e7      	LDI  R30,LOW(615)
0003ba e0f2      	LDI  R31,HIGH(615)
0003bb d555      	RCALL SUBOPT_0xD
0003bc d5c9      	RCALL SUBOPT_0x24
                +
0003bd e0a0     +LDI R26 , LOW ( 0x41800000 )
0003be e0b0     +LDI R27 , HIGH ( 0x41800000 )
0003bf e880     +LDI R24 , BYTE3 ( 0x41800000 )
0003c0 e491     +LDI R25 , BYTE4 ( 0x41800000 )
                 	__GETD2N 0x41800000
0003c1 d554      	RCALL SUBOPT_0xE
                 ; 0000 013A     };
                 _0x9F:
                 ; 0000 013B 
                 ; 0000 013C   if (adc > 614 && adc < 628)
0003c2 d600      	RCALL SUBOPT_0x30
0003c3 f014      	BRLT _0xA3
0003c4 d603      	RCALL SUBOPT_0x31
0003c5 f00c      	BRLT _0xA4
                 _0xA3:
0003c6 c00a      	RJMP _0xA2
                 _0xA4:
                 ; 0000 013D     {
                 ; 0000 013E      temper=(15)+(626-adc)*0.10;
0003c7 d544      	RCALL SUBOPT_0xC
0003c8 e7e2      	LDI  R30,LOW(626)
0003c9 e0f2      	LDI  R31,HIGH(626)
0003ca d546      	RCALL SUBOPT_0xD
0003cb d59f      	RCALL SUBOPT_0x1F
                +
0003cc e0a0     +LDI R26 , LOW ( 0x41700000 )
0003cd e0b0     +LDI R27 , HIGH ( 0x41700000 )
0003ce e780     +LDI R24 , BYTE3 ( 0x41700000 )
0003cf e491     +LDI R25 , BYTE4 ( 0x41700000 )
                 	__GETD2N 0x41700000
0003d0 d545      	RCALL SUBOPT_0xE
                 ; 0000 013F     };
                 _0xA2:
                 ; 0000 0140 
                 ; 0000 0141   if (adc > 627 && adc < 638)
0003d1 d5f6      	RCALL SUBOPT_0x31
0003d2 f014      	BRLT _0xA6
0003d3 d5f9      	RCALL SUBOPT_0x32
0003d4 f00c      	BRLT _0xA7
                 _0xA6:
0003d5 c00a      	RJMP _0xA5
                 _0xA7:
                 ; 0000 0142     {
                 ; 0000 0143      temper=(14)+(638-adc)*0.08;
0003d6 d535      	RCALL SUBOPT_0xC
0003d7 e7ee      	LDI  R30,LOW(638)
0003d8 e0f2      	LDI  R31,HIGH(638)
0003d9 d537      	RCALL SUBOPT_0xD
0003da d5a0      	RCALL SUBOPT_0x22
                +
0003db e0a0     +LDI R26 , LOW ( 0x41600000 )
0003dc e0b0     +LDI R27 , HIGH ( 0x41600000 )
0003dd e680     +LDI R24 , BYTE3 ( 0x41600000 )
0003de e491     +LDI R25 , BYTE4 ( 0x41600000 )
                 	__GETD2N 0x41600000
0003df d536      	RCALL SUBOPT_0xE
                 ; 0000 0144     };
                 _0xA5:
                 ; 0000 0145 
                 ; 0000 0146   if (adc > 637 && adc < 650)
0003e0 d5ec      	RCALL SUBOPT_0x32
0003e1 f014      	BRLT _0xA9
0003e2 d5ef      	RCALL SUBOPT_0x33
0003e3 f00c      	BRLT _0xAA
                 _0xA9:
0003e4 c00a      	RJMP _0xA8
                 _0xAA:
                 ; 0000 0147     {
                 ; 0000 0148      temper=(13)+(650-adc)*0.08;
0003e5 d526      	RCALL SUBOPT_0xC
0003e6 e8ea      	LDI  R30,LOW(650)
0003e7 e0f2      	LDI  R31,HIGH(650)
0003e8 d528      	RCALL SUBOPT_0xD
0003e9 d591      	RCALL SUBOPT_0x22
                +
0003ea e0a0     +LDI R26 , LOW ( 0x41500000 )
0003eb e0b0     +LDI R27 , HIGH ( 0x41500000 )
0003ec e580     +LDI R24 , BYTE3 ( 0x41500000 )
0003ed e491     +LDI R25 , BYTE4 ( 0x41500000 )
                 	__GETD2N 0x41500000
0003ee d527      	RCALL SUBOPT_0xE
                 ; 0000 0149     };
                 _0xA8:
                 ; 0000 014A 
                 ; 0000 014B   if (adc > 649 && adc < 661)
0003ef d5e2      	RCALL SUBOPT_0x33
0003f0 f014      	BRLT _0xAC
0003f1 d5e5      	RCALL SUBOPT_0x34
0003f2 f00c      	BRLT _0xAD
                 _0xAC:
0003f3 c00a      	RJMP _0xAB
                 _0xAD:
                 ; 0000 014C     {
                 ; 0000 014D      temper=(12)+(661-adc)*0.09;
0003f4 d517      	RCALL SUBOPT_0xC
0003f5 e9e5      	LDI  R30,LOW(661)
0003f6 e0f2      	LDI  R31,HIGH(661)
0003f7 d519      	RCALL SUBOPT_0xD
0003f8 d58d      	RCALL SUBOPT_0x24
                +
0003f9 e0a0     +LDI R26 , LOW ( 0x41400000 )
0003fa e0b0     +LDI R27 , HIGH ( 0x41400000 )
0003fb e480     +LDI R24 , BYTE3 ( 0x41400000 )
0003fc e491     +LDI R25 , BYTE4 ( 0x41400000 )
                 	__GETD2N 0x41400000
0003fd d518      	RCALL SUBOPT_0xE
                 ; 0000 014E     };
                 _0xAB:
                 ; 0000 014F 
                 ; 0000 0150   if (adc > 660 && adc < 671)
0003fe d5d8      	RCALL SUBOPT_0x34
0003ff f014      	BRLT _0xAF
000400 d5db      	RCALL SUBOPT_0x35
000401 f00c      	BRLT _0xB0
                 _0xAF:
000402 c00a      	RJMP _0xAE
                 _0xB0:
                 ; 0000 0151     {
                 ; 0000 0152      temper=(11)+(671-adc)*0.10;
000403 d508      	RCALL SUBOPT_0xC
000404 e9ef      	LDI  R30,LOW(671)
000405 e0f2      	LDI  R31,HIGH(671)
000406 d50a      	RCALL SUBOPT_0xD
000407 d563      	RCALL SUBOPT_0x1F
                +
000408 e0a0     +LDI R26 , LOW ( 0x41300000 )
000409 e0b0     +LDI R27 , HIGH ( 0x41300000 )
00040a e380     +LDI R24 , BYTE3 ( 0x41300000 )
00040b e491     +LDI R25 , BYTE4 ( 0x41300000 )
                 	__GETD2N 0x41300000
00040c d509      	RCALL SUBOPT_0xE
                 ; 0000 0153     };
                 _0xAE:
                 ; 0000 0154 
                 ; 0000 0155   if (adc > 670 && adc < 681)
00040d d5ce      	RCALL SUBOPT_0x35
00040e f014      	BRLT _0xB2
00040f d5d1      	RCALL SUBOPT_0x36
000410 f00c      	BRLT _0xB3
                 _0xB2:
000411 c007      	RJMP _0xB1
                 _0xB3:
                 ; 0000 0156     {
                 ; 0000 0157      temper=(10)+(681-adc)*0.10;
000412 d4f9      	RCALL SUBOPT_0xC
000413 eae9      	LDI  R30,LOW(681)
000414 e0f2      	LDI  R31,HIGH(681)
000415 d4fb      	RCALL SUBOPT_0xD
000416 d554      	RCALL SUBOPT_0x1F
000417 d5ce      	RCALL SUBOPT_0x37
000418 d4fd      	RCALL SUBOPT_0xE
                 ; 0000 0158     };
                 _0xB1:
                 ; 0000 0159 
                 ; 0000 015A   if (adc > 680 && adc < 734)
000419 d5c7      	RCALL SUBOPT_0x36
00041a f014      	BRLT _0xB5
00041b d5cf      	RCALL SUBOPT_0x38
00041c f00c      	BRLT _0xB6
                 _0xB5:
00041d c00a      	RJMP _0xB4
                 _0xB6:
                 ; 0000 015B     {
                 ; 0000 015C      temper=(5)+(734-adc)*0.09;
00041e d4ed      	RCALL SUBOPT_0xC
00041f edee      	LDI  R30,LOW(734)
000420 e0f2      	LDI  R31,HIGH(734)
000421 d4ef      	RCALL SUBOPT_0xD
000422 d563      	RCALL SUBOPT_0x24
                +
000423 e0a0     +LDI R26 , LOW ( 0x40A00000 )
000424 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
000425 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
000426 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
000427 d4ee      	RCALL SUBOPT_0xE
                 ; 0000 015D     };
                 _0xB4:
                 ; 0000 015E 
                 ; 0000 015F   if (adc > 733 && adc < 783)
000428 d5c2      	RCALL SUBOPT_0x38
000429 f014      	BRLT _0xB8
00042a d5c5      	RCALL SUBOPT_0x39
00042b f00c      	BRLT _0xB9
                 _0xB8:
00042c c00a      	RJMP _0xB7
                 _0xB9:
                 ; 0000 0160     {
                 ; 0000 0161      temper=(0)+(783-adc)*0.10;
00042d d4de      	RCALL SUBOPT_0xC
00042e e0ef      	LDI  R30,LOW(783)
00042f e0f3      	LDI  R31,HIGH(783)
000430 d4e0      	RCALL SUBOPT_0xD
000431 d539      	RCALL SUBOPT_0x1F
                +
000432 e0a0     +LDI R26 , LOW ( 0x0 )
000433 e0b0     +LDI R27 , HIGH ( 0x0 )
000434 e080     +LDI R24 , BYTE3 ( 0x0 )
000435 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
000436 d4df      	RCALL SUBOPT_0xE
                 ; 0000 0162     };
                 _0xB7:
                 ; 0000 0163 
                 ; 0000 0164   if (adc > 782 && adc < 828)
000437 d5b8      	RCALL SUBOPT_0x39
000438 f014      	BRLT _0xBB
000439 d5bb      	RCALL SUBOPT_0x3A
00043a f00c      	BRLT _0xBC
                 _0xBB:
00043b c00a      	RJMP _0xBA
                 _0xBC:
                 ; 0000 0165     {
                 ; 0000 0166      temper=(-5)+(828-adc)*0.11;
00043c d4cf      	RCALL SUBOPT_0xC
00043d e3ec      	LDI  R30,LOW(828)
00043e e0f3      	LDI  R31,HIGH(828)
00043f d4d1      	RCALL SUBOPT_0xD
000440 d51f      	RCALL SUBOPT_0x1D
                +
000441 e0a0     +LDI R26 , LOW ( 0xC0A00000 )
000442 e0b0     +LDI R27 , HIGH ( 0xC0A00000 )
000443 ea80     +LDI R24 , BYTE3 ( 0xC0A00000 )
000444 ec90     +LDI R25 , BYTE4 ( 0xC0A00000 )
                 	__GETD2N 0xC0A00000
000445 d4d0      	RCALL SUBOPT_0xE
                 ; 0000 0167     };
                 _0xBA:
                 ; 0000 0168 
                 ; 0000 0169   if (adc > 827 && adc < 867)
000446 d5ae      	RCALL SUBOPT_0x3A
000447 f014      	BRLT _0xBE
000448 d5b1      	RCALL SUBOPT_0x3B
000449 f00c      	BRLT _0xBF
                 _0xBE:
00044a c00e      	RJMP _0xBD
                 _0xBF:
                 ; 0000 016A     {
                 ; 0000 016B      temper=(-10)+(867-adc)*0.13;
00044b d4c0      	RCALL SUBOPT_0xC
00044c e6e3      	LDI  R30,LOW(867)
00044d e0f3      	LDI  R31,HIGH(867)
00044e d4c2      	RCALL SUBOPT_0xD
                +
00044f eba8     +LDI R26 , LOW ( 0x3E051EB8 )
000450 e1be     +LDI R27 , HIGH ( 0x3E051EB8 )
000451 e085     +LDI R24 , BYTE3 ( 0x3E051EB8 )
000452 e39e     +LDI R25 , BYTE4 ( 0x3E051EB8 )
                 	__GETD2N 0x3E051EB8
000453 d795      	RCALL __MULF12
                +
000454 e0a0     +LDI R26 , LOW ( 0xC1200000 )
000455 e0b0     +LDI R27 , HIGH ( 0xC1200000 )
000456 e280     +LDI R24 , BYTE3 ( 0xC1200000 )
000457 ec91     +LDI R25 , BYTE4 ( 0xC1200000 )
                 	__GETD2N 0xC1200000
000458 d4bd      	RCALL SUBOPT_0xE
                 ; 0000 016C     };
                 _0xBD:
                 ; 0000 016D 
                 ; 0000 016E   if (adc > 866 && adc < 900)
000459 d5a0      	RCALL SUBOPT_0x3B
00045a f014      	BRLT _0xC1
00045b d5a3      	RCALL SUBOPT_0x3C
00045c f00c      	BRLT _0xC2
                 _0xC1:
00045d c00e      	RJMP _0xC0
                 _0xC2:
                 ; 0000 016F     {
                 ; 0000 0170      temper=(-15)+(900-adc)*0.15;
00045e d4ad      	RCALL SUBOPT_0xC
00045f e8e4      	LDI  R30,LOW(900)
000460 e0f3      	LDI  R31,HIGH(900)
000461 d4af      	RCALL SUBOPT_0xD
                +
000462 e9aa     +LDI R26 , LOW ( 0x3E19999A )
000463 e9b9     +LDI R27 , HIGH ( 0x3E19999A )
000464 e189     +LDI R24 , BYTE3 ( 0x3E19999A )
000465 e39e     +LDI R25 , BYTE4 ( 0x3E19999A )
                 	__GETD2N 0x3E19999A
000466 d782      	RCALL __MULF12
                +
000467 e0a0     +LDI R26 , LOW ( 0xC1700000 )
000468 e0b0     +LDI R27 , HIGH ( 0xC1700000 )
000469 e780     +LDI R24 , BYTE3 ( 0xC1700000 )
00046a ec91     +LDI R25 , BYTE4 ( 0xC1700000 )
                 	__GETD2N 0xC1700000
00046b d4aa      	RCALL SUBOPT_0xE
                 ; 0000 0171     };
                 _0xC0:
                 ; 0000 0172 
                 ; 0000 0173   if (adc > 899 && adc < 928)
00046c d592      	RCALL SUBOPT_0x3C
00046d f014      	BRLT _0xC4
00046e d595      	RCALL SUBOPT_0x3D
00046f f00c      	BRLT _0xC5
                 _0xC4:
000470 c00a      	RJMP _0xC3
                 _0xC5:
                 ; 0000 0174     {
                 ; 0000 0175      temper=(-20)+(928-adc)*0.18;
000471 d49a      	RCALL SUBOPT_0xC
000472 eae0      	LDI  R30,LOW(928)
000473 e0f3      	LDI  R31,HIGH(928)
000474 d49c      	RCALL SUBOPT_0xD
000475 d4d0      	RCALL SUBOPT_0x18
                +
000476 e0a0     +LDI R26 , LOW ( 0xC1A00000 )
000477 e0b0     +LDI R27 , HIGH ( 0xC1A00000 )
000478 ea80     +LDI R24 , BYTE3 ( 0xC1A00000 )
000479 ec91     +LDI R25 , BYTE4 ( 0xC1A00000 )
                 	__GETD2N 0xC1A00000
00047a d49b      	RCALL SUBOPT_0xE
                 ; 0000 0176     };
                 _0xC3:
                 ; 0000 0177 
                 ; 0000 0178   if (adc > 927 && adc < 950)
00047b d588      	RCALL SUBOPT_0x3D
00047c f014      	BRLT _0xC7
00047d d58b      	RCALL SUBOPT_0x3E
00047e f00c      	BRLT _0xC8
                 _0xC7:
00047f c00e      	RJMP _0xC6
                 _0xC8:
                 ; 0000 0179     {
                 ; 0000 017A      temper=(-25)+(950-adc)*0.22;
000480 d48b      	RCALL SUBOPT_0xC
000481 ebe6      	LDI  R30,LOW(950)
000482 e0f3      	LDI  R31,HIGH(950)
000483 d48d      	RCALL SUBOPT_0xD
                +
000484 eaae     +LDI R26 , LOW ( 0x3E6147AE )
000485 e4b7     +LDI R27 , HIGH ( 0x3E6147AE )
000486 e681     +LDI R24 , BYTE3 ( 0x3E6147AE )
000487 e39e     +LDI R25 , BYTE4 ( 0x3E6147AE )
                 	__GETD2N 0x3E6147AE
000488 d760      	RCALL __MULF12
                +
000489 e0a0     +LDI R26 , LOW ( 0xC1C80000 )
00048a e0b0     +LDI R27 , HIGH ( 0xC1C80000 )
00048b ec88     +LDI R24 , BYTE3 ( 0xC1C80000 )
00048c ec91     +LDI R25 , BYTE4 ( 0xC1C80000 )
                 	__GETD2N 0xC1C80000
00048d d488      	RCALL SUBOPT_0xE
                 ; 0000 017B     };
                 _0xC6:
                 ; 0000 017C 
                 ; 0000 017D   if (adc > 949)
00048e d57a      	RCALL SUBOPT_0x3E
00048f f014      	BRLT _0xC9
                 ; 0000 017E     {
                 ; 0000 017F       avariya_datchik_ne_podkluchen=1;
000490 9468      	SET
000491 f823      	BLD  R2,3
                 ; 0000 0180     };
                 _0xC9:
                 ; 0000 0181   return temper;
000492 d804      	RCALL __GETD1S0
000493 9624      	ADIW R28,4
000494 9508      	RET
                 ; 0000 0182 }
                 ; .FEND
                 ;// Timer 0 ОЕПХНД 3,2 ЛЯ
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0185 {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000495 920a      	ST   -Y,R0
000496 93aa      	ST   -Y,R26
000497 93ba      	ST   -Y,R27
000498 93ea      	ST   -Y,R30
000499 93fa      	ST   -Y,R31
00049a b7ef      	IN   R30,SREG
00049b 93ea      	ST   -Y,R30
                 ; 0000 0186 TCNT0=0x9C;
00049c e9ec      	LDI  R30,LOW(156)
00049d bfe2      	OUT  0x32,R30
                 ; 0000 0187 
                 ; 0000 0188    if(show_temp==1)
00049e fe24      	SBRS R2,4
00049f c023      	RJMP _0xCA
                 ; 0000 0189      {
                 ; 0000 018A        if(buffer<100)
0004a0 d56d      	RCALL SUBOPT_0x3F
0004a1 f484      	BRGE _0xCB
                 ; 0000 018B         switch(i)
0004a2 2de8      	MOV  R30,R8
0004a3 d43b      	RCALL SUBOPT_0x0
                 ; 0000 018C           {
                 ; 0000 018D            case 0:{PORTD=t1;            PORTB.0=0; PORTB.6=0; PORTB.7=1; break;}
0004a4 f411      	BRNE _0xCF
0004a5 d570      	RCALL SUBOPT_0x40
0004a6 c00b      	RJMP _0xCE
                 ; 0000 018E            case 1:{PORTD=t2; PORTD.0=0; PORTB.0=0; PORTB.6=1; PORTB.7=0; break;}
                 _0xCF:
0004a7 d43a      	RCALL SUBOPT_0x1
0004a8 f429      	BRNE _0xD6
0004a9 ba62      	OUT  0x12,R6
0004aa 9890      	CBI  0x12,0
0004ab 98c0      	CBI  0x18,0
0004ac 9ac6      	SBI  0x18,6
0004ad c003      	RJMP _0x1D8
                 ; 0000 018F            case 2:{PORTD=t3;            PORTB.0=1; PORTB.6=0; PORTB.7=0; break;}
                 _0xD6:
0004ae d437      	RCALL SUBOPT_0x2
0004af f411      	BRNE _0xCE
0004b0 d56a      	RCALL SUBOPT_0x41
                 _0x1D8:
0004b1 98c7      	CBI  0x18,7
                 ; 0000 0190           }
                 _0xCE:
                 ; 0000 0191         if(buffer>99)
                 _0xCB:
0004b2 d55b      	RCALL SUBOPT_0x3F
0004b3 f07c      	BRLT _0xE6
                 ; 0000 0192          switch(i)
0004b4 2de8      	MOV  R30,R8
0004b5 d429      	RCALL SUBOPT_0x0
                 ; 0000 0193            {
                 ; 0000 0194             case 0:{PORTD=t1; PORTB.0=0; PORTB.6=0; PORTB.7=1; break;}
0004b6 f411      	BRNE _0xEA
0004b7 d55e      	RCALL SUBOPT_0x40
0004b8 c00a      	RJMP _0xE9
                 ; 0000 0195             case 1:{PORTD=t2; PORTB.0=0; PORTB.6=1; PORTB.7=0; break;}
                 _0xEA:
0004b9 d428      	RCALL SUBOPT_0x1
0004ba f421      	BRNE _0xF1
0004bb ba62      	OUT  0x12,R6
0004bc 98c0      	CBI  0x18,0
0004bd 9ac6      	SBI  0x18,6
0004be c003      	RJMP _0x1D9
                 ; 0000 0196             case 2:{PORTD=t3; PORTB.0=1; PORTB.6=0; PORTB.7=0; break;}
                 _0xF1:
0004bf d426      	RCALL SUBOPT_0x2
0004c0 f411      	BRNE _0xE9
0004c1 d559      	RCALL SUBOPT_0x41
                 _0x1D9:
0004c2 98c7      	CBI  0x18,7
                 ; 0000 0197            }
                 _0xE9:
                 ; 0000 0198 
                 ; 0000 0199      };
                 _0xE6:
                 _0xCA:
                 ; 0000 019A    if(show_termostat==1 | show_ustavku==1 | par_ust==1 | show_par==1)
0004c3 d55b      	RCALL SUBOPT_0x42
0004c4 2e0e      	MOV  R0,R30
0004c5 e0a0      	LDI  R26,0
0004c6 fc26      	SBRC R2,6
0004c7 e0a1      	LDI  R26,1
0004c8 e0e1      	LDI  R30,LOW(1)
0004c9 d787      	RCALL __EQB12
0004ca 2a0e      	OR   R0,R30
0004cb e0a0      	LDI  R26,0
0004cc fc27      	SBRC R2,7
0004cd e0a1      	LDI  R26,1
0004ce e0e1      	LDI  R30,LOW(1)
0004cf d781      	RCALL __EQB12
0004d0 2a0e      	OR   R0,R30
0004d1 e0a0      	LDI  R26,0
0004d2 fc40      	SBRC R4,0
0004d3 e0a1      	LDI  R26,1
0004d4 e0e1      	LDI  R30,LOW(1)
0004d5 d77b      	RCALL __EQB12
0004d6 29e0      	OR   R30,R0
0004d7 f159      	BREQ _0xFF
                 ; 0000 019B      {
                 ; 0000 019C 
                 ; 0000 019D       if (t3==0x05 & exit==0 & P03==0)
0004d8 2da9      	MOV  R26,R9
0004d9 e0e5      	LDI  R30,LOW(5)
0004da d776      	RCALL __EQB12
0004db 2e0e      	MOV  R0,R30
0004dc e0a0      	LDI  R26,0
0004dd fc37      	SBRC R3,7
0004de e0a1      	LDI  R26,1
0004df e0e0      	LDI  R30,LOW(0)
0004e0 d770      	RCALL __EQB12
0004e1 220e      	AND  R0,R30
0004e2 e0a0      	LDI  R26,0
0004e3 fc33      	SBRC R3,3
0004e4 e0a1      	LDI  R26,1
0004e5 e0e0      	LDI  R30,LOW(0)
0004e6 d76a      	RCALL __EQB12
0004e7 21e0      	AND  R30,R0
0004e8 f011      	BREQ _0x100
                 ; 0000 019E        {
                 ; 0000 019F        t3=0xFF;
0004e9 efef      	LDI  R30,LOW(255)
0004ea 2e9e      	MOV  R9,R30
                 ; 0000 01A0        };
                 _0x100:
                 ; 0000 01A1       if(flag_minus==1)
0004eb fe43      	SBRS R4,3
0004ec c003      	RJMP _0x101
                 ; 0000 01A2        {
                 ; 0000 01A3        t3=PORTD.2=0b11111011;
0004ed 9a92      	SBI  0x12,2
0004ee efeb      	LDI  R30,LOW(251)
0004ef 2e9e      	MOV  R9,R30
                 ; 0000 01A4        };
                 _0x101:
                 ; 0000 01A5 
                 ; 0000 01A6       switch(i)
0004f0 2de8      	MOV  R30,R8
0004f1 d3ed      	RCALL SUBOPT_0x0
                 ; 0000 01A7             {
                 ; 0000 01A8             case 0:{PORTD=t1; PORTB.0=0; PORTB.6=0; PORTB.7=1; break;}
0004f2 f411      	BRNE _0x107
0004f3 d522      	RCALL SUBOPT_0x40
0004f4 c00e      	RJMP _0x106
                 ; 0000 01A9             case 1:{PORTD=t2; if(screen==24){PORTD.0=0;}; PORTB.0=0; PORTB.6=1; PORTB.7=0; break;}
                 _0x107:
0004f5 d3ec      	RCALL SUBOPT_0x1
0004f6 f441      	BRNE _0x10E
0004f7 ba62      	OUT  0x12,R6
0004f8 e1e8      	LDI  R30,LOW(24)
0004f9 15ec      	CP   R30,R12
0004fa f409      	BRNE _0x10F
0004fb 9890      	CBI  0x12,0
                 _0x10F:
0004fc 98c0      	CBI  0x18,0
0004fd 9ac6      	SBI  0x18,6
0004fe c003      	RJMP _0x1DA
                 ; 0000 01AA             case 2:{PORTD=t3; PORTB.0=1; PORTB.6=0; PORTB.7=0; break;}
                 _0x10E:
0004ff d3e6      	RCALL SUBOPT_0x2
000500 f411      	BRNE _0x106
000501 d519      	RCALL SUBOPT_0x41
                 _0x1DA:
000502 98c7      	CBI  0x18,7
                 ; 0000 01AB             }
                 _0x106:
                 ; 0000 01AC      };
                 _0xFF:
                 ; 0000 01AD 
                 ; 0000 01AE 
                 ; 0000 01AF    i++;
000503 9483      	INC  R8
                 ; 0000 01B0    if(i>2)
000504 e0e2      	LDI  R30,LOW(2)
000505 15e8      	CP   R30,R8
000506 f408      	BRSH _0x11F
                 ; 0000 01B1    i=0;
000507 2488      	CLR  R8
                 ; 0000 01B2 }
                 _0x11F:
000508 91e9      	LD   R30,Y+
000509 bfef      	OUT  SREG,R30
00050a 91f9      	LD   R31,Y+
00050b 91e9      	LD   R30,Y+
00050c 91b9      	LD   R27,Y+
00050d 91a9      	LD   R26,Y+
00050e 9009      	LD   R0,Y+
00050f 9518      	RETI
                 ; .FEND
                 ;
                 ;// Timer1 ОЕПХНД 10 ЛЯ
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 01B6 {
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
000510 920a      	ST   -Y,R0
000511 921a      	ST   -Y,R1
000512 92fa      	ST   -Y,R15
000513 936a      	ST   -Y,R22
000514 937a      	ST   -Y,R23
000515 938a      	ST   -Y,R24
000516 939a      	ST   -Y,R25
000517 93aa      	ST   -Y,R26
000518 93ba      	ST   -Y,R27
000519 93ea      	ST   -Y,R30
00051a 93fa      	ST   -Y,R31
00051b b7ef      	IN   R30,SREG
00051c 93ea      	ST   -Y,R30
                 ; 0000 01B7 TCNT1H=0xD8F0 >> 8;
00051d d507      	RCALL SUBOPT_0x43
                 ; 0000 01B8 TCNT1L=0xD8F0 & 0xff;
                 ; 0000 01B9 wait_timer_for_termostat++;
00051e 94a3      	INC  R10
                 ; 0000 01BA wait_timer1++;
00051f 94b3      	INC  R11
                 ; 0000 01BB buzzer++;
000520 e7aa      	LDI  R26,LOW(_buzzer)
000521 e0b1      	LDI  R27,HIGH(_buzzer)
000522 d507      	RCALL SUBOPT_0x44
                 ; 0000 01BC 
                 ; 0000 01BD if(wait_timer1==5 || wait_timer1==10 || wait_timer1==15 || wait_timer1==20)         // йЮФДШЕ 50 ЛЯ - ДЕЙНДХПНБЮМХЕ
000523 e0e5      	LDI  R30,LOW(5)
000524 15eb      	CP   R30,R11
000525 f051      	BREQ _0x121
000526 e0ea      	LDI  R30,LOW(10)
000527 15eb      	CP   R30,R11
000528 f039      	BREQ _0x121
000529 e0ef      	LDI  R30,LOW(15)
00052a 15eb      	CP   R30,R11
00052b f021      	BREQ _0x121
00052c e1e4      	LDI  R30,LOW(20)
00052d 15eb      	CP   R30,R11
00052e f009      	BREQ _0x121
00052f c064      	RJMP _0x120
                 _0x121:
                 ; 0000 01BE   {
                 ; 0000 01BF     if (show_temp==1)
000530 fe24      	SBRS R2,4
000531 c00b      	RJMP _0x123
                 ; 0000 01C0       {
                 ; 0000 01C1         buffer=readtemp();
000532 d4fd      	RCALL SUBOPT_0x45
                 ; 0000 01C2         if(buffer<100)
000533 d4da      	RCALL SUBOPT_0x3F
000534 f424      	BRGE _0x124
                 ; 0000 01C3           {
                 ; 0000 01C4             currtemp=10*readtemp();
000535 dbe9      	RCALL _readtemp
000536 d4af      	RCALL SUBOPT_0x37
000537 d6b1      	RCALL __MULF12
000538 d4fe      	RCALL SUBOPT_0x46
                 ; 0000 01C5             getkodes(currtemp);
                 ; 0000 01C6           }
                 ; 0000 01C7         if(buffer>99)
                 _0x124:
000539 d4d4      	RCALL SUBOPT_0x3F
00053a f014      	BRLT _0x125
                 ; 0000 01C8           {
                 ; 0000 01C9             currtemp=readtemp();
00053b dbe3      	RCALL _readtemp
00053c d4fa      	RCALL SUBOPT_0x46
                 ; 0000 01CA             getkodes(currtemp);
                 ; 0000 01CB           }
                 ; 0000 01CC       }
                 _0x125:
                 ; 0000 01CD 
                 ; 0000 01CE     if (show_termostat==1)
                 _0x123:
00053d fe25      	SBRS R2,5
00053e c00d      	RJMP _0x126
                 ; 0000 01CF       {
                 ; 0000 01D0         if(flag_pereklu4==1)
00053f fe44      	SBRS R4,4
000540 c004      	RJMP _0x127
                 ; 0000 01D1           {
                 ; 0000 01D2            getkodes(P6);
000541 d4ff      	RCALL SUBOPT_0x47
000542 01df      	MOVW R26,R30
000543 db16      	RCALL _getkodes
                 ; 0000 01D3            buffer=readtemp();
000544 d4eb      	RCALL SUBOPT_0x45
                 ; 0000 01D4           };
                 _0x127:
                 ; 0000 01D5         if(flag_pereklu4==0)
000545 fc44      	SBRC R4,4
000546 c005      	RJMP _0x128
                 ; 0000 01D6           {
                 ; 0000 01D7            getkodes(readtemp());
000547 dbd7      	RCALL _readtemp
000548 d5e6      	RCALL __CFD1
000549 01df      	MOVW R26,R30
00054a db0f      	RCALL _getkodes
                 ; 0000 01D8            buffer=readtemp();
00054b d4e4      	RCALL SUBOPT_0x45
                 ; 0000 01D9           };
                 _0x128:
                 ; 0000 01DA       }
                 ; 0000 01DB     if (show_ustavku==1)
                 _0x126:
00054c fe26      	SBRS R2,6
00054d c006      	RJMP _0x129
                 ; 0000 01DC       {
                 ; 0000 01DD        t1=kod[12]; t2=kod[11]; t3=kod[10];    // USt
                +
00054e 9070 016c+LDS R7 , _kod_G000 + ( 12 )
                 	__GETBRMN 7,_kod_G000,12
                +
000550 9060 016b+LDS R6 , _kod_G000 + ( 11 )
                 	__GETBRMN 6,_kod_G000,11
                +
000552 9090 016a+LDS R9 , _kod_G000 + ( 10 )
                 	__GETBRMN 9,_kod_G000,10
                 ; 0000 01DE       };
                 _0x129:
                 ; 0000 01DF     if (par_ust==1)
000554 fe27      	SBRS R2,7
000555 c031      	RJMP _0x12A
                 ; 0000 01E0       {
                 ; 0000 01E1        if(P00==1)
000556 fe30      	SBRS R3,0
000557 c004      	RJMP _0x12B
                 ; 0000 01E2          {
                 ; 0000 01E3           t1=kod[0]; t2=kod[0]; t3=kod[13];
000558 9070 0160 	LDS  R7,_kod_G000
00055a d3ab      	RCALL SUBOPT_0xA
00055b d4ea      	RCALL SUBOPT_0x48
                 ; 0000 01E4          };
                 _0x12B:
                 ; 0000 01E5        if(P01==1)
00055c fe31      	SBRS R3,1
00055d c004      	RJMP _0x12C
                 ; 0000 01E6          {
                 ; 0000 01E7           t1=kod[1]; t2=kod[0]; t3=kod[13];
                +
00055e 9070 0161+LDS R7 , _kod_G000 + ( 1 )
                 	__GETBRMN 7,_kod_G000,1
000560 d3a5      	RCALL SUBOPT_0xA
000561 d4e4      	RCALL SUBOPT_0x48
                 ; 0000 01E8          };
                 _0x12C:
                 ; 0000 01E9        if(P02==1)
000562 fe32      	SBRS R3,2
000563 c004      	RJMP _0x12D
                 ; 0000 01EA          {
                 ; 0000 01EB           t1=kod[2]; t2=kod[0]; t3=kod[13];
                +
000564 9070 0162+LDS R7 , _kod_G000 + ( 2 )
                 	__GETBRMN 7,_kod_G000,2
000566 d39f      	RCALL SUBOPT_0xA
000567 d4de      	RCALL SUBOPT_0x48
                 ; 0000 01EC          };
                 _0x12D:
                 ; 0000 01ED        if(P03==1)
000568 fe33      	SBRS R3,3
000569 c004      	RJMP _0x12E
                 ; 0000 01EE          {
                 ; 0000 01EF           t1=kod[3]; t2=kod[0]; t3=kod[13];
                +
00056a 9070 0163+LDS R7 , _kod_G000 + ( 3 )
                 	__GETBRMN 7,_kod_G000,3
00056c d399      	RCALL SUBOPT_0xA
00056d d4d8      	RCALL SUBOPT_0x48
                 ; 0000 01F0          };
                 _0x12E:
                 ; 0000 01F1        if(P04==1)
00056e fe34      	SBRS R3,4
00056f c004      	RJMP _0x12F
                 ; 0000 01F2          {
                 ; 0000 01F3           t1=kod[4]; t2=kod[0]; t3=kod[13];
                +
000570 9070 0164+LDS R7 , _kod_G000 + ( 4 )
                 	__GETBRMN 7,_kod_G000,4
000572 d393      	RCALL SUBOPT_0xA
000573 d4d2      	RCALL SUBOPT_0x48
                 ; 0000 01F4          };
                 _0x12F:
                 ; 0000 01F5        if(P05==1)
000574 fe35      	SBRS R3,5
000575 c004      	RJMP _0x130
                 ; 0000 01F6          {
                 ; 0000 01F7           t1=kod[5]; t2=kod[0]; t3=kod[13];
                +
000576 9070 0165+LDS R7 , _kod_G000 + ( 5 )
                 	__GETBRMN 7,_kod_G000,5
000578 d38d      	RCALL SUBOPT_0xA
000579 d4cc      	RCALL SUBOPT_0x48
                 ; 0000 01F8          };
                 _0x130:
                 ; 0000 01F9        if(P06==1)
00057a fe36      	SBRS R3,6
00057b c004      	RJMP _0x131
                 ; 0000 01FA          {
                 ; 0000 01FB           t1=kod[6]; t2=kod[0]; t3=kod[13];
                +
00057c 9070 0166+LDS R7 , _kod_G000 + ( 6 )
                 	__GETBRMN 7,_kod_G000,6
00057e d387      	RCALL SUBOPT_0xA
00057f d4c6      	RCALL SUBOPT_0x48
                 ; 0000 01FC          };
                 _0x131:
                 ; 0000 01FD        if(exit==1)
000580 fe37      	SBRS R3,7
000581 c005      	RJMP _0x132
                 ; 0000 01FE          {
                 ; 0000 01FF           t1=kod[12]; t2=kod[10]; t3=kod[0];
                +
000582 9070 016c+LDS R7 , _kod_G000 + ( 12 )
                 	__GETBRMN 7,_kod_G000,12
                +
000584 9060 016a+LDS R6 , _kod_G000 + ( 10 )
                 	__GETBRMN 6,_kod_G000,10
000586 d382      	RCALL SUBOPT_0xB
                 ; 0000 0200          };
                 _0x132:
                 ; 0000 0201       };
                 _0x12A:
                 ; 0000 0202     if (show_par==1)
000587 fe40      	SBRS R4,0
000588 c00b      	RJMP _0x133
                 ; 0000 0203       {   if(flag_minus==0)
000589 fc43      	SBRC R4,3
00058a c002      	RJMP _0x134
                 ; 0000 0204             {
                 ; 0000 0205              getkodes(par);
00058b d4bd      	RCALL SUBOPT_0x49
00058c dacd      	RCALL _getkodes
                 ; 0000 0206             };
                 _0x134:
                 ; 0000 0207           if(flag_minus==1)
00058d fe43      	SBRS R4,3
00058e c005      	RJMP _0x135
                 ; 0000 0208             {
                 ; 0000 0209             getkodes(minus);
00058f 91a0 0178 	LDS  R26,_minus
000591 91b0 0179 	LDS  R27,_minus+1
000593 dac6      	RCALL _getkodes
                 ; 0000 020A             };
                 _0x135:
                 ; 0000 020B       };
                 _0x133:
                 ; 0000 020C  };
                 _0x120:
                 ; 0000 020D 
                 ; 0000 020E 
                 ; 0000 020F if(wait_timer1==10 || wait_timer1==20 && show_temp==1)         // йЮФДШЕ 100 ЛЯ - нОПНЯ южо.
000594 e0ea      	LDI  R30,LOW(10)
000595 15eb      	CP   R30,R11
000596 f031      	BREQ _0x137
000597 e1e4      	LDI  R30,LOW(20)
000598 15eb      	CP   R30,R11
000599 f411      	BRNE _0x138
00059a fc24      	SBRC R2,4
00059b c001      	RJMP _0x137
                 _0x138:
00059c c019      	RJMP _0x136
                 _0x137:
                 ; 0000 0210   {
                 ; 0000 0211    filterin=read_adc(5);
00059d e0a5      	LDI  R26,LOW(5)
00059e db71      	RCALL _read_adc
00059f 93e0 017e 	STS  _filterin,R30
0005a1 93f0 017f 	STS  _filterin+1,R31
                 ; 0000 0212    adc=(coeff_beta * adc + filterin  * coeff_alpha) >> N; // пЕЙСПЯХБМШИ ТХКРП 1 ОНПЪДЙЮ
0005a3 91e0 017c 	LDS  R30,_adc
0005a5 91f0 017d 	LDS  R31,_adc+1
0005a7 e0af      	LDI  R26,LOW(15)
0005a8 e0b0      	LDI  R27,HIGH(15)
0005a9 d6b4      	RCALL __MULW12
0005aa 91a0 017e 	LDS  R26,_filterin
0005ac 91b0 017f 	LDS  R27,_filterin+1
0005ae 0fae      	ADD  R26,R30
0005af 1fbf      	ADC  R27,R31
0005b0 01fd      	MOVW R30,R26
0005b1 d691      	RCALL __ASRW4
0005b2 93e0 017c 	STS  _adc,R30
0005b4 93f0 017d 	STS  _adc+1,R31
                 ; 0000 0213   };
                 _0x136:
                 ; 0000 0214 
                 ; 0000 0215 
                 ; 0000 0216 if(wait_timer1==20)         // йЮФДШЕ 200 ЛЯ - НОПНЯ ЙМНОНЙ
0005b6 e1e4      	LDI  R30,LOW(20)
0005b7 15eb      	CP   R30,R11
0005b8 f469      	BRNE _0x13B
                 ; 0000 0217   {
                 ; 0000 0218    if(PINB.1==0)
0005b9 99b1      	SBIC 0x16,1
0005ba c002      	RJMP _0x13C
                 ; 0000 0219      {
                 ; 0000 021A       knopka_left=1;
0005bb 9468      	SET
0005bc f820      	BLD  R2,0
                 ; 0000 021B      };
                 _0x13C:
                 ; 0000 021C    if(PINB.2==0)
0005bd 99b2      	SBIC 0x16,2
0005be c002      	RJMP _0x13D
                 ; 0000 021D      {
                 ; 0000 021E       knopka_middle=1;
0005bf 9468      	SET
0005c0 f822      	BLD  R2,2
                 ; 0000 021F      };
                 _0x13D:
                 ; 0000 0220    if(PINB.3==0)
0005c1 99b3      	SBIC 0x16,3
0005c2 c002      	RJMP _0x13E
                 ; 0000 0221      {
                 ; 0000 0222       knopka_right=1;
0005c3 9468      	SET
0005c4 f821      	BLD  R2,1
                 ; 0000 0223      };
                 _0x13E:
                 ; 0000 0224    wait_timer1=0;
0005c5 24bb      	CLR  R11
                 ; 0000 0225   };
                 _0x13B:
                 ; 0000 0226 
                 ; 0000 0227 if(wait_timer_for_termostat==255)
0005c6 efef      	LDI  R30,LOW(255)
0005c7 15ea      	CP   R30,R10
0005c8 f419      	BRNE _0x13F
                 ; 0000 0228  {
                 ; 0000 0229   flag_pereklu4= !flag_pereklu4;
0005c9 e1e0      	LDI  R30,LOW(16)
0005ca 264e      	EOR  R4,R30
                 ; 0000 022A   wait_timer_for_termostat=0;
0005cb 24aa      	CLR  R10
                 ; 0000 022B  }
                 ; 0000 022C 
                 ; 0000 022D if(counter_buzzer<10 && flag_enter==1 && P3==1)
                 _0x13F:
0005cc e0ea      	LDI  R30,LOW(10)
0005cd 16de      	CP   R13,R30
0005ce f420      	BRSH _0x141
0005cf fe41      	SBRS R4,1
0005d0 c002      	RJMP _0x141
0005d1 d47c      	RCALL SUBOPT_0x4A
0005d2 f009      	BREQ _0x142
                 _0x141:
0005d3 c00c      	RJMP _0x140
                 _0x142:
                 ; 0000 022E     {
                 ; 0000 022F      if(buzzer==50)
0005d4 d47e      	RCALL SUBOPT_0x4B
0005d5 97d2      	SBIW R26,50
0005d6 f411      	BRNE _0x143
                 ; 0000 0230       {
                 ; 0000 0231       PORTC.0=1;
0005d7 9aa8      	SBI  0x15,0
                 ; 0000 0232       counter_buzzer++;
0005d8 94d3      	INC  R13
                 ; 0000 0233       }
                 ; 0000 0234      if(buzzer==100)
                 _0x143:
0005d9 d479      	RCALL SUBOPT_0x4B
0005da 36a4      	CPI  R26,LOW(0x64)
0005db e0e0      	LDI  R30,HIGH(0x64)
0005dc 07be      	CPC  R27,R30
0005dd f411      	BRNE _0x146
                 ; 0000 0235       {
                 ; 0000 0236       PORTC.0=0;
0005de 98a8      	CBI  0x15,0
                 ; 0000 0237       counter_buzzer++;
0005df 94d3      	INC  R13
                 ; 0000 0238       };
                 _0x146:
                 ; 0000 0239 
                 ; 0000 023A     };
                 _0x140:
                 ; 0000 023B 
                 ; 0000 023C if(buzzer>100)
0005e0 d472      	RCALL SUBOPT_0x4B
0005e1 36a5      	CPI  R26,LOW(0x65)
0005e2 e0e0      	LDI  R30,HIGH(0x65)
0005e3 07be      	CPC  R27,R30
0005e4 f034      	BRLT _0x149
                 ; 0000 023D  {
                 ; 0000 023E   buzzer=0;
0005e5 e0e0      	LDI  R30,LOW(0)
0005e6 93e0 017a 	STS  _buzzer,R30
0005e8 93e0 017b 	STS  _buzzer+1,R30
                 ; 0000 023F   PORTC.0=0;
0005ea 98a8      	CBI  0x15,0
                 ; 0000 0240  }
                 ; 0000 0241 }
                 _0x149:
0005eb 91e9      	LD   R30,Y+
0005ec bfef      	OUT  SREG,R30
0005ed 91f9      	LD   R31,Y+
0005ee 91e9      	LD   R30,Y+
0005ef 91b9      	LD   R27,Y+
0005f0 91a9      	LD   R26,Y+
0005f1 9199      	LD   R25,Y+
0005f2 9189      	LD   R24,Y+
0005f3 9179      	LD   R23,Y+
0005f4 9169      	LD   R22,Y+
0005f5 90f9      	LD   R15,Y+
0005f6 9019      	LD   R1,Y+
0005f7 9009      	LD   R0,Y+
0005f8 9518      	RETI
                 ; .FEND
                 ;
                 ;// Timer2 ОЕПХНД 200 ЛЙЯ
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 0245 {
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
0005f9 920a      	ST   -Y,R0
0005fa 921a      	ST   -Y,R1
0005fb 938a      	ST   -Y,R24
0005fc 939a      	ST   -Y,R25
0005fd 93aa      	ST   -Y,R26
0005fe 93ba      	ST   -Y,R27
0005ff 93ea      	ST   -Y,R30
000600 93fa      	ST   -Y,R31
000601 b7ef      	IN   R30,SREG
000602 93ea      	ST   -Y,R30
                 ; 0000 0246 // Reinitialize Timer2 value
                 ; 0000 0247 TCNT2=0x38;
000603 e3e8      	LDI  R30,LOW(56)
000604 bde4      	OUT  0x24,R30
                 ; 0000 0248 wait_timer2++;
000605 e8a0      	LDI  R26,LOW(_wait_timer2)
000606 e0b1      	LDI  R27,HIGH(_wait_timer2)
000607 d422      	RCALL SUBOPT_0x44
                 ; 0000 0249 switch(screen)                // лЕМЧ
000608 2dec      	MOV  R30,R12
000609 e0f0      	LDI  R31,0
00060a fde7      	SBRC R30,7
00060b efff      	SER  R31
                 ; 0000 024A  {
                 ; 0000 024B        case 0:                            // бШБНД РЕЛОЕПЮРСПШ
00060c 9730      	SBIW R30,0
00060d f489      	BRNE _0x14F
                 ; 0000 024C           {
                 ; 0000 024D            show_termostat=0;
00060e d449      	RCALL SUBOPT_0x4C
                 ; 0000 024E            show_ustavku=0;
00060f d44b      	RCALL SUBOPT_0x4D
                 ; 0000 024F            show_temp=1;
000610 9468      	SET
000611 f824      	BLD  R2,4
                 ; 0000 0250            if (knopka_left==1)
000612 fc20      	SBRC R2,0
                 ; 0000 0251              {
                 ; 0000 0252               screen++;
000613 d44a      	RCALL SUBOPT_0x4E
                 ; 0000 0253               knopka_left=0;
                 ; 0000 0254              };
                 ; 0000 0255            if (knopka_right==1)
000614 fe21      	SBRS R2,1
000615 c006      	RJMP _0x151
                 ; 0000 0256              {
                 ; 0000 0257               screen--;
000616 d44b      	RCALL SUBOPT_0x4F
                 ; 0000 0258               knopka_right=0;
                 ; 0000 0259               if (screen<0)
000617 e0e0      	LDI  R30,LOW(0)
000618 16ce      	CP   R12,R30
000619 f414      	BRGE _0x152
                 ; 0000 025A                 screen=2;
00061a e0e2      	LDI  R30,LOW(2)
00061b 2ece      	MOV  R12,R30
                 ; 0000 025B              };
                 _0x152:
                 _0x151:
                 ; 0000 025C            if (knopka_middle==1)
00061c fc22      	SBRC R2,2
                 ; 0000 025D              knopka_middle=0;
00061d d448      	RCALL SUBOPT_0x50
                 ; 0000 025E            break;
00061e c243      	RJMP _0x14E
                 ; 0000 025F            };
                 ; 0000 0260 
                 ; 0000 0261        case 1:                            // пЮАНРЮ РЕПЛНЯРЮРЮ
                 _0x14F:
00061f d2c2      	RCALL SUBOPT_0x1
000620 f459      	BRNE _0x154
                 ; 0000 0262            {
                 ; 0000 0263             show_termostat=1;
000621 9468      	SET
000622 f825      	BLD  R2,5
                 ; 0000 0264             show_ustavku=0;
000623 d437      	RCALL SUBOPT_0x4D
                 ; 0000 0265             show_temp=0;
000624 d444      	RCALL SUBOPT_0x51
                 ; 0000 0266             if (knopka_left==1)
000625 fc20      	SBRC R2,0
                 ; 0000 0267               {
                 ; 0000 0268                screen++;
000626 d437      	RCALL SUBOPT_0x4E
                 ; 0000 0269                knopka_left=0;
                 ; 0000 026A               };
                 ; 0000 026B             if (knopka_right==1)
000627 fc21      	SBRC R2,1
                 ; 0000 026C               {
                 ; 0000 026D                screen--;
000628 d439      	RCALL SUBOPT_0x4F
                 ; 0000 026E                knopka_right=0;
                 ; 0000 026F               };
                 ; 0000 0270              if (knopka_middle==1)
000629 fc22      	SBRC R2,2
                 ; 0000 0271              knopka_middle=0;
00062a d43b      	RCALL SUBOPT_0x50
                 ; 0000 0272             break;
00062b c236      	RJMP _0x14E
                 ; 0000 0273            };
                 ; 0000 0274 
                 ; 0000 0275        case 2:                            // бУНД Б ЛЕМЧ СЯРЮБЙХ
                 _0x154:
00062c d2b9      	RCALL SUBOPT_0x2
00062d f4a1      	BRNE _0x158
                 ; 0000 0276            {
                 ; 0000 0277             show_termostat=0;
00062e d429      	RCALL SUBOPT_0x4C
                 ; 0000 0278             show_ustavku=1;
00062f 9468      	SET
000630 f826      	BLD  R2,6
                 ; 0000 0279             show_temp=0;
000631 d437      	RCALL SUBOPT_0x51
                 ; 0000 027A             if (knopka_right==1)
000632 fc21      	SBRC R2,1
                 ; 0000 027B               {
                 ; 0000 027C                screen--;
000633 d42e      	RCALL SUBOPT_0x4F
                 ; 0000 027D                knopka_right=0;
                 ; 0000 027E               };
                 ; 0000 027F             if (knopka_left==1)
000634 fe20      	SBRS R2,0
000635 c005      	RJMP _0x15A
                 ; 0000 0280               {
                 ; 0000 0281                screen++;
000636 d427      	RCALL SUBOPT_0x4E
                 ; 0000 0282                knopka_left=0;
                 ; 0000 0283                if(screen>2)
000637 e0e2      	LDI  R30,LOW(2)
000638 15ec      	CP   R30,R12
000639 f40c      	BRGE _0x15B
                 ; 0000 0284                  screen=0;
00063a 24cc      	CLR  R12
                 ; 0000 0285               };
                 _0x15B:
                 _0x15A:
                 ; 0000 0286             if (knopka_middle==1)
00063b fe22      	SBRS R2,2
00063c c004      	RJMP _0x15C
                 ; 0000 0287              {
                 ; 0000 0288               screen=4;
00063d e0e4      	LDI  R30,LOW(4)
00063e 2ece      	MOV  R12,R30
                 ; 0000 0289               par_ust=1;
00063f d42c      	RCALL SUBOPT_0x52
                 ; 0000 028A               knopka_middle=0;
000640 d425      	RCALL SUBOPT_0x50
                 ; 0000 028B              };
                 _0x15C:
                 ; 0000 028C             break;
000641 c220      	RJMP _0x14E
                 ; 0000 028D            };
                 ; 0000 028E 
                 ; 0000 028F        case 4:                            // пЕФХЛ ПЮАНРШ (МЮЦПЕБ\НУКЮФДЕМХЕ)
                 _0x158:
000642 d2ab      	RCALL SUBOPT_0x4
000643 f4d1      	BRNE _0x15D
                 ; 0000 0290            {
                 ; 0000 0291             show_termostat=0;
000644 d413      	RCALL SUBOPT_0x4C
                 ; 0000 0292             show_ustavku=0;
000645 d415      	RCALL SUBOPT_0x4D
                 ; 0000 0293             show_temp=0;
000646 d422      	RCALL SUBOPT_0x51
                 ; 0000 0294             exit=0;
000647 94e8      	CLT
000648 f837      	BLD  R3,7
                 ; 0000 0295             P00=1;
000649 9468      	SET
00064a f830      	BLD  R3,0
                 ; 0000 0296             P01=0;
00064b d423      	RCALL SUBOPT_0x53
                 ; 0000 0297             par_ust=1;
00064c d41f      	RCALL SUBOPT_0x52
                 ; 0000 0298             if (knopka_right==1)
00064d fc21      	SBRC R2,1
                 ; 0000 0299               {
                 ; 0000 029A                screen++;
00064e d423      	RCALL SUBOPT_0x54
                 ; 0000 029B                knopka_right=0;
                 ; 0000 029C               };
                 ; 0000 029D             if (knopka_left==1)
00064f fe20      	SBRS R2,0
000650 c007      	RJMP _0x15F
                 ; 0000 029E               {
                 ; 0000 029F                 screen--;
000651 94ca      	DEC  R12
                 ; 0000 02A0                 if(screen<4)
000652 e0e4      	LDI  R30,LOW(4)
000653 16ce      	CP   R12,R30
000654 f414      	BRGE _0x160
                 ; 0000 02A1                   screen=11;
000655 e0eb      	LDI  R30,LOW(11)
000656 2ece      	MOV  R12,R30
                 ; 0000 02A2                 knopka_left=0;
                 _0x160:
000657 d41e      	RCALL SUBOPT_0x55
                 ; 0000 02A3               };
                 _0x15F:
                 ; 0000 02A4             if (knopka_middle==1)
000658 fe22      	SBRS R2,2
000659 c003      	RJMP _0x161
                 ; 0000 02A5             {
                 ; 0000 02A6              knopka_middle=0;
00065a d40b      	RCALL SUBOPT_0x50
                 ; 0000 02A7              screen=20;
00065b e1e4      	LDI  R30,LOW(20)
00065c 2ece      	MOV  R12,R30
                 ; 0000 02A8             };
                 _0x161:
                 ; 0000 02A9             break;
00065d c204      	RJMP _0x14E
                 ; 0000 02AA            };
                 ; 0000 02AB 
                 ; 0000 02AC        case 5:                            // рЕЛОЕПЮРСПЮ ЯПЮАЮРШБЮМХЪ. мХФМХИ ОНПНЦ
                 _0x15D:
00065e d293      	RCALL SUBOPT_0x5
00065f f4a1      	BRNE _0x162
                 ; 0000 02AD            {
                 ; 0000 02AE             show_termostat=0;
000660 d3f7      	RCALL SUBOPT_0x4C
                 ; 0000 02AF             show_ustavku=0;
000661 d3f9      	RCALL SUBOPT_0x4D
                 ; 0000 02B0             show_temp=0;
000662 d406      	RCALL SUBOPT_0x51
                 ; 0000 02B1             P00=0;
000663 94e8      	CLT
000664 f830      	BLD  R3,0
                 ; 0000 02B2             P01=1;
000665 9468      	SET
000666 f831      	BLD  R3,1
                 ; 0000 02B3             P02=0;
000667 94e8      	CLT
000668 f832      	BLD  R3,2
                 ; 0000 02B4             par_ust=1;
000669 d402      	RCALL SUBOPT_0x52
                 ; 0000 02B5             if (knopka_left==1)
00066a fc20      	SBRC R2,0
                 ; 0000 02B6               {
                 ; 0000 02B7                 screen--;
00066b d40d      	RCALL SUBOPT_0x56
                 ; 0000 02B8                 knopka_left=0;
                 ; 0000 02B9               };
                 ; 0000 02BA             if (knopka_right==1)
00066c fc21      	SBRC R2,1
                 ; 0000 02BB               {
                 ; 0000 02BC                screen++;
00066d d404      	RCALL SUBOPT_0x54
                 ; 0000 02BD                knopka_right=0;
                 ; 0000 02BE               };
                 ; 0000 02BF             if (knopka_middle==1)
00066e fe22      	SBRS R2,2
00066f c003      	RJMP _0x165
                 ; 0000 02C0               {
                 ; 0000 02C1                knopka_middle=0;
000670 d3f5      	RCALL SUBOPT_0x50
                 ; 0000 02C2                screen=21;
000671 e1e5      	LDI  R30,LOW(21)
000672 2ece      	MOV  R12,R30
                 ; 0000 02C3               };
                 _0x165:
                 ; 0000 02C4             break;
000673 c1ee      	RJMP _0x14E
                 ; 0000 02C5            };
                 ; 0000 02C6 
                 ; 0000 02C7        case 6:                            // рЕЛОЕПЮРСПЮ ЯПЮАЮРШБЮМХЪ. бЕПУМХИ ОНПНЦ.
                 _0x162:
000674 d281      	RCALL SUBOPT_0x6
000675 f499      	BRNE _0x166
                 ; 0000 02C8            {
                 ; 0000 02C9             show_termostat=0;
000676 d3e1      	RCALL SUBOPT_0x4C
                 ; 0000 02CA             show_ustavku=0;
000677 d3e3      	RCALL SUBOPT_0x4D
                 ; 0000 02CB             show_temp=0;
000678 d3f0      	RCALL SUBOPT_0x51
                 ; 0000 02CC             P01=0;
000679 d3f5      	RCALL SUBOPT_0x53
                 ; 0000 02CD             P02=1;
00067a 9468      	SET
00067b f832      	BLD  R3,2
                 ; 0000 02CE             P03=0;
00067c 94e8      	CLT
00067d f833      	BLD  R3,3
                 ; 0000 02CF             par_ust=1;
00067e d3ed      	RCALL SUBOPT_0x52
                 ; 0000 02D0             if (knopka_left==1)
00067f fc20      	SBRC R2,0
                 ; 0000 02D1               {
                 ; 0000 02D2                 screen--;
000680 d3f8      	RCALL SUBOPT_0x56
                 ; 0000 02D3                 knopka_left=0;
                 ; 0000 02D4               };
                 ; 0000 02D5             if (knopka_right==1)
000681 fc21      	SBRC R2,1
                 ; 0000 02D6               {
                 ; 0000 02D7                screen++;
000682 d3ef      	RCALL SUBOPT_0x54
                 ; 0000 02D8                knopka_right=0;
                 ; 0000 02D9               };
                 ; 0000 02DA             if (knopka_middle==1)
000683 fe22      	SBRS R2,2
000684 c003      	RJMP _0x169
                 ; 0000 02DB               {
                 ; 0000 02DC                knopka_middle=0;
000685 d3e0      	RCALL SUBOPT_0x50
                 ; 0000 02DD                screen=22;
000686 e1e6      	LDI  R30,LOW(22)
000687 2ece      	MOV  R12,R30
                 ; 0000 02DE               };
                 _0x169:
                 ; 0000 02DF             break;
000688 c1d9      	RJMP _0x14E
                 ; 0000 02E0            };
                 ; 0000 02E1 
                 ; 0000 02E2        case 7:                            // бЙК\бШЙК АСГГЕП
                 _0x166:
000689 d270      	RCALL SUBOPT_0x7
00068a f4a1      	BRNE _0x16A
                 ; 0000 02E3            {
                 ; 0000 02E4             show_termostat=0;
00068b d3cc      	RCALL SUBOPT_0x4C
                 ; 0000 02E5             show_ustavku=0;
00068c d3ce      	RCALL SUBOPT_0x4D
                 ; 0000 02E6             show_temp=0;
00068d d3db      	RCALL SUBOPT_0x51
                 ; 0000 02E7             P02=0;
00068e 94e8      	CLT
00068f f832      	BLD  R3,2
                 ; 0000 02E8             P03=1;
000690 9468      	SET
000691 f833      	BLD  R3,3
                 ; 0000 02E9             P04=0;
000692 94e8      	CLT
000693 f834      	BLD  R3,4
                 ; 0000 02EA             par_ust=1;
000694 d3d7      	RCALL SUBOPT_0x52
                 ; 0000 02EB             if (knopka_left==1)
000695 fc20      	SBRC R2,0
                 ; 0000 02EC               {
                 ; 0000 02ED                 screen--;
000696 d3e2      	RCALL SUBOPT_0x56
                 ; 0000 02EE                 knopka_left=0;
                 ; 0000 02EF               };
                 ; 0000 02F0             if (knopka_right==1)
000697 fc21      	SBRC R2,1
                 ; 0000 02F1               {
                 ; 0000 02F2                screen++;
000698 d3d9      	RCALL SUBOPT_0x54
                 ; 0000 02F3                knopka_right=0;
                 ; 0000 02F4               };
                 ; 0000 02F5             if (knopka_middle==1)
000699 fe22      	SBRS R2,2
00069a c003      	RJMP _0x16D
                 ; 0000 02F6             {
                 ; 0000 02F7              knopka_middle=0;
00069b d3ca      	RCALL SUBOPT_0x50
                 ; 0000 02F8              screen=23;
00069c e1e7      	LDI  R30,LOW(23)
00069d 2ece      	MOV  R12,R30
                 ; 0000 02F9             };
                 _0x16D:
                 ; 0000 02FA             break;
00069e c1c3      	RJMP _0x14E
                 ; 0000 02FB            };
                 ; 0000 02FC 
                 ; 0000 02FD        case 8:                            // йНППЕЙЖХЪ РЕЛОЕПЮРСПШ
                 _0x16A:
00069f d25e      	RCALL SUBOPT_0x8
0006a0 f4a1      	BRNE _0x16E
                 ; 0000 02FE            {
                 ; 0000 02FF             show_termostat=0;
0006a1 d3b6      	RCALL SUBOPT_0x4C
                 ; 0000 0300             show_ustavku=0;
0006a2 d3b8      	RCALL SUBOPT_0x4D
                 ; 0000 0301             show_temp=0;
0006a3 d3c5      	RCALL SUBOPT_0x51
                 ; 0000 0302             P03=0;
0006a4 94e8      	CLT
0006a5 f833      	BLD  R3,3
                 ; 0000 0303             P04=1;
0006a6 9468      	SET
0006a7 f834      	BLD  R3,4
                 ; 0000 0304             P05=0;
0006a8 94e8      	CLT
0006a9 f835      	BLD  R3,5
                 ; 0000 0305             par_ust=1;
0006aa d3c1      	RCALL SUBOPT_0x52
                 ; 0000 0306             if (knopka_left==1)
0006ab fc20      	SBRC R2,0
                 ; 0000 0307               {
                 ; 0000 0308                 screen--;
0006ac d3cc      	RCALL SUBOPT_0x56
                 ; 0000 0309                 knopka_left=0;
                 ; 0000 030A               };
                 ; 0000 030B             if (knopka_right==1)
0006ad fc21      	SBRC R2,1
                 ; 0000 030C               {
                 ; 0000 030D                screen++;
0006ae d3c3      	RCALL SUBOPT_0x54
                 ; 0000 030E                knopka_right=0;
                 ; 0000 030F               };
                 ; 0000 0310             if (knopka_middle==1)
0006af fe22      	SBRS R2,2
0006b0 c003      	RJMP _0x171
                 ; 0000 0311               {
                 ; 0000 0312                knopka_middle=0;
0006b1 d3b4      	RCALL SUBOPT_0x50
                 ; 0000 0313                screen=24;
0006b2 e1e8      	LDI  R30,LOW(24)
0006b3 2ece      	MOV  R12,R30
                 ; 0000 0314               };
                 _0x171:
                 ; 0000 0315             break;
0006b4 c1ad      	RJMP _0x14E
                 ; 0000 0316            };
                 ; 0000 0317 
                 ; 0000 0318        case 9:                            // цХЯРЕПЕГХЯ
                 _0x16E:
0006b5 d24c      	RCALL SUBOPT_0x9
0006b6 f4a1      	BRNE _0x172
                 ; 0000 0319            {
                 ; 0000 031A             show_termostat=0;
0006b7 d3a0      	RCALL SUBOPT_0x4C
                 ; 0000 031B             show_ustavku=0;
0006b8 d3a2      	RCALL SUBOPT_0x4D
                 ; 0000 031C             show_temp=0;
0006b9 d3af      	RCALL SUBOPT_0x51
                 ; 0000 031D             P04=0;
0006ba 94e8      	CLT
0006bb f834      	BLD  R3,4
                 ; 0000 031E             P05=1;
0006bc 9468      	SET
0006bd f835      	BLD  R3,5
                 ; 0000 031F             P06=0;
0006be 94e8      	CLT
0006bf f836      	BLD  R3,6
                 ; 0000 0320             par_ust=1;
0006c0 d3ab      	RCALL SUBOPT_0x52
                 ; 0000 0321             if (knopka_left==1)
0006c1 fc20      	SBRC R2,0
                 ; 0000 0322               {
                 ; 0000 0323                 screen--;
0006c2 d3b6      	RCALL SUBOPT_0x56
                 ; 0000 0324                 knopka_left=0;
                 ; 0000 0325               };
                 ; 0000 0326             if (knopka_right==1)
0006c3 fc21      	SBRC R2,1
                 ; 0000 0327               {
                 ; 0000 0328                screen++;
0006c4 d3ad      	RCALL SUBOPT_0x54
                 ; 0000 0329                knopka_right=0;
                 ; 0000 032A               };
                 ; 0000 032B             if (knopka_middle==1)
0006c5 fe22      	SBRS R2,2
0006c6 c003      	RJMP _0x175
                 ; 0000 032C               {
                 ; 0000 032D                knopka_middle=0;
0006c7 d39e      	RCALL SUBOPT_0x50
                 ; 0000 032E                screen=25;
0006c8 e1e9      	LDI  R30,LOW(25)
0006c9 2ece      	MOV  R12,R30
                 ; 0000 032F               };
                 _0x175:
                 ; 0000 0330             break;
0006ca c197      	RJMP _0x14E
                 ; 0000 0331            };
                 ; 0000 0332 
                 ; 0000 0333        case 10:                            // сЯРЮБЙЮ РЕЛОЕПЮРСПШ
                 _0x172:
0006cb 30ea      	CPI  R30,LOW(0xA)
0006cc e0a0      	LDI  R26,HIGH(0xA)
0006cd 07fa      	CPC  R31,R26
0006ce f4a1      	BRNE _0x176
                 ; 0000 0334            {
                 ; 0000 0335             show_termostat=0;
0006cf d388      	RCALL SUBOPT_0x4C
                 ; 0000 0336             show_ustavku=0;
0006d0 d38a      	RCALL SUBOPT_0x4D
                 ; 0000 0337             show_temp=0;
0006d1 d397      	RCALL SUBOPT_0x51
                 ; 0000 0338             P05=0;
0006d2 94e8      	CLT
0006d3 f835      	BLD  R3,5
                 ; 0000 0339             P06=1;
0006d4 9468      	SET
0006d5 f836      	BLD  R3,6
                 ; 0000 033A             exit=0;
0006d6 94e8      	CLT
0006d7 f837      	BLD  R3,7
                 ; 0000 033B             par_ust=1;
0006d8 d393      	RCALL SUBOPT_0x52
                 ; 0000 033C             if (knopka_left==1)
0006d9 fc20      	SBRC R2,0
                 ; 0000 033D               {
                 ; 0000 033E                 screen--;
0006da d39e      	RCALL SUBOPT_0x56
                 ; 0000 033F                 knopka_left=0;
                 ; 0000 0340               };
                 ; 0000 0341             if (knopka_right==1)
0006db fc21      	SBRC R2,1
                 ; 0000 0342               {
                 ; 0000 0343                screen++;
0006dc d395      	RCALL SUBOPT_0x54
                 ; 0000 0344                knopka_right=0;
                 ; 0000 0345               };
                 ; 0000 0346             if (knopka_middle==1)
0006dd fe22      	SBRS R2,2
0006de c003      	RJMP _0x179
                 ; 0000 0347               {
                 ; 0000 0348                knopka_middle=0;
0006df d386      	RCALL SUBOPT_0x50
                 ; 0000 0349                screen=26;
0006e0 e1ea      	LDI  R30,LOW(26)
0006e1 2ece      	MOV  R12,R30
                 ; 0000 034A               };
                 _0x179:
                 ; 0000 034B             break;
0006e2 c17f      	RJMP _0x14E
                 ; 0000 034C            };
                 ; 0000 034D 
                 ; 0000 034E        case 11:                            // бНГЛНФМНЯРЭ БШИРХ
                 _0x176:
0006e3 30eb      	CPI  R30,LOW(0xB)
0006e4 e0a0      	LDI  R26,HIGH(0xB)
0006e5 07fa      	CPC  R31,R26
0006e6 f509      	BRNE _0x17A
                 ; 0000 034F            {
                 ; 0000 0350             show_termostat=0;
0006e7 d370      	RCALL SUBOPT_0x4C
                 ; 0000 0351             show_ustavku=0;
0006e8 d372      	RCALL SUBOPT_0x4D
                 ; 0000 0352             show_temp=0;
0006e9 d37f      	RCALL SUBOPT_0x51
                 ; 0000 0353             par_ust=1;
0006ea d381      	RCALL SUBOPT_0x52
                 ; 0000 0354             P06=0;
0006eb 94e8      	CLT
0006ec f836      	BLD  R3,6
                 ; 0000 0355             exit=1;
0006ed 9468      	SET
0006ee f837      	BLD  R3,7
                 ; 0000 0356             P00=0;
0006ef 94e8      	CLT
0006f0 f830      	BLD  R3,0
                 ; 0000 0357             if (knopka_left==1)
0006f1 fc20      	SBRC R2,0
                 ; 0000 0358               {
                 ; 0000 0359                 screen--;
0006f2 d386      	RCALL SUBOPT_0x56
                 ; 0000 035A                 knopka_left=0;
                 ; 0000 035B               };
                 ; 0000 035C             if (knopka_right==1)
0006f3 fe21      	SBRS R2,1
0006f4 c007      	RJMP _0x17C
                 ; 0000 035D               {
                 ; 0000 035E                screen++;
0006f5 94c3      	INC  R12
                 ; 0000 035F                if(screen>11)
0006f6 e0eb      	LDI  R30,LOW(11)
0006f7 15ec      	CP   R30,R12
0006f8 f414      	BRGE _0x17D
                 ; 0000 0360                  screen=4;
0006f9 e0e4      	LDI  R30,LOW(4)
0006fa 2ece      	MOV  R12,R30
                 ; 0000 0361                knopka_right=0;
                 _0x17D:
0006fb d37f      	RCALL SUBOPT_0x57
                 ; 0000 0362               };
                 _0x17C:
                 ; 0000 0363             if (knopka_middle==1)
0006fc fe22      	SBRS R2,2
0006fd c009      	RJMP _0x17E
                 ; 0000 0364              {
                 ; 0000 0365               show_termostat=0;
0006fe d359      	RCALL SUBOPT_0x4C
                 ; 0000 0366               show_ustavku=0;
0006ff d35b      	RCALL SUBOPT_0x4D
                 ; 0000 0367               show_temp=1;
000700 9468      	SET
000701 f824      	BLD  R2,4
                 ; 0000 0368               par_ust=0;
000702 d37b      	RCALL SUBOPT_0x58
                 ; 0000 0369               screen=0;
000703 24cc      	CLR  R12
                 ; 0000 036A               exit=0;
000704 94e8      	CLT
000705 f837      	BLD  R3,7
                 ; 0000 036B               knopka_middle=0;
000706 d35f      	RCALL SUBOPT_0x50
                 ; 0000 036C              };
                 _0x17E:
                 ; 0000 036D             break;
000707 c15a      	RJMP _0x14E
                 ; 0000 036E            };
                 ; 0000 036F 
                 ; 0000 0370        case 20:                            // пЕФХЛ ПЮАНРШ
                 _0x17A:
000708 31e4      	CPI  R30,LOW(0x14)
000709 e0a0      	LDI  R26,HIGH(0x14)
00070a 07fa      	CPC  R31,R26
00070b f539      	BRNE _0x17F
                 ; 0000 0371            {
                 ; 0000 0372             par_ust=0;
00070c d371      	RCALL SUBOPT_0x58
                 ; 0000 0373             show_par=1;
00070d d373      	RCALL SUBOPT_0x59
                 ; 0000 0374             if(P0==1)                      // HOT
00070e d375      	RCALL SUBOPT_0x5A
00070f d595      	RCALL __EEPROMRDB
000710 30e1      	CPI  R30,LOW(0x1)
000711 f439      	BRNE _0x180
                 ; 0000 0375               {
                 ; 0000 0376                t1=kod[12];
                +
000712 9070 016c+LDS R7 , _kod_G000 + ( 12 )
                 	__GETBRMN 7,_kod_G000,12
                 ; 0000 0377                t2=kod[15];
                +
000714 9060 016f+LDS R6 , _kod_G000 + ( 15 )
                 	__GETBRMN 6,_kod_G000,15
                 ; 0000 0378                t3=kod[17];
                +
000716 9090 0171+LDS R9 , _kod_G000 + ( 17 )
                 	__GETBRMN 9,_kod_G000,17
                 ; 0000 0379               }
                 ; 0000 037A             else                           // COLD
000718 c006      	RJMP _0x181
                 _0x180:
                 ; 0000 037B               {
                 ; 0000 037C                t1=kod[16];
                +
000719 9070 0170+LDS R7 , _kod_G000 + ( 16 )
                 	__GETBRMN 7,_kod_G000,16
                 ; 0000 037D                t2=kod[15];
                +
00071b 9060 016f+LDS R6 , _kod_G000 + ( 15 )
                 	__GETBRMN 6,_kod_G000,15
                 ; 0000 037E                t3=kod[14];
                +
00071d 9090 016e+LDS R9 , _kod_G000 + ( 14 )
                 	__GETBRMN 9,_kod_G000,14
                 ; 0000 037F               };
                 _0x181:
                 ; 0000 0380             if(knopka_left==1)
00071f fe20      	SBRS R2,0
000720 c004      	RJMP _0x182
                 ; 0000 0381               {
                 ; 0000 0382                knopka_left=0;
000721 d354      	RCALL SUBOPT_0x55
                 ; 0000 0383                P0=0;
000722 d361      	RCALL SUBOPT_0x5A
000723 e0e0      	LDI  R30,LOW(0)
000724 d594      	RCALL __EEPROMWRB
                 ; 0000 0384               };
                 _0x182:
                 ; 0000 0385             if(knopka_right==1)
000725 fe21      	SBRS R2,1
000726 c004      	RJMP _0x183
                 ; 0000 0386               {
                 ; 0000 0387                knopka_right=0;
000727 d353      	RCALL SUBOPT_0x57
                 ; 0000 0388                P0=1;
000728 d35b      	RCALL SUBOPT_0x5A
000729 e0e1      	LDI  R30,LOW(1)
00072a d58e      	RCALL __EEPROMWRB
                 ; 0000 0389               };
                 _0x183:
                 ; 0000 038A             if(knopka_middle==1)
00072b fe22      	SBRS R2,2
00072c c005      	RJMP _0x184
                 ; 0000 038B               {
                 ; 0000 038C                knopka_middle=0;
00072d d338      	RCALL SUBOPT_0x50
                 ; 0000 038D                screen=4;
00072e e0e4      	LDI  R30,LOW(4)
00072f d357      	RCALL SUBOPT_0x5B
                 ; 0000 038E                P00=0;
000730 f830      	BLD  R3,0
                 ; 0000 038F                show_par=0;
000731 d358      	RCALL SUBOPT_0x5C
                 ; 0000 0390               };
                 _0x184:
                 ; 0000 0391             break;
000732 c12f      	RJMP _0x14E
                 ; 0000 0392            };
                 ; 0000 0393 
                 ; 0000 0394        case 21:                            // мХФМХИ ОНПНЦ РЕЛОЕПЮРСПШ ЯПЮАЮРШБЮМХЪ
                 _0x17F:
000733 31e5      	CPI  R30,LOW(0x15)
000734 e0a0      	LDI  R26,HIGH(0x15)
000735 07fa      	CPC  R31,R26
000736 f501      	BRNE _0x185
                 ; 0000 0395            {
                 ; 0000 0396             par_ust=0;
000737 d346      	RCALL SUBOPT_0x58
                 ; 0000 0397             show_par=1;
000738 d348      	RCALL SUBOPT_0x59
                 ; 0000 0398              if(flag_enter==0)
000739 fc41      	SBRC R4,1
00073a c002      	RJMP _0x186
                 ; 0000 0399              {
                 ; 0000 039A               par=P1;
00073b d351      	RCALL SUBOPT_0x5D
00073c d353      	RCALL SUBOPT_0x5E
                 ; 0000 039B               flag_enter=1;
                 ; 0000 039C              }
                 ; 0000 039D             if(knopka_left==1)
                 _0x186:
00073d fe20      	SBRS R2,0
00073e c005      	RJMP _0x187
                 ; 0000 039E               {
                 ; 0000 039F                knopka_left=0;
00073f d336      	RCALL SUBOPT_0x55
                 ; 0000 03A0                par-=5;
000740 d357      	RCALL SUBOPT_0x5F
000741 d35b      	RCALL SUBOPT_0x60
                 ; 0000 03A1                if (par < 0)
000742 f40a      	BRPL _0x188
                 ; 0000 03A2                   par = 150;
000743 d362      	RCALL SUBOPT_0x61
                 ; 0000 03A3               };
                 _0x188:
                 _0x187:
                 ; 0000 03A4             if(knopka_right==1)
000744 fe21      	SBRS R2,1
000745 c004      	RJMP _0x189
                 ; 0000 03A5               {
                 ; 0000 03A6                knopka_right=0;
000746 d334      	RCALL SUBOPT_0x57
                 ; 0000 03A7                par+=5;
000747 d365      	RCALL SUBOPT_0x62
                 ; 0000 03A8                if (par>150)
000748 f00c      	BRLT _0x18A
                 ; 0000 03A9                   par = 0;
000749 d36e      	RCALL SUBOPT_0x63
                 ; 0000 03AA               };
                 _0x18A:
                 _0x189:
                 ; 0000 03AB             if(knopka_middle==1)
00074a fe22      	SBRS R2,2
00074b c00a      	RJMP _0x18B
                 ; 0000 03AC               {
                 ; 0000 03AD                knopka_middle=0;
00074c d319      	RCALL SUBOPT_0x50
                 ; 0000 03AE                screen=5;
00074d e0e5      	LDI  R30,LOW(5)
00074e 2ece      	MOV  R12,R30
                 ; 0000 03AF                P01=0;
00074f d31f      	RCALL SUBOPT_0x53
                 ; 0000 03B0                show_par=0;
000750 d339      	RCALL SUBOPT_0x5C
                 ; 0000 03B1                flag_enter=0;
000751 94e8      	CLT
000752 f841      	BLD  R4,1
                 ; 0000 03B2                P1=par;
000753 d344      	RCALL SUBOPT_0x5F
000754 d338      	RCALL SUBOPT_0x5D
000755 d55b      	RCALL __EEPROMWRW
                 ; 0000 03B3               };
                 _0x18B:
                 ; 0000 03B4             break;
000756 c10b      	RJMP _0x14E
                 ; 0000 03B5            };
                 ; 0000 03B6 
                 ; 0000 03B7        case 22:                            // бЕПУМХИ ОНПНЦ РЕЛОЕПЮРСПШ ЯПЮАЮРШБЮМХЪ
                 _0x185:
000757 31e6      	CPI  R30,LOW(0x16)
000758 e0a0      	LDI  R26,HIGH(0x16)
000759 07fa      	CPC  R31,R26
00075a f4f9      	BRNE _0x18C
                 ; 0000 03B8            {
                 ; 0000 03B9             par_ust=0;
00075b d322      	RCALL SUBOPT_0x58
                 ; 0000 03BA             show_par=1;
00075c d324      	RCALL SUBOPT_0x59
                 ; 0000 03BB             if(flag_enter==0)
00075d fc41      	SBRC R4,1
00075e c002      	RJMP _0x18D
                 ; 0000 03BC              {
                 ; 0000 03BD               par=P2;
00075f d35e      	RCALL SUBOPT_0x64
000760 d32f      	RCALL SUBOPT_0x5E
                 ; 0000 03BE               flag_enter=1;
                 ; 0000 03BF              }
                 ; 0000 03C0             if(knopka_left==1)
                 _0x18D:
000761 fe20      	SBRS R2,0
000762 c005      	RJMP _0x18E
                 ; 0000 03C1               {
                 ; 0000 03C2                knopka_left=0;
000763 d312      	RCALL SUBOPT_0x55
                 ; 0000 03C3                par-=5;
000764 d333      	RCALL SUBOPT_0x5F
000765 d337      	RCALL SUBOPT_0x60
                 ; 0000 03C4                if (par < 0)
000766 f40a      	BRPL _0x18F
                 ; 0000 03C5                   par = 150;
000767 d33e      	RCALL SUBOPT_0x61
                 ; 0000 03C6               };
                 _0x18F:
                 _0x18E:
                 ; 0000 03C7             if(knopka_right==1)
000768 fe21      	SBRS R2,1
000769 c004      	RJMP _0x190
                 ; 0000 03C8               {
                 ; 0000 03C9                knopka_right=0;
00076a d310      	RCALL SUBOPT_0x57
                 ; 0000 03CA                par+=5;
00076b d341      	RCALL SUBOPT_0x62
                 ; 0000 03CB                if (par>150)
00076c f00c      	BRLT _0x191
                 ; 0000 03CC                   par = 0;
00076d d34a      	RCALL SUBOPT_0x63
                 ; 0000 03CD               };
                 _0x191:
                 _0x190:
                 ; 0000 03CE             if(knopka_middle==1)
00076e fe22      	SBRS R2,2
00076f c009      	RJMP _0x192
                 ; 0000 03CF               {
                 ; 0000 03D0                knopka_middle=0;
000770 d2f5      	RCALL SUBOPT_0x50
                 ; 0000 03D1                screen=6;
000771 e0e6      	LDI  R30,LOW(6)
000772 d314      	RCALL SUBOPT_0x5B
                 ; 0000 03D2                P02=0;
000773 f832      	BLD  R3,2
                 ; 0000 03D3                show_par=0;
000774 d315      	RCALL SUBOPT_0x5C
                 ; 0000 03D4                flag_enter=0;
000775 d34b      	RCALL SUBOPT_0x65
                 ; 0000 03D5                P2=par;
000776 d321      	RCALL SUBOPT_0x5F
000777 d346      	RCALL SUBOPT_0x64
000778 d538      	RCALL __EEPROMWRW
                 ; 0000 03D6               };
                 _0x192:
                 ; 0000 03D7             break;
000779 c0e8      	RJMP _0x14E
                 ; 0000 03D8            };
                 ; 0000 03D9 
                 ; 0000 03DA        case 23:                            // бЙК\бШЙК АСГГЕП
                 _0x18C:
00077a 31e7      	CPI  R30,LOW(0x17)
00077b e0a0      	LDI  R26,HIGH(0x17)
00077c 07fa      	CPC  R31,R26
00077d f549      	BRNE _0x193
                 ; 0000 03DB            {
                 ; 0000 03DC             par_ust=0;
00077e d2ff      	RCALL SUBOPT_0x58
                 ; 0000 03DD             show_par=1;
00077f d301      	RCALL SUBOPT_0x59
                 ; 0000 03DE             if(P3==1)
000780 d2cd      	RCALL SUBOPT_0x4A
000781 f429      	BRNE _0x194
                 ; 0000 03DF               {
                 ; 0000 03E0                t1=0xFF;
000782 efef      	LDI  R30,LOW(255)
000783 2e7e      	MOV  R7,R30
                 ; 0000 03E1                t2=kod[18];
                +
000784 9060 0172+LDS R6 , _kod_G000 + ( 18 )
                 	__GETBRMN 6,_kod_G000,18
                 ; 0000 03E2                t3=kod[0];
000786 d182      	RCALL SUBOPT_0xB
                 ; 0000 03E3               };
                 _0x194:
                 ; 0000 03E4 
                 ; 0000 03E5             if(P3==0)
000787 e0a6      	LDI  R26,LOW(_P3)
000788 e0b0      	LDI  R27,HIGH(_P3)
000789 d51b      	RCALL __EEPROMRDB
00078a 30e0      	CPI  R30,0
00078b f429      	BRNE _0x195
                 ; 0000 03E6               {
                 ; 0000 03E7                t1=kod[19];
                +
00078c 9070 0173+LDS R7 , _kod_G000 + ( 19 )
                 	__GETBRMN 7,_kod_G000,19
                 ; 0000 03E8                t2=kod[19];
                +
00078e 9060 0173+LDS R6 , _kod_G000 + ( 19 )
                 	__GETBRMN 6,_kod_G000,19
                 ; 0000 03E9                t3=kod[0];
000790 d178      	RCALL SUBOPT_0xB
                 ; 0000 03EA               };
                 _0x195:
                 ; 0000 03EB             if(knopka_left==1)
000791 fe20      	SBRS R2,0
000792 c005      	RJMP _0x196
                 ; 0000 03EC               {
                 ; 0000 03ED                knopka_left=0;
000793 d2e2      	RCALL SUBOPT_0x55
                 ; 0000 03EE                P3=1;
000794 e0a6      	LDI  R26,LOW(_P3)
000795 e0b0      	LDI  R27,HIGH(_P3)
000796 e0e1      	LDI  R30,LOW(1)
000797 d521      	RCALL __EEPROMWRB
                 ; 0000 03EF               };
                 _0x196:
                 ; 0000 03F0             if(knopka_right==1)
000798 fe21      	SBRS R2,1
000799 c005      	RJMP _0x197
                 ; 0000 03F1               {
                 ; 0000 03F2                knopka_right=0;
00079a d2e0      	RCALL SUBOPT_0x57
                 ; 0000 03F3                P3=0;
00079b e0a6      	LDI  R26,LOW(_P3)
00079c e0b0      	LDI  R27,HIGH(_P3)
00079d e0e0      	LDI  R30,LOW(0)
00079e d51a      	RCALL __EEPROMWRB
                 ; 0000 03F4               };
                 _0x197:
                 ; 0000 03F5             if(knopka_middle==1)
00079f fe22      	SBRS R2,2
0007a0 c005      	RJMP _0x198
                 ; 0000 03F6               {
                 ; 0000 03F7                knopka_middle=0;
0007a1 d2c4      	RCALL SUBOPT_0x50
                 ; 0000 03F8                screen=7;
0007a2 e0e7      	LDI  R30,LOW(7)
0007a3 d2e3      	RCALL SUBOPT_0x5B
                 ; 0000 03F9                P03=0;
0007a4 f833      	BLD  R3,3
                 ; 0000 03FA                show_par=0;
0007a5 d2e4      	RCALL SUBOPT_0x5C
                 ; 0000 03FB               };
                 _0x198:
                 ; 0000 03FC             break;
0007a6 c0bb      	RJMP _0x14E
                 ; 0000 03FD            };
                 ; 0000 03FE 
                 ; 0000 03FF        case 24:                            // йНППЕЙЖХЪ РЕЛОЕПЮРСПШ
                 _0x193:
0007a7 31e8      	CPI  R30,LOW(0x18)
0007a8 e0a0      	LDI  R26,HIGH(0x18)
0007a9 07fa      	CPC  R31,R26
0007aa f009      	BREQ PC+2
0007ab c051      	RJMP _0x199
                 ; 0000 0400            {
                 ; 0000 0401             par_ust=0;
0007ac d2d1      	RCALL SUBOPT_0x58
                 ; 0000 0402             show_par=1;
0007ad d2d3      	RCALL SUBOPT_0x59
                 ; 0000 0403             if(flag_enter==0)
0007ae fc41      	SBRC R4,1
0007af c009      	RJMP _0x19A
                 ; 0000 0404              {
                 ; 0000 0405               par=P4;
0007b0 e0a0      	LDI  R26,LOW(_P4)
0007b1 e0b0      	LDI  R27,HIGH(_P4)
0007b2 d4f2      	RCALL __EEPROMRDB
0007b3 e0f0      	LDI  R31,0
0007b4 fde7      	SBRC R30,7
0007b5 efff      	SER  R31
0007b6 d30d      	RCALL SUBOPT_0x66
                 ; 0000 0406               flag_enter=1;
0007b7 d311      	RCALL SUBOPT_0x67
                 ; 0000 0407               minus=par;
0007b8 d313      	RCALL SUBOPT_0x68
                 ; 0000 0408              }
                 ; 0000 0409             if(knopka_left==1)
                 _0x19A:
0007b9 fe20      	SBRS R2,0
0007ba c015      	RJMP _0x19B
                 ; 0000 040A              {
                 ; 0000 040B               knopka_left=0;
0007bb d2ba      	RCALL SUBOPT_0x55
                 ; 0000 040C               par--;
0007bc e7a4      	LDI  R26,LOW(_par)
0007bd e0b1      	LDI  R27,HIGH(_par)
0007be 91ed      	LD   R30,X+
0007bf 91fd      	LD   R31,X+
0007c0 9731      	SBIW R30,1
0007c1 93fe      	ST   -X,R31
0007c2 93ee      	ST   -X,R30
                 ; 0000 040D               minus=par;
0007c3 d308      	RCALL SUBOPT_0x68
                 ; 0000 040E               if(par < 0)
0007c4 d30d      	RCALL SUBOPT_0x69
0007c5 f452      	BRPL _0x19C
                 ; 0000 040F                 {
                 ; 0000 0410                 flag_minus=1;
0007c6 d30f      	RCALL SUBOPT_0x6A
                 ; 0000 0411                 minus=(-par);
                 ; 0000 0412                  if (par<-90)
0007c7 d281      	RCALL SUBOPT_0x49
0007c8 3aa6      	CPI  R26,LOW(0xFFA6)
0007c9 efef      	LDI  R30,HIGH(0xFFA6)
0007ca 07be      	CPC  R27,R30
0007cb f424      	BRGE _0x19D
                 ; 0000 0413                    {
                 ; 0000 0414                    par=90;
0007cc e5ea      	LDI  R30,LOW(90)
0007cd e0f0      	LDI  R31,HIGH(90)
0007ce d2f5      	RCALL SUBOPT_0x66
                 ; 0000 0415                    minus=par;
0007cf d2fc      	RCALL SUBOPT_0x68
                 ; 0000 0416                    };
                 _0x19D:
                 ; 0000 0417 
                 ; 0000 0418                 }
                 ; 0000 0419              };
                 _0x19C:
                 _0x19B:
                 ; 0000 041A             if(knopka_right==1)
0007d0 fe21      	SBRS R2,1
0007d1 c018      	RJMP _0x19E
                 ; 0000 041B              {
                 ; 0000 041C               knopka_right=0;
0007d2 d2a8      	RCALL SUBOPT_0x57
                 ; 0000 041D               par++;
0007d3 e7a4      	LDI  R26,LOW(_par)
0007d4 e0b1      	LDI  R27,HIGH(_par)
0007d5 d254      	RCALL SUBOPT_0x44
                 ; 0000 041E               minus=par;
0007d6 d2f5      	RCALL SUBOPT_0x68
                 ; 0000 041F               if(par<0)
0007d7 d2fa      	RCALL SUBOPT_0x69
0007d8 f40a      	BRPL _0x19F
                 ; 0000 0420                 {
                 ; 0000 0421                  flag_minus=1;
0007d9 d2fc      	RCALL SUBOPT_0x6A
                 ; 0000 0422                  minus=-par;
                 ; 0000 0423                 };
                 _0x19F:
                 ; 0000 0424               if(par>90)
0007da d26e      	RCALL SUBOPT_0x49
0007db 35ab      	CPI  R26,LOW(0x5B)
0007dc e0e0      	LDI  R30,HIGH(0x5B)
0007dd 07be      	CPC  R27,R30
0007de f05c      	BRLT _0x1A0
                 ; 0000 0425                 {
                 ; 0000 0426                  par=-90;
0007df eae6      	LDI  R30,LOW(65446)
0007e0 efff      	LDI  R31,HIGH(65446)
0007e1 d2e2      	RCALL SUBOPT_0x66
                 ; 0000 0427                  minus=-par;
0007e2 d2b5      	RCALL SUBOPT_0x5F
0007e3 d453      	RCALL __ANEGW1
0007e4 93e0 0178 	STS  _minus,R30
0007e6 93f0 0179 	STS  _minus+1,R31
                 ; 0000 0428                  flag_minus=1;
0007e8 9468      	SET
0007e9 f843      	BLD  R4,3
                 ; 0000 0429                 };
                 _0x1A0:
                 ; 0000 042A              };
                 _0x19E:
                 ; 0000 042B             if(par>0)
0007ea d25e      	RCALL SUBOPT_0x49
0007eb d4de      	RCALL __CPW02
0007ec f414      	BRGE _0x1A1
                 ; 0000 042C               flag_minus=0;
0007ed 94e8      	CLT
0007ee f843      	BLD  R4,3
                 ; 0000 042D             if(knopka_middle==1)
                 _0x1A1:
0007ef fe22      	SBRS R2,2
0007f0 c00b      	RJMP _0x1A2
                 ; 0000 042E              {
                 ; 0000 042F               knopka_middle=0;
0007f1 d274      	RCALL SUBOPT_0x50
                 ; 0000 0430               screen=8;
0007f2 e0e8      	LDI  R30,LOW(8)
0007f3 d293      	RCALL SUBOPT_0x5B
                 ; 0000 0431               P04=0;
0007f4 f834      	BLD  R3,4
                 ; 0000 0432               show_par=0;
0007f5 d294      	RCALL SUBOPT_0x5C
                 ; 0000 0433               flag_enter=0;
0007f6 d2ca      	RCALL SUBOPT_0x65
                 ; 0000 0434               P4=par;
0007f7 91e0 0174 	LDS  R30,_par
0007f9 e0a0      	LDI  R26,LOW(_P4)
0007fa e0b0      	LDI  R27,HIGH(_P4)
0007fb d4bd      	RCALL __EEPROMWRB
                 ; 0000 0435              };
                 _0x1A2:
                 ; 0000 0436             break;
0007fc c065      	RJMP _0x14E
                 ; 0000 0437            };
                 ; 0000 0438 
                 ; 0000 0439        case 25:                            // цХЯРЕПЕГХЯ
                 _0x199:
0007fd 31e9      	CPI  R30,LOW(0x19)
0007fe e0a0      	LDI  R26,HIGH(0x19)
0007ff 07fa      	CPC  R31,R26
000800 f561      	BRNE _0x1A3
                 ; 0000 043A            {
                 ; 0000 043B             par_ust=0;
000801 d27c      	RCALL SUBOPT_0x58
                 ; 0000 043C             show_par=1;
000802 d27e      	RCALL SUBOPT_0x59
                 ; 0000 043D             if(flag_enter==0)
000803 fc41      	SBRC R4,1
000804 c004      	RJMP _0x1A4
                 ; 0000 043E               {
                 ; 0000 043F                par=P5;
000805 d2d9      	RCALL SUBOPT_0x6B
000806 d2db      	RCALL SUBOPT_0x6C
000807 d2bc      	RCALL SUBOPT_0x66
                 ; 0000 0440                flag_enter=1;
000808 d2c0      	RCALL SUBOPT_0x67
                 ; 0000 0441               }
                 ; 0000 0442             if(knopka_left==1)
                 _0x1A4:
000809 fe20      	SBRS R2,0
00080a c009      	RJMP _0x1A5
                 ; 0000 0443               {
                 ; 0000 0444                knopka_left=0;
00080b d26a      	RCALL SUBOPT_0x55
                 ; 0000 0445                par-=2;
00080c d28b      	RCALL SUBOPT_0x5F
00080d 9732      	SBIW R30,2
00080e d2b5      	RCALL SUBOPT_0x66
                 ; 0000 0446                if(par<0)
00080f d2c2      	RCALL SUBOPT_0x69
000810 f41a      	BRPL _0x1A6
                 ; 0000 0447                  par=10;
000811 e0ea      	LDI  R30,LOW(10)
000812 e0f0      	LDI  R31,HIGH(10)
000813 d2b0      	RCALL SUBOPT_0x66
                 ; 0000 0448               };
                 _0x1A6:
                 _0x1A5:
                 ; 0000 0449             if(knopka_right==1)
000814 fe21      	SBRS R2,1
000815 c008      	RJMP _0x1A7
                 ; 0000 044A               {
                 ; 0000 044B                knopka_right=0;
000816 d264      	RCALL SUBOPT_0x57
                 ; 0000 044C                par+=2;
000817 d280      	RCALL SUBOPT_0x5F
000818 9632      	ADIW R30,2
000819 d2aa      	RCALL SUBOPT_0x66
                 ; 0000 044D                if(par>10)
00081a d22e      	RCALL SUBOPT_0x49
00081b 971b      	SBIW R26,11
00081c f00c      	BRLT _0x1A8
                 ; 0000 044E                  par=0;
00081d d29a      	RCALL SUBOPT_0x63
                 ; 0000 044F               };
                 _0x1A8:
                 _0x1A7:
                 ; 0000 0450             if(knopka_middle==1)
00081e fe22      	SBRS R2,2
00081f c00c      	RJMP _0x1A9
                 ; 0000 0451               {
                 ; 0000 0452                knopka_middle=0;
000820 d245      	RCALL SUBOPT_0x50
                 ; 0000 0453                screen=9;
000821 e0e9      	LDI  R30,LOW(9)
000822 d264      	RCALL SUBOPT_0x5B
                 ; 0000 0454                P05=0;
000823 f835      	BLD  R3,5
                 ; 0000 0455                show_par=0;
000824 d265      	RCALL SUBOPT_0x5C
                 ; 0000 0456                flag_enter=0;
000825 d29b      	RCALL SUBOPT_0x65
                 ; 0000 0457                P5=par/2;
000826 d222      	RCALL SUBOPT_0x49
000827 e0e2      	LDI  R30,LOW(2)
000828 e0f0      	LDI  R31,HIGH(2)
000829 d44c      	RCALL __DIVW21
00082a d2b4      	RCALL SUBOPT_0x6B
00082b d48d      	RCALL __EEPROMWRB
                 ; 0000 0458               };
                 _0x1A9:
                 ; 0000 0459             break;
00082c c035      	RJMP _0x14E
                 ; 0000 045A            };
                 ; 0000 045B 
                 ; 0000 045C        case 26:                            // сЯРЮБЙЮ РЕЛОЕПЮРСПШ
                 _0x1A3:
00082d 31ea      	CPI  R30,LOW(0x1A)
00082e e0a0      	LDI  R26,HIGH(0x1A)
00082f 07fa      	CPC  R31,R26
000830 f589      	BRNE _0x14E
                 ; 0000 045D            {
                 ; 0000 045E             par_ust=0;
000831 d24c      	RCALL SUBOPT_0x58
                 ; 0000 045F             show_par=1;
000832 d24e      	RCALL SUBOPT_0x59
                 ; 0000 0460             if(flag_enter==0)
000833 fc41      	SBRC R4,1
000834 c003      	RJMP _0x1AB
                 ; 0000 0461               {
                 ; 0000 0462                par=P6;
000835 d20b      	RCALL SUBOPT_0x47
000836 d28d      	RCALL SUBOPT_0x66
                 ; 0000 0463                flag_enter=1;
000837 d291      	RCALL SUBOPT_0x67
                 ; 0000 0464               }
                 ; 0000 0465             if(knopka_left==1)
                 _0x1AB:
000838 fe20      	SBRS R2,0
000839 c00d      	RJMP _0x1AC
                 ; 0000 0466               {
                 ; 0000 0467                knopka_left=0;
00083a d23b      	RCALL SUBOPT_0x55
                 ; 0000 0468                par-=5;
00083b d25c      	RCALL SUBOPT_0x5F
00083c 9735      	SBIW R30,5
00083d d286      	RCALL SUBOPT_0x66
                 ; 0000 0469                if(par<P1)
00083e d24e      	RCALL SUBOPT_0x5D
00083f d461      	RCALL __EEPROMRDW
000840 d208      	RCALL SUBOPT_0x49
000841 17ae      	CP   R26,R30
000842 07bf      	CPC  R27,R31
000843 f41c      	BRGE _0x1AD
                 ; 0000 046A                  par=P2;
000844 d279      	RCALL SUBOPT_0x64
000845 d45b      	RCALL __EEPROMRDW
000846 d27d      	RCALL SUBOPT_0x66
                 ; 0000 046B               };
                 _0x1AD:
                 _0x1AC:
                 ; 0000 046C             if(knopka_right==1)
000847 fe21      	SBRS R2,1
000848 c00d      	RJMP _0x1AE
                 ; 0000 046D               {
                 ; 0000 046E                knopka_right=0;
000849 d231      	RCALL SUBOPT_0x57
                 ; 0000 046F                par+=5;
00084a d24d      	RCALL SUBOPT_0x5F
00084b 9635      	ADIW R30,5
00084c d277      	RCALL SUBOPT_0x66
                 ; 0000 0470                if(par>P2)
00084d d270      	RCALL SUBOPT_0x64
00084e d452      	RCALL __EEPROMRDW
00084f d1f9      	RCALL SUBOPT_0x49
000850 17ea      	CP   R30,R26
000851 07fb      	CPC  R31,R27
000852 f41c      	BRGE _0x1AF
                 ; 0000 0471                  par=P1;
000853 d239      	RCALL SUBOPT_0x5D
000854 d44c      	RCALL __EEPROMRDW
000855 d26e      	RCALL SUBOPT_0x66
                 ; 0000 0472               };
                 _0x1AF:
                 _0x1AE:
                 ; 0000 0473             if(knopka_middle==1)
000856 fe22      	SBRS R2,2
000857 c00a      	RJMP _0x1B0
                 ; 0000 0474               {
                 ; 0000 0475                knopka_middle=0;
000858 d20d      	RCALL SUBOPT_0x50
                 ; 0000 0476                screen=10;
000859 e0ea      	LDI  R30,LOW(10)
00085a 2ece      	MOV  R12,R30
                 ; 0000 0477                P01=0;
00085b d213      	RCALL SUBOPT_0x53
                 ; 0000 0478                show_par=0;
00085c d22d      	RCALL SUBOPT_0x5C
                 ; 0000 0479                flag_enter=0;
00085d d263      	RCALL SUBOPT_0x65
                 ; 0000 047A                P6=par;
00085e 91e0 0174 	LDS  R30,_par
000860 d284      	RCALL SUBOPT_0x6D
000861 d457      	RCALL __EEPROMWRB
                 ; 0000 047B               };
                 _0x1B0:
                 ; 0000 047C             break;
                 ; 0000 047D            };
                 ; 0000 047E       }
                 _0x14E:
                 ; 0000 047F 
                 ; 0000 0480 if(show_termostat==0)
000862 fc25      	SBRC R2,5
000863 c003      	RJMP _0x1B1
                 ; 0000 0481  {
                 ; 0000 0482   PORTC.1=0;
000864 98a9      	CBI  0x15,1
                 ; 0000 0483   PORTC.2=0;
000865 98aa      	CBI  0x15,2
                 ; 0000 0484   PORTB.5=0;
000866 98c5      	CBI  0x18,5
                 ; 0000 0485  };
                 _0x1B1:
                 ; 0000 0486 
                 ; 0000 0487 if(P0==0 & show_termostat==1)
000867 d21c      	RCALL SUBOPT_0x5A
000868 d43c      	RCALL __EEPROMRDB
000869 e0a0      	LDI  R26,LOW(0)
00086a d3e6      	RCALL __EQB12
00086b 2e0e      	MOV  R0,R30
00086c d1b2      	RCALL SUBOPT_0x42
00086d 21e0      	AND  R30,R0
00086e f0a9      	BREQ _0x1B8
                 ; 0000 0488   {
                 ; 0000 0489    if((buffer-P5)<P6)
00086f d278      	RCALL SUBOPT_0x6E
000870 d279      	RCALL SUBOPT_0x6F
000871 d27d      	RCALL SUBOPT_0x70
000872 17ae      	CP   R26,R30
000873 07bf      	CPC  R27,R31
000874 f424      	BRGE _0x1B9
                 ; 0000 048A      {
                 ; 0000 048B       PORTB.5=0;
000875 98c5      	CBI  0x18,5
                 ; 0000 048C       PORTC.2=0;
000876 98aa      	CBI  0x15,2
                 ; 0000 048D       flag_enter=0;
000877 d249      	RCALL SUBOPT_0x65
                 ; 0000 048E       PORTC.0=0;
000878 98a8      	CBI  0x15,0
                 ; 0000 048F      };
                 _0x1B9:
                 ; 0000 0490    if((buffer+P5)>P6)
000879 d26e      	RCALL SUBOPT_0x6E
00087a d27c      	RCALL SUBOPT_0x71
00087b 17ea      	CP   R30,R26
00087c 07fb      	CPC  R31,R27
00087d f434      	BRGE _0x1C0
                 ; 0000 0491      {
                 ; 0000 0492       PORTB.5=1;
00087e 9ac5      	SBI  0x18,5
                 ; 0000 0493       PORTC.2=1;
00087f 9aaa      	SBI  0x15,2
                 ; 0000 0494       if(flag_enter==0)
000880 fc41      	SBRC R4,1
000881 c002      	RJMP _0x1C5
                 ; 0000 0495         {
                 ; 0000 0496          counter_buzzer=0;
000882 24dd      	CLR  R13
                 ; 0000 0497          flag_enter=1;
000883 d245      	RCALL SUBOPT_0x67
                 ; 0000 0498         };
                 _0x1C5:
                 ; 0000 0499      };
                 _0x1C0:
                 ; 0000 049A   };
                 _0x1B8:
                 ; 0000 049B 
                 ; 0000 049C if(P0==1 & show_termostat==1)
000884 d1ff      	RCALL SUBOPT_0x5A
000885 d41f      	RCALL __EEPROMRDB
000886 e0a1      	LDI  R26,LOW(1)
000887 d3c9      	RCALL __EQB12
000888 2e0e      	MOV  R0,R30
000889 d195      	RCALL SUBOPT_0x42
00088a 21e0      	AND  R30,R0
00088b f0a9      	BREQ _0x1C6
                 ; 0000 049D   {
                 ; 0000 049E    if((buffer+P5)<P6)
00088c d25b      	RCALL SUBOPT_0x6E
00088d d269      	RCALL SUBOPT_0x71
00088e 17ae      	CP   R26,R30
00088f 07bf      	CPC  R27,R31
000890 f434      	BRGE _0x1C7
                 ; 0000 049F      {
                 ; 0000 04A0       PORTB.5=1;
000891 9ac5      	SBI  0x18,5
                 ; 0000 04A1       PORTC.1=1;
000892 9aa9      	SBI  0x15,1
                 ; 0000 04A2       if(flag_enter==0)
000893 fc41      	SBRC R4,1
000894 c002      	RJMP _0x1CC
                 ; 0000 04A3         {
                 ; 0000 04A4          counter_buzzer=0;
000895 24dd      	CLR  R13
                 ; 0000 04A5          flag_enter=1;
000896 d232      	RCALL SUBOPT_0x67
                 ; 0000 04A6         };
                 _0x1CC:
                 ; 0000 04A7      };
                 _0x1C7:
                 ; 0000 04A8    if((buffer-P5)>P6)
000897 d250      	RCALL SUBOPT_0x6E
000898 d251      	RCALL SUBOPT_0x6F
000899 d255      	RCALL SUBOPT_0x70
00089a 17ea      	CP   R30,R26
00089b 07fb      	CPC  R31,R27
00089c f424      	BRGE _0x1CD
                 ; 0000 04A9      {
                 ; 0000 04AA       PORTB.5=0;
00089d 98c5      	CBI  0x18,5
                 ; 0000 04AB       PORTC.1=0;
00089e 98a9      	CBI  0x15,1
                 ; 0000 04AC       flag_enter=0;
00089f d221      	RCALL SUBOPT_0x65
                 ; 0000 04AD       PORTC.0=0;
0008a0 98a8      	CBI  0x15,0
                 ; 0000 04AE      }
                 ; 0000 04AF   };
                 _0x1CD:
                 _0x1C6:
                 ; 0000 04B0 
                 ; 0000 04B1 /*if(buzzer==50 && P3 == 1)
                 ; 0000 04B2   {
                 ; 0000 04B3      if(counter_buzzer<10 && flag_enter==1)
                 ; 0000 04B4      {
                 ; 0000 04B5       PORTC.0 = 1;
                 ; 0000 04B6       counter_buzzer++;
                 ; 0000 04B7      };
                 ; 0000 04B8   };
                 ; 0000 04B9 
                 ; 0000 04BA if(buzzer==100 && P3 == 1)
                 ; 0000 04BB   {
                 ; 0000 04BC    if(counter_buzzer<10 && flag_enter==1)
                 ; 0000 04BD      {
                 ; 0000 04BE       PORTC.0 = 0;
                 ; 0000 04BF       counter_buzzer++;
                 ; 0000 04C0      };
                 ; 0000 04C1   };
                 ; 0000 04C2   if (counter_buzzer>10)
                 ; 0000 04C3    {PORTC.0 = 0;};  */
                 ; 0000 04C4 
                 ; 0000 04C5 }
0008a1 91e9      	LD   R30,Y+
0008a2 bfef      	OUT  SREG,R30
0008a3 91f9      	LD   R31,Y+
0008a4 91e9      	LD   R30,Y+
0008a5 91b9      	LD   R27,Y+
0008a6 91a9      	LD   R26,Y+
0008a7 9199      	LD   R25,Y+
0008a8 9189      	LD   R24,Y+
0008a9 9019      	LD   R1,Y+
0008aa 9009      	LD   R0,Y+
0008ab 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 04CF {
                 _main:
                 ; .FSTART _main
                 ; 0000 04D0 // Declare your local variables here
                 ; 0000 04D1 
                 ; 0000 04D2 // Input/Output Ports initialization
                 ; 0000 04D3 // Port B initialization
                 ; 0000 04D4 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=Out
                 ; 0000 04D5 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (1<<DDB0);
0008ac eee1      	LDI  R30,LOW(225)
0008ad bbe7      	OUT  0x17,R30
                 ; 0000 04D6 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=T Bit3=P Bit2=P Bit1=P Bit0=0
                 ; 0000 04D7 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (1<<PORTB1) | (0<<PORTB0);
0008ae e0ee      	LDI  R30,LOW(14)
0008af bbe8      	OUT  0x18,R30
                 ; 0000 04D8 
                 ; 0000 04D9 // Port C initialization
                 ; 0000 04DA // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 04DB DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
0008b0 e0e7      	LDI  R30,LOW(7)
0008b1 bbe4      	OUT  0x14,R30
                 ; 0000 04DC // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=0 Bit1=0 Bit0=0
                 ; 0000 04DD PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0008b2 e0e0      	LDI  R30,LOW(0)
0008b3 bbe5      	OUT  0x15,R30
                 ; 0000 04DE 
                 ; 0000 04DF // Port D initialization
                 ; 0000 04E0 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 04E1 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
0008b4 efef      	LDI  R30,LOW(255)
0008b5 bbe1      	OUT  0x11,R30
                 ; 0000 04E2 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 04E3 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
0008b6 e0e0      	LDI  R30,LOW(0)
0008b7 bbe2      	OUT  0x12,R30
                 ; 0000 04E4 
                 ; 0000 04E5 // Timer/Counter 0 initialization
                 ; 0000 04E6 // Clock source: System Clock
                 ; 0000 04E7 // Clock value: 31,250 kHz
                 ; 0000 04E8 TCCR0=(1<<CS02) | (0<<CS01) | (0<<CS00);
0008b8 e0e4      	LDI  R30,LOW(4)
0008b9 bfe3      	OUT  0x33,R30
                 ; 0000 04E9 TCNT0=0x9C;
0008ba e9ec      	LDI  R30,LOW(156)
0008bb bfe2      	OUT  0x32,R30
                 ; 0000 04EA 
                 ; 0000 04EB // Timer/Counter 1 initialization
                 ; 0000 04EC // Clock source: System Clock
                 ; 0000 04ED // Clock value: 1000,000 kHz
                 ; 0000 04EE // Mode: Normal top=0xFFFF
                 ; 0000 04EF // OC1A output: Disconnected
                 ; 0000 04F0 // OC1B output: Disconnected
                 ; 0000 04F1 // Noise Canceler: Off
                 ; 0000 04F2 // Input Capture on Falling Edge
                 ; 0000 04F3 // Timer Period: 10 ms
                 ; 0000 04F4 // Timer1 Overflow Interrupt: On
                 ; 0000 04F5 // Input Capture Interrupt: Off
                 ; 0000 04F6 // Compare A Match Interrupt: Off
                 ; 0000 04F7 // Compare B Match Interrupt: Off
                 ; 0000 04F8 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0008bc e0e0      	LDI  R30,LOW(0)
0008bd bdef      	OUT  0x2F,R30
                 ; 0000 04F9 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (1<<CS11) | (0<<CS10);
0008be e0e2      	LDI  R30,LOW(2)
0008bf bdee      	OUT  0x2E,R30
                 ; 0000 04FA TCNT1H=0xD8;
0008c0 d164      	RCALL SUBOPT_0x43
                 ; 0000 04FB TCNT1L=0xF0;
                 ; 0000 04FC ICR1H=0x00;
0008c1 e0e0      	LDI  R30,LOW(0)
0008c2 bde7      	OUT  0x27,R30
                 ; 0000 04FD ICR1L=0x00;
0008c3 bde6      	OUT  0x26,R30
                 ; 0000 04FE OCR1AH=0x00;
0008c4 bdeb      	OUT  0x2B,R30
                 ; 0000 04FF OCR1AL=0x00;
0008c5 bdea      	OUT  0x2A,R30
                 ; 0000 0500 OCR1BH=0x00;
0008c6 bde9      	OUT  0x29,R30
                 ; 0000 0501 OCR1BL=0x00;
0008c7 bde8      	OUT  0x28,R30
                 ; 0000 0502 
                 ; 0000 0503 // Timer/Counter 2 initialization
                 ; 0000 0504 // Clock source: System Clock
                 ; 0000 0505 // Clock value: 1000,000 kHz
                 ; 0000 0506 // Mode: Normal top=0xFF
                 ; 0000 0507 // OC2 output: Disconnected
                 ; 0000 0508 // Timer Period: 0,2 ms
                 ; 0000 0509 ASSR=0<<AS2;
0008c8 bde2      	OUT  0x22,R30
                 ; 0000 050A TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (1<<CS21) | (0<<CS20);
0008c9 e0e2      	LDI  R30,LOW(2)
0008ca bde5      	OUT  0x25,R30
                 ; 0000 050B TCNT2=0x38;
0008cb e3e8      	LDI  R30,LOW(56)
0008cc bde4      	OUT  0x24,R30
                 ; 0000 050C OCR2=0x00;
0008cd e0e0      	LDI  R30,LOW(0)
0008ce bde3      	OUT  0x23,R30
                 ; 0000 050D 
                 ; 0000 050E // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 050F TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (1<<TOIE0);
0008cf e4e5      	LDI  R30,LOW(69)
0008d0 bfe9      	OUT  0x39,R30
                 ; 0000 0510 
                 ; 0000 0511 // External Interrupt(s) initialization
                 ; 0000 0512 // INT0: Off
                 ; 0000 0513 // INT1: Off
                 ; 0000 0514 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0008d1 e0e0      	LDI  R30,LOW(0)
0008d2 bfe5      	OUT  0x35,R30
                 ; 0000 0515 
                 ; 0000 0516 // USART initialization
                 ; 0000 0517 // USART disabled
                 ; 0000 0518 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0008d3 b9ea      	OUT  0xA,R30
                 ; 0000 0519 
                 ; 0000 051A // Analog Comparator initialization
                 ; 0000 051B // Analog Comparator: Off
                 ; 0000 051C // The Analog Comparator's positive input is
                 ; 0000 051D // connected to the AIN0 pin
                 ; 0000 051E // The Analog Comparator's negative input is
                 ; 0000 051F // connected to the AIN1 pin
                 ; 0000 0520 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0008d4 e8e0      	LDI  R30,LOW(128)
0008d5 b9e8      	OUT  0x8,R30
                 ; 0000 0521 
                 ; 0000 0522 // ADC initialization
                 ; 0000 0523 // ADC Clock frequency: 125,000 kHz
                 ; 0000 0524 // ADC Voltage Reference: AVCC pin
                 ; 0000 0525 ADMUX=ADC_VREF_TYPE;
0008d6 e4e0      	LDI  R30,LOW(64)
0008d7 b9e7      	OUT  0x7,R30
                 ; 0000 0526 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (0<<ADPS0);
0008d8 e8e6      	LDI  R30,LOW(134)
0008d9 b9e6      	OUT  0x6,R30
                 ; 0000 0527 SFIOR=(0<<ACME);
0008da e0e0      	LDI  R30,LOW(0)
0008db bfe0      	OUT  0x30,R30
                 ; 0000 0528 
                 ; 0000 0529 // Global enable interrupts
                 ; 0000 052A #asm("sei")
0008dc 9478      	sei
                 ; 0000 052B 
                 ; 0000 052C while (1)
                 _0x1D4:
                 ; 0000 052D       {
                 ; 0000 052E       }
0008dd cfff      	RJMP _0x1D4
                 ; 0000 052F }
                 _0x1D7:
0008de cfff      	RJMP _0x1D7
                 ; .FEND
                 ;
                 ;
                 
                 	.ESEG
                 _P4:
000000           	.BYTE 0x1
                 _P1:
000001 14
000002 00        	.DB  0x14,0x0
                 _P2:
000003 96
000004 00        	.DB  0x96,0x0
                 _P0:
000005           	.BYTE 0x1
                 _P3:
000006           	.BYTE 0x1
                 _P5:
000007           	.BYTE 0x1
                 _P6:
000008           	.BYTE 0x1
                 
                 	.DSEG
                 _kod_G000:
000160           	.BYTE 0x14
                 _par:
000174           	.BYTE 0x2
                 _buffer:
000176           	.BYTE 0x2
                 _minus:
000178           	.BYTE 0x2
                 _buzzer:
00017a           	.BYTE 0x2
                 _adc:
00017c           	.BYTE 0x2
                 _filterin:
00017e           	.BYTE 0x2
                 _wait_timer2:
000180           	.BYTE 0x2
                 _currtemp:
000182           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0008df e0f0      	LDI  R31,0
0008e0 9730      	SBIW R30,0
0008e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1:
0008e2 30e1      	CPI  R30,LOW(0x1)
0008e3 e0a0      	LDI  R26,HIGH(0x1)
0008e4 07fa      	CPC  R31,R26
0008e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x2:
0008e6 30e2      	CPI  R30,LOW(0x2)
0008e7 e0a0      	LDI  R26,HIGH(0x2)
0008e8 07fa      	CPC  R31,R26
0008e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
0008ea 30e3      	CPI  R30,LOW(0x3)
0008eb e0a0      	LDI  R26,HIGH(0x3)
0008ec 07fa      	CPC  R31,R26
0008ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
0008ee 30e4      	CPI  R30,LOW(0x4)
0008ef e0a0      	LDI  R26,HIGH(0x4)
0008f0 07fa      	CPC  R31,R26
0008f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5:
0008f2 30e5      	CPI  R30,LOW(0x5)
0008f3 e0a0      	LDI  R26,HIGH(0x5)
0008f4 07fa      	CPC  R31,R26
0008f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
0008f6 30e6      	CPI  R30,LOW(0x6)
0008f7 e0a0      	LDI  R26,HIGH(0x6)
0008f8 07fa      	CPC  R31,R26
0008f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
0008fa 30e7      	CPI  R30,LOW(0x7)
0008fb e0a0      	LDI  R26,HIGH(0x7)
0008fc 07fa      	CPC  R31,R26
0008fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8:
0008fe 30e8      	CPI  R30,LOW(0x8)
0008ff e0a0      	LDI  R26,HIGH(0x8)
000900 07fa      	CPC  R31,R26
000901 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x9:
000902 30e9      	CPI  R30,LOW(0x9)
000903 e0a0      	LDI  R26,HIGH(0x9)
000904 07fa      	CPC  R31,R26
000905 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000906 9060 0160 	LDS  R6,_kod_G000
000908 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000909 9090 0160 	LDS  R9,_kod_G000
00090b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 155 TIMES, CODE SIZE REDUCTION:460 WORDS
                 SUBOPT_0xC:
00090c 91a0 017c 	LDS  R26,_adc
00090e 91b0 017d 	LDS  R27,_adc+1
000910 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 51 TIMES, CODE SIZE REDUCTION:198 WORDS
                 SUBOPT_0xD:
000911 1bea      	SUB  R30,R26
000912 0bfb      	SBC  R31,R27
000913 d338      	RCALL __CWD1
000914 d251      	RCALL __CDF1
000915 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 51 TIMES, CODE SIZE REDUCTION:198 WORDS
                 SUBOPT_0xE:
000916 d282      	RCALL __ADDF12
000917 d384      	RCALL __PUTD1S0
000918 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000919 dff2      	RCALL SUBOPT_0xC
00091a 34a1      	CPI  R26,LOW(0x41)
00091b e0e0      	LDI  R30,HIGH(0x41)
00091c 07be      	CPC  R27,R30
00091d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
00091e dfed      	RCALL SUBOPT_0xC
00091f 34ab      	CPI  R26,LOW(0x4B)
000920 e0e0      	LDI  R30,HIGH(0x4B)
000921 07be      	CPC  R27,R30
000922 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000923 dfe8      	RCALL SUBOPT_0xC
000924 35a6      	CPI  R26,LOW(0x56)
000925 e0e0      	LDI  R30,HIGH(0x56)
000926 07be      	CPC  R27,R30
000927 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000928 dfe3      	RCALL SUBOPT_0xC
000929 36a3      	CPI  R26,LOW(0x63)
00092a e0e0      	LDI  R30,HIGH(0x63)
00092b 07be      	CPC  R27,R30
00092c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
00092d dfde      	RCALL SUBOPT_0xC
00092e 37a2      	CPI  R26,LOW(0x72)
00092f e0e0      	LDI  R30,HIGH(0x72)
000930 07be      	CPC  R27,R30
000931 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000932 dfd9      	RCALL SUBOPT_0xC
000933 38a4      	CPI  R26,LOW(0x84)
000934 e0e0      	LDI  R30,HIGH(0x84)
000935 07be      	CPC  R27,R30
000936 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000937 dfd4      	RCALL SUBOPT_0xC
000938 39a9      	CPI  R26,LOW(0x99)
000939 e0e0      	LDI  R30,HIGH(0x99)
00093a 07be      	CPC  R27,R30
00093b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
00093c dfcf      	RCALL SUBOPT_0xC
00093d 3ba1      	CPI  R26,LOW(0xB1)
00093e e0e0      	LDI  R30,HIGH(0xB1)
00093f 07be      	CPC  R27,R30
000940 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000941 dfca      	RCALL SUBOPT_0xC
000942 3cac      	CPI  R26,LOW(0xCC)
000943 e0e0      	LDI  R30,HIGH(0xCC)
000944 07be      	CPC  R27,R30
000945 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
                +
000946 eeac     +LDI R26 , LOW ( 0x3E3851EC )
000947 e5b1     +LDI R27 , HIGH ( 0x3E3851EC )
000948 e388     +LDI R24 , BYTE3 ( 0x3E3851EC )
000949 e39e     +LDI R25 , BYTE4 ( 0x3E3851EC )
                 	__GETD2N 0x3E3851EC
00094a d29e      	RCALL __MULF12
00094b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
00094c dfbf      	RCALL SUBOPT_0xC
00094d 3eac      	CPI  R26,LOW(0xEC)
00094e e0e0      	LDI  R30,HIGH(0xEC)
00094f 07be      	CPC  R27,R30
000950 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
000951 dfba      	RCALL SUBOPT_0xC
000952 30af      	CPI  R26,LOW(0x10F)
000953 e0e1      	LDI  R30,HIGH(0x10F)
000954 07be      	CPC  R27,R30
000955 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
000956 dfb5      	RCALL SUBOPT_0xC
000957 33a8      	CPI  R26,LOW(0x138)
000958 e0e1      	LDI  R30,HIGH(0x138)
000959 07be      	CPC  R27,R30
00095a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C:
00095b dfb0      	RCALL SUBOPT_0xC
00095c 36a4      	CPI  R26,LOW(0x164)
00095d e0e1      	LDI  R30,HIGH(0x164)
00095e 07be      	CPC  R27,R30
00095f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1D:
                +
000960 eaae     +LDI R26 , LOW ( 0x3DE147AE )
000961 e4b7     +LDI R27 , HIGH ( 0x3DE147AE )
000962 ee81     +LDI R24 , BYTE3 ( 0x3DE147AE )
000963 e39d     +LDI R25 , BYTE4 ( 0x3DE147AE )
                 	__GETD2N 0x3DE147AE
000964 d284      	RCALL __MULF12
000965 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E:
000966 dfa5      	RCALL SUBOPT_0xC
000967 39a5      	CPI  R26,LOW(0x195)
000968 e0e1      	LDI  R30,HIGH(0x195)
000969 07be      	CPC  R27,R30
00096a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:26 WORDS
                 SUBOPT_0x1F:
                +
00096b ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
00096c ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
00096d ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
00096e e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
00096f d279      	RCALL __MULF12
000970 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
000971 df9a      	RCALL SUBOPT_0xC
000972 3ca9      	CPI  R26,LOW(0x1C9)
000973 e0e1      	LDI  R30,HIGH(0x1C9)
000974 07be      	CPC  R27,R30
000975 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000976 df95      	RCALL SUBOPT_0xC
000977 3da5      	CPI  R26,LOW(0x1D5)
000978 e0e1      	LDI  R30,HIGH(0x1D5)
000979 07be      	CPC  R27,R30
00097a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x22:
                +
00097b e0aa     +LDI R26 , LOW ( 0x3DA3D70A )
00097c edb7     +LDI R27 , HIGH ( 0x3DA3D70A )
00097d ea83     +LDI R24 , BYTE3 ( 0x3DA3D70A )
00097e e39d     +LDI R25 , BYTE4 ( 0x3DA3D70A )
                 	__GETD2N 0x3DA3D70A
00097f d269      	RCALL __MULF12
000980 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
000981 df8a      	RCALL SUBOPT_0xC
000982 3ea0      	CPI  R26,LOW(0x1E0)
000983 e0e1      	LDI  R30,HIGH(0x1E0)
000984 07be      	CPC  R27,R30
000985 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x24:
                +
000986 eeac     +LDI R26 , LOW ( 0x3DB851EC )
000987 e5b1     +LDI R27 , HIGH ( 0x3DB851EC )
000988 eb88     +LDI R24 , BYTE3 ( 0x3DB851EC )
000989 e39d     +LDI R25 , BYTE4 ( 0x3DB851EC )
                 	__GETD2N 0x3DB851EC
00098a d25e      	RCALL __MULF12
00098b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
00098c df7f      	RCALL SUBOPT_0xC
00098d 3eab      	CPI  R26,LOW(0x1EB)
00098e e0e1      	LDI  R30,HIGH(0x1EB)
00098f 07be      	CPC  R27,R30
000990 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
000991 df7a      	RCALL SUBOPT_0xC
000992 3fa6      	CPI  R26,LOW(0x1F6)
000993 e0e1      	LDI  R30,HIGH(0x1F6)
000994 07be      	CPC  R27,R30
000995 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
000996 df75      	RCALL SUBOPT_0xC
000997 30a0      	CPI  R26,LOW(0x200)
000998 e0e2      	LDI  R30,HIGH(0x200)
000999 07be      	CPC  R27,R30
00099a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
00099b df70      	RCALL SUBOPT_0xC
00099c 30ac      	CPI  R26,LOW(0x20C)
00099d e0e2      	LDI  R30,HIGH(0x20C)
00099e 07be      	CPC  R27,R30
00099f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
0009a0 df6b      	RCALL SUBOPT_0xC
0009a1 31a8      	CPI  R26,LOW(0x218)
0009a2 e0e2      	LDI  R30,HIGH(0x218)
0009a3 07be      	CPC  R27,R30
0009a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
0009a5 df66      	RCALL SUBOPT_0xC
0009a6 32a4      	CPI  R26,LOW(0x224)
0009a7 e0e2      	LDI  R30,HIGH(0x224)
0009a8 07be      	CPC  R27,R30
0009a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
0009aa df61      	RCALL SUBOPT_0xC
0009ab 32ae      	CPI  R26,LOW(0x22E)
0009ac e0e2      	LDI  R30,HIGH(0x22E)
0009ad 07be      	CPC  R27,R30
0009ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
0009af df5c      	RCALL SUBOPT_0xC
0009b0 33a9      	CPI  R26,LOW(0x239)
0009b1 e0e2      	LDI  R30,HIGH(0x239)
0009b2 07be      	CPC  R27,R30
0009b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D:
0009b4 df57      	RCALL SUBOPT_0xC
0009b5 34a5      	CPI  R26,LOW(0x245)
0009b6 e0e2      	LDI  R30,HIGH(0x245)
0009b7 07be      	CPC  R27,R30
0009b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
0009b9 df52      	RCALL SUBOPT_0xC
0009ba 35a1      	CPI  R26,LOW(0x251)
0009bb e0e2      	LDI  R30,HIGH(0x251)
0009bc 07be      	CPC  R27,R30
0009bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F:
0009be df4d      	RCALL SUBOPT_0xC
0009bf 35ad      	CPI  R26,LOW(0x25D)
0009c0 e0e2      	LDI  R30,HIGH(0x25D)
0009c1 07be      	CPC  R27,R30
0009c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
0009c3 df48      	RCALL SUBOPT_0xC
0009c4 36a7      	CPI  R26,LOW(0x267)
0009c5 e0e2      	LDI  R30,HIGH(0x267)
0009c6 07be      	CPC  R27,R30
0009c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
0009c8 df43      	RCALL SUBOPT_0xC
0009c9 37a4      	CPI  R26,LOW(0x274)
0009ca e0e2      	LDI  R30,HIGH(0x274)
0009cb 07be      	CPC  R27,R30
0009cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
0009cd df3e      	RCALL SUBOPT_0xC
0009ce 37ae      	CPI  R26,LOW(0x27E)
0009cf e0e2      	LDI  R30,HIGH(0x27E)
0009d0 07be      	CPC  R27,R30
0009d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33:
0009d2 df39      	RCALL SUBOPT_0xC
0009d3 38aa      	CPI  R26,LOW(0x28A)
0009d4 e0e2      	LDI  R30,HIGH(0x28A)
0009d5 07be      	CPC  R27,R30
0009d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34:
0009d7 df34      	RCALL SUBOPT_0xC
0009d8 39a5      	CPI  R26,LOW(0x295)
0009d9 e0e2      	LDI  R30,HIGH(0x295)
0009da 07be      	CPC  R27,R30
0009db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35:
0009dc df2f      	RCALL SUBOPT_0xC
0009dd 39af      	CPI  R26,LOW(0x29F)
0009de e0e2      	LDI  R30,HIGH(0x29F)
0009df 07be      	CPC  R27,R30
0009e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36:
0009e1 df2a      	RCALL SUBOPT_0xC
0009e2 3aa9      	CPI  R26,LOW(0x2A9)
0009e3 e0e2      	LDI  R30,HIGH(0x2A9)
0009e4 07be      	CPC  R27,R30
0009e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
                +
0009e6 e0a0     +LDI R26 , LOW ( 0x41200000 )
0009e7 e0b0     +LDI R27 , HIGH ( 0x41200000 )
0009e8 e280     +LDI R24 , BYTE3 ( 0x41200000 )
0009e9 e491     +LDI R25 , BYTE4 ( 0x41200000 )
                 	__GETD2N 0x41200000
0009ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38:
0009eb df20      	RCALL SUBOPT_0xC
0009ec 3dae      	CPI  R26,LOW(0x2DE)
0009ed e0e2      	LDI  R30,HIGH(0x2DE)
0009ee 07be      	CPC  R27,R30
0009ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39:
0009f0 df1b      	RCALL SUBOPT_0xC
0009f1 30af      	CPI  R26,LOW(0x30F)
0009f2 e0e3      	LDI  R30,HIGH(0x30F)
0009f3 07be      	CPC  R27,R30
0009f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
0009f5 df16      	RCALL SUBOPT_0xC
0009f6 33ac      	CPI  R26,LOW(0x33C)
0009f7 e0e3      	LDI  R30,HIGH(0x33C)
0009f8 07be      	CPC  R27,R30
0009f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
0009fa df11      	RCALL SUBOPT_0xC
0009fb 36a3      	CPI  R26,LOW(0x363)
0009fc e0e3      	LDI  R30,HIGH(0x363)
0009fd 07be      	CPC  R27,R30
0009fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C:
0009ff df0c      	RCALL SUBOPT_0xC
000a00 38a4      	CPI  R26,LOW(0x384)
000a01 e0e3      	LDI  R30,HIGH(0x384)
000a02 07be      	CPC  R27,R30
000a03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D:
000a04 df07      	RCALL SUBOPT_0xC
000a05 3aa0      	CPI  R26,LOW(0x3A0)
000a06 e0e3      	LDI  R30,HIGH(0x3A0)
000a07 07be      	CPC  R27,R30
000a08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E:
000a09 df02      	RCALL SUBOPT_0xC
000a0a 3ba6      	CPI  R26,LOW(0x3B6)
000a0b e0e3      	LDI  R30,HIGH(0x3B6)
000a0c 07be      	CPC  R27,R30
000a0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x3F:
000a0e 91a0 0176 	LDS  R26,_buffer
000a10 91b0 0177 	LDS  R27,_buffer+1
000a12 36a4      	CPI  R26,LOW(0x64)
000a13 e0e0      	LDI  R30,HIGH(0x64)
000a14 07be      	CPC  R27,R30
000a15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x40:
000a16 ba72      	OUT  0x12,R7
000a17 98c0      	CBI  0x18,0
000a18 98c6      	CBI  0x18,6
000a19 9ac7      	SBI  0x18,7
000a1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x41:
000a1b ba92      	OUT  0x12,R9
000a1c 9ac0      	SBI  0x18,0
000a1d 98c6      	CBI  0x18,6
000a1e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x42:
000a1f e0a0      	LDI  R26,0
000a20 fc25      	SBRC R2,5
000a21 e0a1      	LDI  R26,1
000a22 e0e1      	LDI  R30,LOW(1)
000a23 d22d      	RCALL __EQB12
000a24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
000a25 ede8      	LDI  R30,LOW(216)
000a26 bded      	OUT  0x2D,R30
000a27 efe0      	LDI  R30,LOW(240)
000a28 bdec      	OUT  0x2C,R30
000a29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x44:
000a2a 91ed      	LD   R30,X+
000a2b 91fd      	LD   R31,X+
000a2c 9631      	ADIW R30,1
000a2d 93fe      	ST   -X,R31
000a2e 93ee      	ST   -X,R30
000a2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x45:
000a30 d6ee      	RCALL _readtemp
000a31 e7a6      	LDI  R26,LOW(_buffer)
000a32 e0b1      	LDI  R27,HIGH(_buffer)
000a33 d0fb      	RCALL __CFD1
000a34 93ed      	ST   X+,R30
000a35 93fc      	ST   X,R31
000a36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x46:
000a37 e8a2      	LDI  R26,LOW(_currtemp)
000a38 e0b1      	LDI  R27,HIGH(_currtemp)
000a39 d0f5      	RCALL __CFD1
000a3a 93ed      	ST   X+,R30
000a3b 93fc      	ST   X,R31
000a3c 91a0 0182 	LDS  R26,_currtemp
000a3e 91b0 0183 	LDS  R27,_currtemp+1
000a40 c619      	RJMP _getkodes
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x47:
000a41 e0a8      	LDI  R26,LOW(_P6)
000a42 e0b0      	LDI  R27,HIGH(_P6)
000a43 d261      	RCALL __EEPROMRDB
000a44 e0f0      	LDI  R31,0
000a45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x48:
                +
000a46 9090 016d+LDS R9 , _kod_G000 + ( 13 )
                 	__GETBRMN 9,_kod_G000,13
000a48 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x49:
000a49 91a0 0174 	LDS  R26,_par
000a4b 91b0 0175 	LDS  R27,_par+1
000a4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
000a4e e0a6      	LDI  R26,LOW(_P3)
000a4f e0b0      	LDI  R27,HIGH(_P3)
000a50 d254      	RCALL __EEPROMRDB
000a51 30e1      	CPI  R30,LOW(0x1)
000a52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4B:
000a53 91a0 017a 	LDS  R26,_buzzer
000a55 91b0 017b 	LDS  R27,_buzzer+1
000a57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x4C:
000a58 94e8      	CLT
000a59 f825      	BLD  R2,5
000a5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x4D:
000a5b 94e8      	CLT
000a5c f826      	BLD  R2,6
000a5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4E:
000a5e 94c3      	INC  R12
000a5f 94e8      	CLT
000a60 f820      	BLD  R2,0
000a61 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4F:
000a62 94ca      	DEC  R12
000a63 94e8      	CLT
000a64 f821      	BLD  R2,1
000a65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x50:
000a66 94e8      	CLT
000a67 f822      	BLD  R2,2
000a68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x51:
000a69 94e8      	CLT
000a6a f824      	BLD  R2,4
000a6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x52:
000a6c 9468      	SET
000a6d f827      	BLD  R2,7
000a6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x53:
000a6f 94e8      	CLT
000a70 f831      	BLD  R3,1
000a71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x54:
000a72 94c3      	INC  R12
000a73 94e8      	CLT
000a74 f821      	BLD  R2,1
000a75 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x55:
000a76 94e8      	CLT
000a77 f820      	BLD  R2,0
000a78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x56:
000a79 94ca      	DEC  R12
000a7a cffb      	RJMP SUBOPT_0x55
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x57:
000a7b 94e8      	CLT
000a7c f821      	BLD  R2,1
000a7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x58:
000a7e 94e8      	CLT
000a7f f827      	BLD  R2,7
000a80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x59:
000a81 9468      	SET
000a82 f840      	BLD  R4,0
000a83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5A:
000a84 e0a5      	LDI  R26,LOW(_P0)
000a85 e0b0      	LDI  R27,HIGH(_P0)
000a86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5B:
000a87 2ece      	MOV  R12,R30
000a88 94e8      	CLT
000a89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5C:
000a8a 94e8      	CLT
000a8b f840      	BLD  R4,0
000a8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
000a8d e0a1      	LDI  R26,LOW(_P1)
000a8e e0b0      	LDI  R27,HIGH(_P1)
000a8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x5E:
000a90 d210      	RCALL __EEPROMRDW
000a91 93e0 0174 	STS  _par,R30
000a93 93f0 0175 	STS  _par+1,R31
000a95 9468      	SET
000a96 f841      	BLD  R4,1
000a97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:46 WORDS
                 SUBOPT_0x5F:
000a98 91e0 0174 	LDS  R30,_par
000a9a 91f0 0175 	LDS  R31,_par+1
000a9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x60:
000a9d 9735      	SBIW R30,5
000a9e 93e0 0174 	STS  _par,R30
000aa0 93f0 0175 	STS  _par+1,R31
000aa2 91a0 0175 	LDS  R26,_par+1
000aa4 23aa      	TST  R26
000aa5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x61:
000aa6 e9e6      	LDI  R30,LOW(150)
000aa7 e0f0      	LDI  R31,HIGH(150)
000aa8 93e0 0174 	STS  _par,R30
000aaa 93f0 0175 	STS  _par+1,R31
000aac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x62:
000aad dfea      	RCALL SUBOPT_0x5F
000aae 9635      	ADIW R30,5
000aaf 93e0 0174 	STS  _par,R30
000ab1 93f0 0175 	STS  _par+1,R31
000ab3 df95      	RCALL SUBOPT_0x49
000ab4 39a7      	CPI  R26,LOW(0x97)
000ab5 e0e0      	LDI  R30,HIGH(0x97)
000ab6 07be      	CPC  R27,R30
000ab7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x63:
000ab8 e0e0      	LDI  R30,LOW(0)
000ab9 93e0 0174 	STS  _par,R30
000abb 93e0 0175 	STS  _par+1,R30
000abd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x64:
000abe e0a3      	LDI  R26,LOW(_P2)
000abf e0b0      	LDI  R27,HIGH(_P2)
000ac0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x65:
000ac1 94e8      	CLT
000ac2 f841      	BLD  R4,1
000ac3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x66:
000ac4 93e0 0174 	STS  _par,R30
000ac6 93f0 0175 	STS  _par+1,R31
000ac8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x67:
000ac9 9468      	SET
000aca f841      	BLD  R4,1
000acb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x68:
000acc dfcb      	RCALL SUBOPT_0x5F
000acd 93e0 0178 	STS  _minus,R30
000acf 93f0 0179 	STS  _minus+1,R31
000ad1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x69:
000ad2 91a0 0175 	LDS  R26,_par+1
000ad4 23aa      	TST  R26
000ad5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6A:
000ad6 9468      	SET
000ad7 f843      	BLD  R4,3
000ad8 dfbf      	RCALL SUBOPT_0x5F
000ad9 d15d      	RCALL __ANEGW1
000ada 93e0 0178 	STS  _minus,R30
000adc 93f0 0179 	STS  _minus+1,R31
000ade 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6B:
000adf e0a7      	LDI  R26,LOW(_P5)
000ae0 e0b0      	LDI  R27,HIGH(_P5)
000ae1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6C:
000ae2 d1c2      	RCALL __EEPROMRDB
000ae3 e0f0      	LDI  R31,0
000ae4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6D:
000ae5 e0a8      	LDI  R26,LOW(_P6)
000ae6 e0b0      	LDI  R27,HIGH(_P6)
000ae7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6E:
000ae8 dff6      	RCALL SUBOPT_0x6B
000ae9 cff8      	RJMP SUBOPT_0x6C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x6F:
000aea 91a0 0176 	LDS  R26,_buffer
000aec 91b0 0177 	LDS  R27,_buffer+1
000aee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x70:
000aef 1bae      	SUB  R26,R30
000af0 0bbf      	SBC  R27,R31
000af1 010d      	MOVW R0,R26
000af2 dff2      	RCALL SUBOPT_0x6D
000af3 d1b1      	RCALL __EEPROMRDB
000af4 01d0      	MOVW R26,R0
000af5 e0f0      	LDI  R31,0
000af6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x71:
000af7 dff2      	RCALL SUBOPT_0x6F
000af8 0fea      	ADD  R30,R26
000af9 1ffb      	ADC  R31,R27
000afa 010f      	MOVW R0,R30
000afb dfe9      	RCALL SUBOPT_0x6D
000afc d1a8      	RCALL __EEPROMRDB
000afd 01d0      	MOVW R26,R0
000afe e0f0      	LDI  R31,0
000aff 9508      	RET
                 
                 
                 	.CSEG
                 __ROUND_REPACK:
000b00 2355      	TST  R21
000b01 f442      	BRPL __REPACK
000b02 3850      	CPI  R21,0x80
000b03 f411      	BRNE __ROUND_REPACK0
000b04 ffe0      	SBRS R30,0
000b05 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000b06 9631      	ADIW R30,1
000b07 1f69      	ADC  R22,R25
000b08 1f79      	ADC  R23,R25
000b09 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000b0a e850      	LDI  R21,0x80
000b0b 2757      	EOR  R21,R23
000b0c f411      	BRNE __REPACK0
000b0d 935f      	PUSH R21
000b0e c0c8      	RJMP __ZERORES
                 __REPACK0:
000b0f 3f5f      	CPI  R21,0xFF
000b10 f031      	BREQ __REPACK1
000b11 0f66      	LSL  R22
000b12 0c00      	LSL  R0
000b13 9557      	ROR  R21
000b14 9567      	ROR  R22
000b15 2f75      	MOV  R23,R21
000b16 9508      	RET
                 __REPACK1:
000b17 935f      	PUSH R21
000b18 2000      	TST  R0
000b19 f00a      	BRMI __REPACK2
000b1a c0c8      	RJMP __MAXRES
                 __REPACK2:
000b1b c0c1      	RJMP __MINRES
                 
                 __UNPACK:
000b1c e850      	LDI  R21,0x80
000b1d 2e19      	MOV  R1,R25
000b1e 2215      	AND  R1,R21
000b1f 0f88      	LSL  R24
000b20 1f99      	ROL  R25
000b21 2795      	EOR  R25,R21
000b22 0f55      	LSL  R21
000b23 9587      	ROR  R24
                 
                 __UNPACK1:
000b24 e850      	LDI  R21,0x80
000b25 2e07      	MOV  R0,R23
000b26 2205      	AND  R0,R21
000b27 0f66      	LSL  R22
000b28 1f77      	ROL  R23
000b29 2775      	EOR  R23,R21
000b2a 0f55      	LSL  R21
000b2b 9567      	ROR  R22
000b2c 9508      	RET
                 
                 __CFD1U:
000b2d 9468      	SET
000b2e c001      	RJMP __CFD1U0
                 __CFD1:
000b2f 94e8      	CLT
                 __CFD1U0:
000b30 935f      	PUSH R21
000b31 dff2      	RCALL __UNPACK1
000b32 3870      	CPI  R23,0x80
000b33 f018      	BRLO __CFD10
000b34 3f7f      	CPI  R23,0xFF
000b35 f408      	BRCC __CFD10
000b36 c0a0      	RJMP __ZERORES
                 __CFD10:
000b37 e156      	LDI  R21,22
000b38 1b57      	SUB  R21,R23
000b39 f4aa      	BRPL __CFD11
000b3a 9551      	NEG  R21
000b3b 3058      	CPI  R21,8
000b3c f40e      	BRTC __CFD19
000b3d 3059      	CPI  R21,9
                 __CFD19:
000b3e f030      	BRLO __CFD17
000b3f efef      	SER  R30
000b40 efff      	SER  R31
000b41 ef6f      	SER  R22
000b42 e77f      	LDI  R23,0x7F
000b43 f977      	BLD  R23,7
000b44 c01a      	RJMP __CFD15
                 __CFD17:
000b45 2777      	CLR  R23
000b46 2355      	TST  R21
000b47 f0b9      	BREQ __CFD15
                 __CFD18:
000b48 0fee      	LSL  R30
000b49 1fff      	ROL  R31
000b4a 1f66      	ROL  R22
000b4b 1f77      	ROL  R23
000b4c 955a      	DEC  R21
000b4d f7d1      	BRNE __CFD18
000b4e c010      	RJMP __CFD15
                 __CFD11:
000b4f 2777      	CLR  R23
                 __CFD12:
000b50 3058      	CPI  R21,8
000b51 f028      	BRLO __CFD13
000b52 2fef      	MOV  R30,R31
000b53 2ff6      	MOV  R31,R22
000b54 2f67      	MOV  R22,R23
000b55 5058      	SUBI R21,8
000b56 cff9      	RJMP __CFD12
                 __CFD13:
000b57 2355      	TST  R21
000b58 f031      	BREQ __CFD15
                 __CFD14:
000b59 9576      	LSR  R23
000b5a 9567      	ROR  R22
000b5b 95f7      	ROR  R31
000b5c 95e7      	ROR  R30
000b5d 955a      	DEC  R21
000b5e f7d1      	BRNE __CFD14
                 __CFD15:
000b5f 2000      	TST  R0
000b60 f40a      	BRPL __CFD16
000b61 d0d9      	RCALL __ANEGD1
                 __CFD16:
000b62 915f      	POP  R21
000b63 9508      	RET
                 
                 __CDF1U:
000b64 9468      	SET
000b65 c001      	RJMP __CDF1U0
                 __CDF1:
000b66 94e8      	CLT
                 __CDF1U0:
000b67 9730      	SBIW R30,0
000b68 4060      	SBCI R22,0
000b69 4070      	SBCI R23,0
000b6a f0b1      	BREQ __CDF10
000b6b 2400      	CLR  R0
000b6c f026      	BRTS __CDF11
000b6d 2377      	TST  R23
000b6e f412      	BRPL __CDF11
000b6f 9400      	COM  R0
000b70 d0ca      	RCALL __ANEGD1
                 __CDF11:
000b71 2e17      	MOV  R1,R23
000b72 e17e      	LDI  R23,30
000b73 2011      	TST  R1
                 __CDF12:
000b74 f032      	BRMI __CDF13
000b75 957a      	DEC  R23
000b76 0fee      	LSL  R30
000b77 1fff      	ROL  R31
000b78 1f66      	ROL  R22
000b79 1c11      	ROL  R1
000b7a cff9      	RJMP __CDF12
                 __CDF13:
000b7b 2fef      	MOV  R30,R31
000b7c 2ff6      	MOV  R31,R22
000b7d 2d61      	MOV  R22,R1
000b7e 935f      	PUSH R21
000b7f df8a      	RCALL __REPACK
000b80 915f      	POP  R21
                 __CDF10:
000b81 9508      	RET
                 
                 __SWAPACC:
000b82 934f      	PUSH R20
000b83 01af      	MOVW R20,R30
000b84 01fd      	MOVW R30,R26
000b85 01da      	MOVW R26,R20
000b86 01ab      	MOVW R20,R22
000b87 01bc      	MOVW R22,R24
000b88 01ca      	MOVW R24,R20
000b89 2d40      	MOV  R20,R0
000b8a 2c01      	MOV  R0,R1
000b8b 2e14      	MOV  R1,R20
000b8c 914f      	POP  R20
000b8d 9508      	RET
                 
                 __UADD12:
000b8e 0fea      	ADD  R30,R26
000b8f 1ffb      	ADC  R31,R27
000b90 1f68      	ADC  R22,R24
000b91 9508      	RET
                 
                 __NEGMAN1:
000b92 95e0      	COM  R30
000b93 95f0      	COM  R31
000b94 9560      	COM  R22
000b95 5fef      	SUBI R30,-1
000b96 4fff      	SBCI R31,-1
000b97 4f6f      	SBCI R22,-1
000b98 9508      	RET
                 
                 __ADDF12:
000b99 935f      	PUSH R21
000b9a df81      	RCALL __UNPACK
000b9b 3890      	CPI  R25,0x80
000b9c f139      	BREQ __ADDF129
                 
                 __ADDF120:
000b9d 3870      	CPI  R23,0x80
000b9e f121      	BREQ __ADDF128
                 __ADDF121:
000b9f 2f57      	MOV  R21,R23
000ba0 1b59      	SUB  R21,R25
000ba1 f12b      	BRVS __ADDF1211
000ba2 f412      	BRPL __ADDF122
000ba3 dfde      	RCALL __SWAPACC
000ba4 cffa      	RJMP __ADDF121
                 __ADDF122:
000ba5 3158      	CPI  R21,24
000ba6 f018      	BRLO __ADDF123
000ba7 27aa      	CLR  R26
000ba8 27bb      	CLR  R27
000ba9 2788      	CLR  R24
                 __ADDF123:
000baa 3058      	CPI  R21,8
000bab f028      	BRLO __ADDF124
000bac 2fab      	MOV  R26,R27
000bad 2fb8      	MOV  R27,R24
000bae 2788      	CLR  R24
000baf 5058      	SUBI R21,8
000bb0 cff9      	RJMP __ADDF123
                 __ADDF124:
000bb1 2355      	TST  R21
000bb2 f029      	BREQ __ADDF126
                 __ADDF125:
000bb3 9586      	LSR  R24
000bb4 95b7      	ROR  R27
000bb5 95a7      	ROR  R26
000bb6 955a      	DEC  R21
000bb7 f7d9      	BRNE __ADDF125
                 __ADDF126:
000bb8 2d50      	MOV  R21,R0
000bb9 2551      	EOR  R21,R1
000bba f072      	BRMI __ADDF127
000bbb dfd2      	RCALL __UADD12
000bbc f438      	BRCC __ADDF129
000bbd 9567      	ROR  R22
000bbe 95f7      	ROR  R31
000bbf 95e7      	ROR  R30
000bc0 9573      	INC  R23
000bc1 f413      	BRVC __ADDF129
000bc2 c020      	RJMP __MAXRES
                 __ADDF128:
000bc3 dfbe      	RCALL __SWAPACC
                 __ADDF129:
000bc4 df45      	RCALL __REPACK
000bc5 915f      	POP  R21
000bc6 9508      	RET
                 __ADDF1211:
000bc7 f7d8      	BRCC __ADDF128
000bc8 cffb      	RJMP __ADDF129
                 __ADDF127:
000bc9 1bea      	SUB  R30,R26
000bca 0bfb      	SBC  R31,R27
000bcb 0b68      	SBC  R22,R24
000bcc f051      	BREQ __ZERORES
000bcd f410      	BRCC __ADDF1210
000bce 9400      	COM  R0
000bcf dfc2      	RCALL __NEGMAN1
                 __ADDF1210:
000bd0 2366      	TST  R22
000bd1 f392      	BRMI __ADDF129
000bd2 0fee      	LSL  R30
000bd3 1fff      	ROL  R31
000bd4 1f66      	ROL  R22
000bd5 957a      	DEC  R23
000bd6 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000bd7 27ee      	CLR  R30
000bd8 27ff      	CLR  R31
000bd9 2766      	CLR  R22
000bda 2777      	CLR  R23
000bdb 915f      	POP  R21
000bdc 9508      	RET
                 
                 __MINRES:
000bdd efef      	SER  R30
000bde efff      	SER  R31
000bdf e76f      	LDI  R22,0x7F
000be0 ef7f      	SER  R23
000be1 915f      	POP  R21
000be2 9508      	RET
                 
                 __MAXRES:
000be3 efef      	SER  R30
000be4 efff      	SER  R31
000be5 e76f      	LDI  R22,0x7F
000be6 e77f      	LDI  R23,0x7F
000be7 915f      	POP  R21
000be8 9508      	RET
                 
                 __MULF12:
000be9 935f      	PUSH R21
000bea df31      	RCALL __UNPACK
000beb 3870      	CPI  R23,0x80
000bec f351      	BREQ __ZERORES
000bed 3890      	CPI  R25,0x80
000bee f341      	BREQ __ZERORES
000bef 2401      	EOR  R0,R1
000bf0 9408      	SEC
000bf1 1f79      	ADC  R23,R25
000bf2 f423      	BRVC __MULF124
000bf3 f31c      	BRLT __ZERORES
                 __MULF125:
000bf4 2000      	TST  R0
000bf5 f33a      	BRMI __MINRES
000bf6 cfec      	RJMP __MAXRES
                 __MULF124:
000bf7 920f      	PUSH R0
000bf8 931f      	PUSH R17
000bf9 932f      	PUSH R18
000bfa 933f      	PUSH R19
000bfb 934f      	PUSH R20
000bfc 2711      	CLR  R17
000bfd 2722      	CLR  R18
000bfe 2799      	CLR  R25
000bff 9f68      	MUL  R22,R24
000c00 01a0      	MOVW R20,R0
000c01 9f8f      	MUL  R24,R31
000c02 2d30      	MOV  R19,R0
000c03 0d41      	ADD  R20,R1
000c04 1f59      	ADC  R21,R25
000c05 9f6b      	MUL  R22,R27
000c06 0d30      	ADD  R19,R0
000c07 1d41      	ADC  R20,R1
000c08 1f59      	ADC  R21,R25
000c09 9f8e      	MUL  R24,R30
000c0a d027      	RCALL __MULF126
000c0b 9fbf      	MUL  R27,R31
000c0c d025      	RCALL __MULF126
000c0d 9f6a      	MUL  R22,R26
000c0e d023      	RCALL __MULF126
000c0f 9fbe      	MUL  R27,R30
000c10 d01d      	RCALL __MULF127
000c11 9faf      	MUL  R26,R31
000c12 d01b      	RCALL __MULF127
000c13 9fae      	MUL  R26,R30
000c14 0d11      	ADD  R17,R1
000c15 1f29      	ADC  R18,R25
000c16 1f39      	ADC  R19,R25
000c17 1f49      	ADC  R20,R25
000c18 1f59      	ADC  R21,R25
000c19 2fe3      	MOV  R30,R19
000c1a 2ff4      	MOV  R31,R20
000c1b 2f65      	MOV  R22,R21
000c1c 2f52      	MOV  R21,R18
000c1d 914f      	POP  R20
000c1e 913f      	POP  R19
000c1f 912f      	POP  R18
000c20 911f      	POP  R17
000c21 900f      	POP  R0
000c22 2366      	TST  R22
000c23 f02a      	BRMI __MULF122
000c24 0f55      	LSL  R21
000c25 1fee      	ROL  R30
000c26 1fff      	ROL  R31
000c27 1f66      	ROL  R22
000c28 c002      	RJMP __MULF123
                 __MULF122:
000c29 9573      	INC  R23
000c2a f24b      	BRVS __MULF125
                 __MULF123:
000c2b ded4      	RCALL __ROUND_REPACK
000c2c 915f      	POP  R21
000c2d 9508      	RET
                 
                 __MULF127:
000c2e 0d10      	ADD  R17,R0
000c2f 1d21      	ADC  R18,R1
000c30 1f39      	ADC  R19,R25
000c31 c002      	RJMP __MULF128
                 __MULF126:
000c32 0d20      	ADD  R18,R0
000c33 1d31      	ADC  R19,R1
                 __MULF128:
000c34 1f49      	ADC  R20,R25
000c35 1f59      	ADC  R21,R25
000c36 9508      	RET
                 
                 __ANEGW1:
000c37 95f1      	NEG  R31
000c38 95e1      	NEG  R30
000c39 40f0      	SBCI R31,0
000c3a 9508      	RET
                 
                 __ANEGD1:
000c3b 95f0      	COM  R31
000c3c 9560      	COM  R22
000c3d 9570      	COM  R23
000c3e 95e1      	NEG  R30
000c3f 4fff      	SBCI R31,-1
000c40 4f6f      	SBCI R22,-1
000c41 4f7f      	SBCI R23,-1
000c42 9508      	RET
                 
                 __ASRW4:
000c43 95f5      	ASR  R31
000c44 95e7      	ROR  R30
                 __ASRW3:
000c45 95f5      	ASR  R31
000c46 95e7      	ROR  R30
                 __ASRW2:
000c47 95f5      	ASR  R31
000c48 95e7      	ROR  R30
000c49 95f5      	ASR  R31
000c4a 95e7      	ROR  R30
000c4b 9508      	RET
                 
                 __CWD1:
000c4c 2f6f      	MOV  R22,R31
000c4d 0f66      	ADD  R22,R22
000c4e 0b66      	SBC  R22,R22
000c4f 2f76      	MOV  R23,R22
000c50 9508      	RET
                 
                 __EQB12:
000c51 17ea      	CP   R30,R26
000c52 e0e1      	LDI  R30,1
000c53 f009      	BREQ __EQB12T
000c54 27ee      	CLR  R30
                 __EQB12T:
000c55 9508      	RET
                 
                 __MULW12U:
000c56 9ffa      	MUL  R31,R26
000c57 2df0      	MOV  R31,R0
000c58 9feb      	MUL  R30,R27
000c59 0df0      	ADD  R31,R0
000c5a 9fea      	MUL  R30,R26
000c5b 2de0      	MOV  R30,R0
000c5c 0df1      	ADD  R31,R1
000c5d 9508      	RET
                 
                 __MULW12:
000c5e d02a      	RCALL __CHKSIGNW
000c5f dff6      	RCALL __MULW12U
000c60 f40e      	BRTC __MULW121
000c61 dfd5      	RCALL __ANEGW1
                 __MULW121:
000c62 9508      	RET
                 
                 __DIVW21U:
000c63 2400      	CLR  R0
000c64 2411      	CLR  R1
000c65 e190      	LDI  R25,16
                 __DIVW21U1:
000c66 0faa      	LSL  R26
000c67 1fbb      	ROL  R27
000c68 1c00      	ROL  R0
000c69 1c11      	ROL  R1
000c6a 1a0e      	SUB  R0,R30
000c6b 0a1f      	SBC  R1,R31
000c6c f418      	BRCC __DIVW21U2
000c6d 0e0e      	ADD  R0,R30
000c6e 1e1f      	ADC  R1,R31
000c6f c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000c70 60a1      	SBR  R26,1
                 __DIVW21U3:
000c71 959a      	DEC  R25
000c72 f799      	BRNE __DIVW21U1
000c73 01fd      	MOVW R30,R26
000c74 01d0      	MOVW R26,R0
000c75 9508      	RET
                 
                 __DIVW21:
000c76 d012      	RCALL __CHKSIGNW
000c77 dfeb      	RCALL __DIVW21U
000c78 f40e      	BRTC __DIVW211
000c79 dfbd      	RCALL __ANEGW1
                 __DIVW211:
000c7a 9508      	RET
                 
                 __MODW21:
000c7b 94e8      	CLT
000c7c ffb7      	SBRS R27,7
000c7d c004      	RJMP __MODW211
000c7e 95a0      	COM  R26
000c7f 95b0      	COM  R27
000c80 9611      	ADIW R26,1
000c81 9468      	SET
                 __MODW211:
000c82 fdf7      	SBRC R31,7
000c83 dfb3      	RCALL __ANEGW1
000c84 dfde      	RCALL __DIVW21U
000c85 01fd      	MOVW R30,R26
000c86 f40e      	BRTC __MODW212
000c87 dfaf      	RCALL __ANEGW1
                 __MODW212:
000c88 9508      	RET
                 
                 __CHKSIGNW:
000c89 94e8      	CLT
000c8a fff7      	SBRS R31,7
000c8b c002      	RJMP __CHKSW1
000c8c dfaa      	RCALL __ANEGW1
000c8d 9468      	SET
                 __CHKSW1:
000c8e ffb7      	SBRS R27,7
000c8f c006      	RJMP __CHKSW2
000c90 95a0      	COM  R26
000c91 95b0      	COM  R27
000c92 9611      	ADIW R26,1
000c93 f800      	BLD  R0,0
000c94 9403      	INC  R0
000c95 fa00      	BST  R0,0
                 __CHKSW2:
000c96 9508      	RET
                 
                 __GETD1S0:
000c97 81e8      	LD   R30,Y
000c98 81f9      	LDD  R31,Y+1
000c99 816a      	LDD  R22,Y+2
000c9a 817b      	LDD  R23,Y+3
000c9b 9508      	RET
                 
                 __PUTD1S0:
000c9c 83e8      	ST   Y,R30
000c9d 83f9      	STD  Y+1,R31
000c9e 836a      	STD  Y+2,R22
000c9f 837b      	STD  Y+3,R23
000ca0 9508      	RET
                 
                 __EEPROMRDW:
000ca1 9611      	ADIW R26,1
000ca2 d002      	RCALL __EEPROMRDB
000ca3 2ffe      	MOV  R31,R30
000ca4 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
000ca5 99e1      	SBIC EECR,EEWE
000ca6 cffe      	RJMP __EEPROMRDB
000ca7 93ff      	PUSH R31
000ca8 b7ff      	IN   R31,SREG
000ca9 94f8      	CLI
000caa bbae      	OUT  EEARL,R26
000cab bbbf      	OUT  EEARH,R27
000cac 9ae0      	SBI  EECR,EERE
000cad b3ed      	IN   R30,EEDR
000cae bfff      	OUT  SREG,R31
000caf 91ff      	POP  R31
000cb0 9508      	RET
                 
                 __EEPROMWRW:
000cb1 d007      	RCALL __EEPROMWRB
000cb2 9611      	ADIW R26,1
000cb3 93ef      	PUSH R30
000cb4 2fef      	MOV  R30,R31
000cb5 d003      	RCALL __EEPROMWRB
000cb6 91ef      	POP  R30
000cb7 9711      	SBIW R26,1
000cb8 9508      	RET
                 
                 __EEPROMWRB:
000cb9 9be1      	SBIS EECR,EEWE
000cba c002      	RJMP __EEPROMWRB1
000cbb 95a8      	WDR
000cbc cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000cbd b79f      	IN   R25,SREG
000cbe 94f8      	CLI
000cbf bbae      	OUT  EEARL,R26
000cc0 bbbf      	OUT  EEARH,R27
000cc1 9ae0      	SBI  EECR,EERE
000cc2 b38d      	IN   R24,EEDR
000cc3 17e8      	CP   R30,R24
000cc4 f019      	BREQ __EEPROMWRB0
000cc5 bbed      	OUT  EEDR,R30
000cc6 9ae2      	SBI  EECR,EEMWE
000cc7 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000cc8 bf9f      	OUT  SREG,R25
000cc9 9508      	RET
                 
                 __CPW02:
000cca 2400      	CLR  R0
000ccb 160a      	CP   R0,R26
000ccc 060b      	CPC  R0,R27
000ccd 9508      	RET
                 
                 __SAVELOCR4:
000cce 933a      	ST   -Y,R19
                 __SAVELOCR3:
000ccf 932a      	ST   -Y,R18
                 __SAVELOCR2:
000cd0 931a      	ST   -Y,R17
000cd1 930a      	ST   -Y,R16
000cd2 9508      	RET
                 
                 __LOADLOCR4:
000cd3 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000cd4 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000cd5 8119      	LDD  R17,Y+1
000cd6 8108      	LD   R16,Y
000cd7 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8A register use summary:
r0 :  59 r1 :  25 r2 :  83 r3 :  39 r4 :  26 r5 :   0 r6 :  19 r7 :  24 
r8 :   6 r9 :  18 r10:   3 r11:   9 r12:  28 r13:   5 r14:   0 r15:   2 
r16:   4 r17:   9 r18:   9 r19:  12 r20:  16 r21:  55 r22:  46 r23:  38 
r24: 107 r25: 108 r26: 293 r27: 194 r28:   5 r29:   1 r30: 476 r31: 174 
x  :  15 y  :  80 z  :   7 
Registers used: 33 out of 35 (94.3%)

ATmega8A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  20 add   :  12 
adiw  :  12 and   :   6 andi  :   0 asr   :   4 bclr  :   0 bld   :  60 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   0 break :   0 breq  :  24 
brge  :  15 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   5 
brlt  : 111 brmi  :   6 brne  :  75 brpl  :  10 brsh  :   2 brtc  :   4 
brts  :   1 brvc  :   3 brvs  :   3 bset  :   0 bst   :   1 cbi   :  22 
cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 clr   :  27 
cls   :   0 clt   :  35 clv   :   0 clz   :   0 com   :  12 cp    :  24 
cpc   :  73 cpi   :  82 cpse  :   0 dec   :  11 des   :   0 eor   :   6 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   9 
inc   :  11 ld    :  34 ldd   :  12 ldi   : 664 lds   :  76 lpm   :   7 
lsl   :  11 lsr   :   2 mov   :  60 movw  :  22 mul   :  12 muls  :   0 
mulsu :   0 neg   :   4 nop   :   0 or    :   3 ori   :   1 out   :  53 
pop   :  15 push  :  14 rcall : 768 ret   : 146 reti  :   3 rjmp  : 224 
rol   :  16 ror   :  16 sbc   :   6 sbci  :   8 sbi   :  17 sbic  :   4 
sbis  :   2 sbiw  :  35 sbr   :   1 sbrc  :  40 sbrs  :  56 sec   :   1 
seh   :   0 sei   :   1 sen   :   0 ser   :  10 ses   :   0 set   :  27 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  46 std   :   3 
sts   :  24 sub   :   6 subi  :   3 swap  :   0 tst   :  13 wdr   :   1 

Instructions used: 74 out of 114 (64.9%)

ATmega8A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0019b0   6522     54   6576    8192  80.3%
[.dseg] 0x000060 0x000184      0     36     36    1024   3.5%
[.eseg] 0x000000 0x000009      0      9      9     512   1.8%

Assembly complete, 0 errors, 8 warnings
